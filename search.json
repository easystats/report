[{"path":[]},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement dom.makowski@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://easystats.github.io/report/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://easystats.github.io/report/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"easystats guidelines 0.1.0 people much welcome contribute code, documentation, testing suggestions. package aims beginner-friendly. Even ’re new open-source way life, new coding github stuff, encourage try submitting pull requests (PRs). “’d like help, ’m good enough programming yet” ’s alright, don’t worry! can always dig code, documentation tests. always typos fix, docs improve, details add, code lines document, tests add… Even smaller PRs appreciated. “’d like help, don’t know start” can look around issue section find features / ideas / bugs start working . can also open new issue just say ’re , interested helping . might ideas adapted skills. “’m sure suggestion idea worthwile” Enough impostor syndrome! suggestions opinions good, even ’s just thought , ’s always good receive feedback. “waste time ? get credit?” Software contributions getting valued academic world, good time collaborate us! Authors substantial contributions added within authors list. ’re also keen including eventual academic publications. Anyway, starting important! enter whole new world, new fantastic point view… fork repo, changes submit . work together make best :)","code":""},{"path":"https://easystats.github.io/report/CONTRIBUTING.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"Contribution Guidelines","text":"Please document comment code, purpose step (code line) stated clear understandable way. submitting change, please read R style guide particular easystats convention code-style keep consistency code formatting. Regarding style guide, note exception: put readability clarity everything. Thus, like underscores full names (prefer model_performance modelperf interpret_odds_logistic intoddslog). start code, make sure ’re dev branch (“advanced”). , can create new branch named feature (e.g., feature_lightsaber) changes. Finally, submit branch merged dev branch. , every now , dev branch merge master, new package version.","code":""},{"path":"https://easystats.github.io/report/CONTRIBUTING.html","id":"checks-to-do-before-submission","dir":"","previous_headings":"","what":"Checks to do before submission","title":"Contribution Guidelines","text":"Make sure documentation (roxygen) good Make sure add tests new functions Run: styler::style_pkg(): Automatic style formatting lintr::lint_package(): Style checks devtools::check(): General checks","code":""},{"path":"https://easystats.github.io/report/CONTRIBUTING.html","id":"useful-materials","dir":"","previous_headings":"","what":"Useful Materials","title":"Contribution Guidelines","text":"Understanding GitHub flow","code":""},{"path":"https://easystats.github.io/report/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 report authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://easystats.github.io/report/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with {report}","title":"Getting help with {report}","text":"Thanks using report. filing issue, places explore pieces put together make process smooth possible. Try see updating latest versions easystats packages help solve issue. can easily : easystats::install_latest(). running , forget refresh R session. good way reset R session RStudio press Ctrl+Shift+F10 shortcut, reload packages . doesn’t solve problem, email maintainer send data script email. Instead, try making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! resource used tidyverse team. act attempting write reprex often lead discovering solution issue, process oftentimes important outcome. Unless ’s bug, reprex made clear. case, armed reprex, next step figure ask: ’s question: start StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let’s discuss try figure ! problem bug feature request, can easily return report . Finally, opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. Thanks help may Force (R) !","code":""},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"what-should-i-cite","dir":"Articles","previous_headings":"","what":"What should I cite?","title":"Report and Cite Packages","text":"Ideally, indeed cite packages used. However, ’s often possible cite manuscript body. Therefore, recommend following guidelines:","code":""},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"cite-the-mainimportant-packages-in-the-manuscript","dir":"Articles","previous_headings":"What should I cite?","what":"1. Cite the main/important packages in the manuscript","title":"Report and Cite Packages","text":"done packages central specific study (.e., got results reported) rather data manipulation tools (even though much, , important). example: Statistical analysis carried using R 4.1.0 (R Core Team, 2021), rstanarm (v2.13.1; Gabry & Goodrich, 2016) report (v0.2.0; Makowski, Patil, & Lüdecke, 2019) packages. full reproducible code available Supplementary Materials.","code":""},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"present-everything-in-supplementary-materials","dir":"Articles","previous_headings":"What should I cite?","what":"2. Present everything in Supplementary Materials","title":"Report and Cite Packages","text":", Supplementary Materials, can show packages functions used. quickly, explicitly reproducible fashion, recommend writing Supplementary Materials R Markdown, can generate docs pdf files can submit along manuscript. Moreover, ’re using R, can include (usually end) every used package’s citation using cite_packages() function report package. example: Makowski D, Lüdecke D, Patil , Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting Practical Tool Improve Reproducibility Methodological Best Practices Adoption.” CRAN. doi:10.32614/CRAN.package.report https://doi.org/10.32614/CRAN.package.report, https://easystats.github.io/report/. R Core Team (2025). R: Language Environment Statistical Computing. R Foundation Statistical Computing, Vienna, Austria. https://www.R-project.org/.","code":"library(report)  cite_packages()"},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"where","dir":"Articles","previous_headings":"","what":"Where","title":"Report and Cite Packages","text":"Finding right citation information sometimes complicated. R, process made quite easy, simply run citation(\"packagename\"). instance, citation(\"bayestestR\"): languages, Python Julia, might little trickier, quick search Google (github) provide necessary information (version, authors date). Keep mind ’s better slightly incomplete citation citation .","code":"To cite bayestestR in publications use:    Makowski, D., Ben-Shachar, M., \\& Lüdecke, D. (2019). bayestestR:   Describing Effects and their Uncertainty, Existence and Significance   within the Bayesian Framework. Journal of Open Source Software,   4(40), 1541. doi:10.21105/joss.01541  A BibTeX entry for LaTeX users is    @Article{,     title = {bayestestR: Describing Effects and their Uncertainty, Existence and Significance within the Bayesian Framework.},     author = {Dominique Makowski and Mattan S. Ben-Shachar and Daniel Lüdecke},     journal = {Journal of Open Source Software},     doi = {10.21105/joss.01541},     year = {2019},     number = {40},     volume = {4},     pages = {1541},     url = {https://joss.theoj.org/papers/10.21105/joss.01541},   }"},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"cite_easystats","dir":"Articles","previous_headings":"","what":"cite_easystats()","title":"Report and Cite Packages","text":"want cite easystats ecosystem, can use cite_easystats() function: Thanks crediting us! 😀 can cite easystats ecosystem follows:","code":"cite_easystats()"},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"citations","dir":"Articles","previous_headings":"","what":"Citations","title":"Report and Cite Packages","text":"Analyses conducted using easystats collection packages (Lüdecke et al., 2019/2023).","code":""},{"path":"https://easystats.github.io/report/articles/cite_packages.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Report and Cite Packages","text":"Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, ., Wiernik, B. M., Bacher, Etienne, & Thériault, R. (2023). easystats: Streamline model interpretation, visualization, reporting [R package]. https://easystats.github.io/easystats/ (Original work published 2019)","code":""},{"path":"https://easystats.github.io/report/articles/new_models.html","id":"open-an-issue-on-github","dir":"Articles","previous_headings":"","what":"1. Open an Issue on GitHub","title":"Supporting New Models","text":"model like report currently supported report, can suggest us. can opening issue https://github.com/easystats/report/issues, saying like see, can eventually help (e.g., can help us test new functionality).","code":""},{"path":"https://easystats.github.io/report/articles/new_models.html","id":"use-template-file","dir":"Articles","previous_headings":"","what":"2. Use template file","title":"Supporting New Models","text":"Copy paste template file, replace function one like see supported.","code":""},{"path":"https://easystats.github.io/report/articles/report.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Automated Reporting: Getting Started","text":"First, install R R studio. , copy paste following lines console: Great! report package now installed loaded session.","code":"install.packages(\"remotes\") remotes::install_github(\"easystats/report\") # You only need to do that once library(\"report\") # Load the package every time you start R"},{"path":"https://easystats.github.io/report/articles/report.html","id":"supported-objects","dir":"Articles","previous_headings":"","what":"Supported Objects","title":"Automated Reporting: Getting Started","text":"report package works two step fashion: - First, create report object report() function. - Second, report object can displayed either textually (default output) table, using .data.frame(). Moreover, can also access compact version report using summary() report object.","code":""},{"path":"https://easystats.github.io/report/articles/report.html","id":"dataframes","dir":"Articles","previous_headings":"Supported Objects","what":"Dataframes","title":"Automated Reporting: Getting Started","text":"entire dataframe supplied, report provide descriptive statistics columns:","code":"report(iris) # The data contains 150 observations of the following 5 # variables: #  #   - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = # 5.80, MAD = 1.04, range: [4.30, 7.90], Skewness = 0.31, # Kurtosis = -0.55, 0% missing #   - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = # 3.00, MAD = 0.44, range: [2, 4.40], Skewness = 0.32, # Kurtosis = 0.23, 0% missing #   - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = # 4.35, MAD = 1.85, range: [1, 6.90], Skewness = -0.27, # Kurtosis = -1.40, 0% missing #   - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = # 1.30, MAD = 1.04, range: [0.10, 2.50], Skewness = -0.10, # Kurtosis = -1.34, 0% missing #   - Species: 3 levels, namely setosa (n = 50, 33.33%), # versicolor (n = 50, 33.33%) and virginica (n = 50, 33.33%)"},{"path":"https://easystats.github.io/report/articles/report.html","id":"grouped-dataframes","dir":"Articles","previous_headings":"Supported Objects","what":"Grouped Dataframes","title":"Automated Reporting: Getting Started","text":"dataframe can also grouped dataframe (dplyr package), case report return separate report level grouping variable. Additionally, instead textual summary, report also allows one return tabular summary using report_table() function:","code":"iris |>   group_by(Species) |>   report_table() # Group      |     Variable | n_Obs | Mean |   SD | Median # -------------------------------------------------------- # setosa     | Sepal.Length |    50 | 5.01 | 0.35 |   5.00 # setosa     |  Sepal.Width |    50 | 3.43 | 0.38 |   3.40 # setosa     | Petal.Length |    50 | 1.46 | 0.17 |   1.50 # setosa     |  Petal.Width |    50 | 0.25 | 0.11 |   0.20 # versicolor | Sepal.Length |    50 | 5.94 | 0.52 |   5.90 # versicolor |  Sepal.Width |    50 | 2.77 | 0.31 |   2.80 # versicolor | Petal.Length |    50 | 4.26 | 0.47 |   4.35 # versicolor |  Petal.Width |    50 | 1.33 | 0.20 |   1.30 # virginica  | Sepal.Length |    50 | 6.59 | 0.64 |   6.50 # virginica  |  Sepal.Width |    50 | 2.97 | 0.32 |   3.00 # virginica  | Petal.Length |    50 | 5.55 | 0.55 |   5.55 # virginica  |  Petal.Width |    50 | 2.03 | 0.27 |   2.00 #  # Group      |  MAD |  Min |  Max | Skewness | Kurtosis | n_Missing # ----------------------------------------------------------------- # setosa     | 0.30 | 4.30 | 5.80 |     0.12 |    -0.25 |         0 # setosa     | 0.37 | 2.30 | 4.40 |     0.04 |     0.95 |         0 # setosa     | 0.15 | 1.00 | 1.90 |     0.11 |     1.02 |         0 # setosa     | 0.00 | 0.10 | 0.60 |     1.25 |     1.72 |         0 # versicolor | 0.52 | 4.90 | 7.00 |     0.11 |    -0.53 |         0 # versicolor | 0.30 | 2.00 | 3.40 |    -0.36 |    -0.37 |         0 # versicolor | 0.52 | 3.00 | 5.10 |    -0.61 |     0.05 |         0 # versicolor | 0.22 | 1.00 | 1.80 |    -0.03 |    -0.41 |         0 # virginica  | 0.59 | 4.90 | 7.90 |     0.12 |     0.03 |         0 # virginica  | 0.30 | 2.20 | 3.80 |     0.37 |     0.71 |         0 # virginica  | 0.67 | 4.50 | 6.90 |     0.55 |    -0.15 |         0 # virginica  | 0.30 | 1.40 | 2.50 |    -0.13 |    -0.60 |         0"},{"path":"https://easystats.github.io/report/articles/report.html","id":"correlations-t-test-and-wilcox-test","dir":"Articles","previous_headings":"Supported Objects","what":"Correlations, t-test, and Wilcox test","title":"Automated Reporting: Getting Started","text":"report can also used provide automated summaries statistical model objects correlation, t-tests, Wilcoxon tests, etc.","code":"report(t.test(formula = mtcars$wt ~ mtcars$am)) # Effect sizes were labelled following Cohen's (1988) # recommendations. #  # The Welch Two Sample t-test testing the difference of # mtcars$wt by mtcars$am (mean in group 0 = 3.77, mean in # group 1 = 2.41) suggests that the effect is positive, # statistically significant, and large (difference = 1.36, # 95% CI [0.85, 1.86], t(29.23) = 5.49, p < .001; Cohen's d = # 1.93, 95% CI [1.08, 2.77]) report(cor.test(mtcars$mpg, mtcars$wt))"},{"path":[]},{"path":"https://easystats.github.io/report/articles/report.html","id":"linear-regression-lm","dir":"Articles","previous_headings":"Supported Objects > Regression models","what":"Linear regression (lm)","title":"Automated Reporting: Getting Started","text":"start simple: simple linear regression","code":"model <- lm(wt ~ am + mpg, data = mtcars)  report(model) # We fitted a linear model (estimated using OLS) to predict # wt with am and mpg (formula: wt ~ am + mpg). The model # explains a statistically significant and substantial # proportion of variance (R2 = 0.80, F(2, 29) = 57.66, p < # .001, adj. R2 = 0.79). The model's intercept, corresponding # to am = 0 and mpg = 0, is at 5.74 (95% CI [5.11, 6.36], # t(29) = 18.64, p < .001). Within this model: #  #   - The effect of am is statistically significant and # negative (beta = -0.53, 95% CI [-0.94, -0.11], t(29) = # -2.58, p = 0.015; Std. beta = -0.27, 95% CI [-0.48, -0.06]) #   - The effect of mpg is statistically significant and # negative (beta = -0.11, 95% CI [-0.15, -0.08], t(29) = # -6.79, p < .001; Std. beta = -0.71, 95% CI [-0.92, -0.49]) #  # Standardized parameters were obtained by fitting the model # on a standardized version of the dataset. 95% Confidence # Intervals (CIs) and p-values were computed using a Wald # t-distribution approximation."},{"path":"https://easystats.github.io/report/articles/report.html","id":"anova-aov","dir":"Articles","previous_headings":"Supported Objects > Regression models","what":"anova (aov)","title":"Automated Reporting: Getting Started","text":"close cousin ANOVA also covered report:","code":"model <- aov(wt ~ am + mpg, data = mtcars)  report(model) # The ANOVA (formula: wt ~ am + mpg) suggests that: #  #   - The main effect of am is statistically significant and # large (F(1, 29) = 69.21, p < .001; Eta2 (partial) = 0.70, # 95% CI [0.54, 1.00]) #   - The main effect of mpg is statistically significant and # large (F(1, 29) = 46.12, p < .001; Eta2 (partial) = 0.61, # 95% CI [0.42, 1.00]) #  # Effect sizes were labelled following Field's (2013) # recommendations."},{"path":"https://easystats.github.io/report/articles/report.html","id":"general-linear-models-glms-glm","dir":"Articles","previous_headings":"Supported Objects > Regression models","what":"General Linear Models (GLMs) (glm)","title":"Automated Reporting: Getting Started","text":"","code":"model <- glm(vs ~ mpg + cyl, data = mtcars, family = \"binomial\")  report(model) # We fitted a logistic model (estimated using ML) to predict # vs with mpg and cyl (formula: vs ~ mpg + cyl). The model's # explanatory power is substantial (Tjur's R2 = 0.67). The # model's intercept, corresponding to mpg = 0 and cyl = 0, is # at 15.97 (95% CI [-2.71, 44.69], p = 0.147). Within this # model: #  #   - The effect of mpg is statistically non-significant and # negative (beta = -0.16, 95% CI [-0.71, 0.34], p = 0.496; # Std. beta = -0.98, 95% CI [-4.28, 2.03]) #   - The effect of cyl is statistically significant and # negative (beta = -2.15, 95% CI [-5.19, -0.54], p = 0.047; # Std. beta = -3.84, 95% CI [-9.26, -0.97]) #  # Standardized parameters were obtained by fitting the model # on a standardized version of the dataset. 95% Confidence # Intervals (CIs) and p-values were computed using a Wald # z-distribution approximation."},{"path":"https://easystats.github.io/report/articles/report.html","id":"linear-mixed-effects-models-mermod","dir":"Articles","previous_headings":"Supported Objects > Regression models","what":"Linear Mixed-Effects Models (merMod)","title":"Automated Reporting: Getting Started","text":"","code":"library(lme4)  model <- lmer(Reaction ~ Days + (Days | Subject), data = sleepstudy)  report(model) # We fitted a linear mixed model (estimated using REML and # nloptwrap optimizer) to predict Reaction with Days # (formula: Reaction ~ Days). The model included Days as # random effects (formula: ~Days | Subject). The model's # total explanatory power is substantial (conditional R2 = # 0.80) and the part related to the fixed effects alone # (marginal R2) is of 0.28. The model's intercept, # corresponding to Days = 0, is at 251.41 (95% CI [237.94, # 264.87], t(174) = 36.84, p < .001). Within this model: #  #   - The effect of Days is statistically significant and # positive (beta = 10.47, 95% CI [7.42, 13.52], t(174) = # 6.77, p < .001; Std. beta = 0.54, 95% CI [0.38, 0.69]) #  # Standardized parameters were obtained by fitting the model # on a standardized version of the dataset. 95% Confidence # Intervals (CIs) and p-values were computed using a Wald # t-distribution approximation."},{"path":"https://easystats.github.io/report/articles/report_table.html","id":"getting-started-with-correlations","dir":"Articles","previous_headings":"","what":"Getting started with correlations","title":"Publication-ready Tables","text":"Let’s start demonstrating features simple tests. function report_table() can used create table many R objects. can also obtain shorter version running summary() output (going store variable called t - like table) example , running just t ran print(t) hood, prints table inside console. However, one can nicely display table markdown documents using display(). Alternative hypothesis: true correlation equal 0 can customize table, adding significance stars, Table 1 Correlation mtcars (n = 32) dataset. *** p < .001 Alternative hypothesis: true correlation equal 0","code":"results <- cor.test(mtcars$mpg, mtcars$wt)  report_table(results) # Pearson's product-moment correlation #  # Parameter1 | Parameter2 |     r |         95% CI | t(30) |      p # ----------------------------------------------------------------- # mtcars$mpg |  mtcars$wt | -0.87 | [-0.93, -0.74] | -9.56 | < .001 #  # Alternative hypothesis: two.sided t <- summary(report_table(results)) t # Pearson's product-moment correlation #  # Parameter1 | Parameter2 |     r |         95% CI |      p # --------------------------------------------------------- # mtcars$mpg |  mtcars$wt | -0.87 | [-0.93, -0.74] | < .001 #  # Alternative hypothesis: two.sided display(t) display(t,   stars = TRUE,   title = \"Table 1\",   footer = \"Correlation in the mtcars (n = 32) dataset.\\n*** p < .001\" )"},{"path":"https://easystats.github.io/report/articles/report_table.html","id":"t-tests","dir":"Articles","previous_headings":"","what":"t-tests, …","title":"Publication-ready Tables","text":"works similarly t-tests. Note , default, report_table() prettifies printing: means column names content , underneath, necessarily printed, can bit confusing. instance, confidence interval CI appears one column, actually made three columns! One can access raw table dataframe: fact, function used prettify output called insight::format_table() accessible , can prettify output keeping data frame. Also, can join results multiple tables:","code":"results <- t.test(mtcars$mpg ~ mtcars$am)  t <- summary(report_table(results)) t # Difference |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI # ---------------------------------------------------------------------------- # -7.24      | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53] #  # Alternative hypothesis: two.sided as.data.frame(t) #   Difference   CI    CI_low   CI_high         t df_error # 1  -7.244939 0.95 -11.28019 -3.209684 -3.767123 18.33225 #             p Alternative  Cohens_d Cohens_d_CI_low # 1 0.001373638   two.sided -1.411046       -2.260021 #   Cohens_d_CI_high # 1       -0.5342256 insight::format_table(as.data.frame(t), stars = TRUE) #   Difference          95% CI t(18.33)       p Alternative # 1      -7.24 [-11.28, -3.21]    -3.77 0.001**   two.sided #   Cohen's d  Cohen's d  CI # 1     -1.41 [-2.26, -0.53] results1 <- t.test(mtcars$mpg ~ mtcars$am) results2 <- t.test(mtcars$wt ~ mtcars$am) results3 <- t.test(mtcars$qsec ~ mtcars$am)  results <- c(   report_table(results1),   report_table(results2),   report_table(results3) ) display(results)"},{"path":[]},{"path":"https://easystats.github.io/report/articles/report_table.html","id":"linear-models","dir":"Articles","previous_headings":"","what":"Linear Models","title":"Publication-ready Tables","text":"","code":"model <- lm(Petal.Length ~ Species * Petal.Width, data = iris)  report_table(model) # Parameter                          | Coefficient # ------------------------------------------------ # (Intercept)                        |        1.33 # Species [versicolor]               |        0.45 # Species [virginica]                |        2.91 # Petal Width                        |        0.55 # Species [versicolor] × Petal Width |        1.32 # Species [virginica] × Petal Width  |        0.10 #                                    |             # AIC                                |             # AICc                               |             # BIC                                |             # R2                                 |             # R2 (adj.)                          |             # Sigma                              |             #  # Parameter                          |        95% CI | t(144) # ----------------------------------------------------------- # (Intercept)                        | [ 1.07, 1.59] |  10.14 # Species [versicolor]               | [-0.28, 1.19] |   1.21 # Species [virginica]                | [ 2.11, 3.72] |   7.17 # Petal Width                        | [-0.42, 1.52] |   1.12 # Species [versicolor] × Petal Width | [ 0.23, 2.42] |   2.38 # Species [virginica] × Petal Width  | [-0.94, 1.14] |   0.19 #                                    |               |        # AIC                                |               |        # AICc                               |               |        # BIC                                |               |        # R2                                 |               |        # R2 (adj.)                          |               |        # Sigma                              |               |        #  # Parameter                          |      p | Std. Coef. # -------------------------------------------------------- # (Intercept)                        | < .001 |      -1.01 # Species [versicolor]               | 0.227  |       1.16 # Species [virginica]                | < .001 |       1.72 # Petal Width                        | 0.267  |       0.24 # Species [versicolor] × Petal Width | 0.019  |       0.57 # Species [virginica] × Petal Width  | 0.848  |       0.04 #                                    |        |            # AIC                                |        |            # AICc                               |        |            # BIC                                |        |            # R2                                 |        |            # R2 (adj.)                          |        |            # Sigma                              |        |            #  # Parameter                          | Std. Coef. 95% CI |    Fit # --------------------------------------------------------------- # (Intercept)                        |    [-1.53, -0.48] |        # Species [versicolor]               |    [ 0.63,  1.69] |        # Species [virginica]                |    [ 1.16,  2.28] |        # Petal Width                        |    [-0.18,  0.65] |        # Species [versicolor] × Petal Width |    [ 0.10,  1.05] |        # Species [virginica] × Petal Width  |    [-0.40,  0.49] |        #                                    |                   |        # AIC                                |                   | 128.29 # AICc                               |                   | 129.08 # BIC                                |                   | 149.36 # R2                                 |                   |   0.96 # R2 (adj.)                          |                   |   0.96 # Sigma                              |                   |   0.36"},{"path":"https://easystats.github.io/report/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author. Daniel Lüdecke. Author. Indrajeet Patil. Author. Rémi Thériault. Author, maintainer. Mattan S. Ben-Shachar. Author. Brenton M. Wiernik. Author. Rudolf Siegel. Contributor. Camden Bock. Contributor.","code":""},{"path":"https://easystats.github.io/report/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski, D., Lüdecke, D., Patil, ., Thériault, R., Ben-Shachar, M.S., & Wiernik, B.M. (2023). Automated Results Reporting Practical Tool Improve Reproducibility Methodological Best Practices Adoption. CRAN. Available https://easystats.github.io/report/ doi: 10.32614/CRAN.package.report","code":"@Article{,   title = {Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption},   author = {Dominique Makowski and Daniel Lüdecke and Indrajeet Patil and Rémi Thériault and Mattan S. Ben-Shachar and Brenton M. Wiernik},   year = {2023},   journal = {CRAN},   doi = {10.32614/CRAN.package.report},   url = {https://easystats.github.io/report/}, }"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":null,"dir":"","previous_headings":"","what":"report: Automated Results Reporting R Package","title":"report: Automated Results Reporting R Package","text":"Always follow instructions EXACTLY search additional context information incomplete found error.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"report: Automated Results Reporting R Package","text":"report package R package automated reporting results statistical models. part easystats ecosystem, providing functions convert statistical models data frames textual reports suited publication. package follows standard R package development practices focuses ensuring standardization quality results reporting. CRITICAL REMINDER: Every PR must include version number updates DESCRIPTION changelog entries NEWS.md. See Version Management section detailed instructions. VERSION MANAGEMENT FREQUENCY: Version numbers NEWS.md updated PER PULL REQUEST, per commit. Multiple commits within PR use version number.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"pre-configured-environment","dir":"","previous_headings":"","what":"Pre-Configured Environment","title":"report: Automated Results Reporting R Package","text":"NEW: repository now includes .github/workflows/copilot-setup-steps.yml automatically configures development environment GitHub Copilot starts working. workflow intelligently determines setup needed using sophisticated conditional logic: R package development tasks (editing .R files, functions, tests, etc.), pre-installs: - R system dependencies - Core development packages (rlang, dplyr, testthat, lintr, styler, roxygen2, reprex, devtools) - Complete reprex setup: knitr, rmarkdown, pandoc, clipr (dependencies needed creating reproducible examples) - Easystats ecosystem packages (insight, bayestestR, effectsize, performance, parameters, datawizard) - report package (built installed) - required dependencies (Imports) - suggested packages pre-installed save time resources - Verified functionality core functions reprex documentation/configuration tasks (editing .md files, .yml files, copilot instructions, etc.), runs minimal setup: - Repository checkout - SMART DETECTION: Uses PR file analysis (GitHub API) git diff accurate change detection - Skips time-consuming R installation package setup - Saves significant time non-code changes (2-3 minutes) pre-configured environment working, can skip manual installation steps go directly Build Development Workflow section. Verification: Check environment pre-configured running: works without errors, environment ready. , follow manual setup .","code":"R --no-restore --no-save -e 'library(report); packageVersion(\"report\")'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"resource-conscious-two-step-development-approach","dir":"","previous_headings":"","what":"Resource-Conscious Two-Step Development Approach","title":"report: Automated Results Reporting R Package","text":"CRITICAL PHILOSOPHY: Installing R dependencies expensive (time, resources, environment impact). setup workflow designed minimize resource usage two-step approach:","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"two-step-development-scenarios","dir":"","previous_headings":"Resource-Conscious Two-Step Development Approach","what":"Two-Step Development Scenarios","title":"report: Automated Results Reporting R Package","text":"Scenario 1: Documentation/Configuration Changes - First run: R installation (necessary) ✅ - Change documentation: Still R installation (necessary) ✅ - Perfect resource optimization Scenario 2: Code Changes Required - First run: R installation (intentionally delayed save resources) - Make code changes best ability without full testing - Basic syntax checking file editing - Commit initial code changes - Second run: R installation triggered (code changes detected) - Full R setup occurs git diff now detects R file changes - Complete testing, building, validation - Full development workflow available","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"benefits-of-two-step-approach","dir":"","previous_headings":"Resource-Conscious Two-Step Development Approach","what":"Benefits of Two-Step Approach","title":"report: Automated Results Reporting R Package","text":"🌱 Environmental: Avoids unnecessary R installations (~5-10 minutes saved per run) 💰 Cost savings: Reduces compute resource usage significantly ⏱️ Time efficiency: First iterations much faster (2-3 minutes vs 7-15 minutes) 🔄 Natural workflow: Matches developers actually work (edit first, test second) 🎯 Smart resource allocation: Full resources actually needed Implementation Note: approach means environment setup workflow intentionally skip R installation first runs, even R code changes planned. bug - ’s deliberate resource optimization strategy.","code":""},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"package-installation-philosophy","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed)","what":"Package Installation Philosophy","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Install packages minimally -demand avoid long installation times. install packages actually required specific function modifying current PR. custom copilot environment setup now follows philosophy installing required dependencies (Imports) installing suggested packages default.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"install-r-and-required-system-dependencies","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed)","what":"Install R and Required System Dependencies","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always ensure R properly installed functional proceeding package development tasks.","code":"# Ubuntu/Debian systems - ALWAYS run this first in every session sudo apt update sudo apt install -y r-base r-base-dev  # Verify R installation is working R --version which R  # Install core R packages via system package manager (recommended) sudo apt install -y r-cran-dplyr r-cran-rlang r-cran-testthat  # CRITICAL: Install development version of lintr to match CI environment # The easystats CI uses r-lib/lintr (development version) not CRAN stable # Check if lintr is already installed first to save resources/time/errors R --no-restore --no-save -e ' if (!requireNamespace(\"lintr\", quietly = TRUE)) {   # Set GitHub token if available to avoid rate limits (use GH_PAT directly)   if (Sys.getenv(\"GH_PAT\") != \"\") {     Sys.setenv(GITHUB_PAT = Sys.getenv(\"GH_PAT\"))   }   # Priority order: r-universe FIRST, then remotes as fallback   # Based on testing with whitelisted r-lib.r-universe.dev and cdn.r-universe.dev: both r-universe and remotes work successfully   tryCatch({     # FIRST PRIORITY: Try r-universe installation     install.packages(\"lintr\", lib = .libPaths()[1], repos=c(\"https://r-lib.r-universe.dev\", \"https://cloud.r-project.org\"))     cat(\"SUCCESS: r-universe installation worked\\n\")   }, error = function(e1) {     cat(\"r-universe installation failed, trying remotes...\\n\")     tryCatch({       # FALLBACK: Use remotes for development lintr installation       if (!requireNamespace(\"remotes\", quietly = TRUE)) {         install.packages(\"remotes\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))       }       remotes::install_github(\"r-lib/lintr\")       cat(\"SUCCESS: remotes installation worked\\n\")     }, error = function(e2) {       cat(\"CRITICAL ERROR: Cannot install development lintr from any source\\n\")       cat(\"Tried: 1) r-universe (failed), 2) remotes (failed)\\n\")       cat(\"This is required for proper linting that matches CI environment.\\n\")       cat(\"COPILOT MUST STOP and report this issue in the PR.\\n\")       cat(\"User must resolve lintr installation before continuing.\\n\")       stop(\"Development lintr installation failed - cannot proceed\")     })   }) } else {   cat(\"Development lintr already installed. Version:\", as.character(packageVersion(\"lintr\")), \"\\n\") }'  # Install reprex (ESSENTIAL for creating reproducible examples in PRs) sudo apt install -y r-cran-reprex || R --no-restore --no-save -e 'install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Install other essential development packages via system packages when possible sudo apt install -y r-cran-devtools r-cran-roxygen2 r-cran-styler || echo \"Some packages not available via apt, will install via R\"  # If styler, roxygen2, or devtools are not available via system packages, install via R: R --no-restore --no-save -e ' packages_needed <- c(\"styler\", \"roxygen2\", \"devtools\") packages_installed <- rownames(installed.packages()) packages_to_install <- setdiff(packages_needed, packages_installed) if (length(packages_to_install) > 0) {   install.packages(packages_to_install, lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\")) } '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"verify-r-installation-and-core-packages","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed)","what":"Verify R Installation and Core Packages","title":"report: Automated Results Reporting R Package","text":"NEVER SKIP: Always run verification installing R:","code":"# Test R basic functionality R --no-restore --no-save -e 'print(\"R is working correctly\")'  # Verify core packages are available R --no-restore --no-save -e ' required_packages <- c(\"dplyr\", \"rlang\", \"testthat\", \"lintr\", \"reprex\", \"styler\", \"roxygen2\", \"knitr\", \"rmarkdown\", \"clipr\") missing_packages <- required_packages[!sapply(required_packages, requireNamespace, quietly = TRUE)] if (length(missing_packages) > 0) {   cat(\"Missing packages:\", paste(missing_packages, collapse = \", \"), \"\\n\")   cat(\"Run installation commands to install missing packages\\n\") } else {   cat(\"All core development packages are available\\n\")   cat(\"reprex functionality fully supported\\n\") } '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"essential-reprex-package-setup","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed)","what":"Essential reprex Package Setup","title":"report: Automated Results Reporting R Package","text":"CRITICAL: reprex package mandatory creating reproducible examples pull requests. using pre-configured environment: reprex dependencies (pandoc, knitr, rmarkdown, clipr) already installed tested. Skip step 4 verify functionality. setting manually: Follow complete setup process: ESSENTIAL: Always run export CLIPR_ALLOW=TRUE using reprex prevent crashes.","code":"# Step 1: Install required dependencies for reprex sudo apt install -y pandoc R --no-restore --no-save -e 'install.packages(c(\"knitr\", \"rmarkdown\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Step 2: Install reprex package R --no-restore --no-save -e ' if (!requireNamespace(\"reprex\", quietly = TRUE)) {   # Try multiple installation methods   tryCatch({     install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))   }, error = function(e1) {     tryCatch({       install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))     }, error = function(e2) {       if (!requireNamespace(\"remotes\", quietly = TRUE)) {         install.packages(\"remotes\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))       }       remotes::install_github(\"tidyverse/reprex\")     })   }) } '  # Step 3: CRITICAL - Set environment variable and test export CLIPR_ALLOW=TRUE && R --no-restore --no-save -e ' library(reprex) # Test reprex with simple code result <- reprex({   x <- 1:5   mean(x) }, venue = \"gh\", advertise = FALSE, html_preview = FALSE)  if (length(result) > 0) {   cat(\"SUCCESS: reprex package is working correctly\\n\")   cat(\"Sample output:\\n\")   cat(paste(head(result, 5), collapse = \"\\n\")) } else {   stop(\"FAILED: reprex package installation failed - this is required for PR creation\") } ' ### Install Function-Specific Dependencies Only **CRITICAL**: Only install packages that are actually used by the specific function you are modifying. DO NOT install all suggested packages upfront as this causes long installation times.  #### Determine Required Packages for Your Function ```bash # Step 1: Find which packages your specific function actually requires # Check the function's requireNamespace() calls and package dependencies in the source code cd /home/runner/work/report/report grep -A2 -B2 \"requireNamespace\\|check_installed\" R/[your_function_file].R  # Or search for all function dependencies: # grep -r \"requireNamespace\\|@importFrom\" R/[your_function_file].R"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"install-only-required-packages","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed) > Essential reprex Package Setup","what":"Install Only Required Packages","title":"report: Automated Results Reporting R Package","text":"","code":"# Step 2: Install ONLY the packages found in Step 1 # Example: If working on report.lm(), you might need modelbased and effectsize R --no-restore --no-save -e 'install.packages(c(\"modelbased\", \"effectsize\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Example: If working on report.lavaan(), you might need lavaan   R --no-restore --no-save -e 'install.packages(\"lavaan\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Example: If working on report.brmsfit(), you need brms and related packages R --no-restore --no-save -e 'install.packages(c(\"brms\", \"rstanarm\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"use-reports-built-in-utilities-after-building-package","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed) > Essential reprex Package Setup","what":"Use report’s Built-in Utilities (After Building Package)","title":"report: Automated Results Reporting R Package","text":"","code":"# Alternative: Check the report package's dependencies and install as needed R --no-restore --no-save -e ' # First build and install the current report package to access its functions if (file.exists(\"DESCRIPTION\")) {   system(\"R CMD build .\")   pkg_file <- list.files(pattern = \"report_.*\\\\.tar\\\\.gz\")[1]   if (!is.na(pkg_file)) system(paste(\"R CMD INSTALL\", pkg_file)) }  # Load report and install only specific packages for your function library(report) # ONLY install packages needed for your specific function: # install.packages(\"your_specific_package\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\")) '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"set-up-r-user-library","dir":"","previous_headings":"Environment Setup (Manual - if pre-configuration failed)","what":"Set Up R User Library","title":"report: Automated Results Reporting R Package","text":"","code":"# Create user library directory mkdir -p ~/R/library echo 'R_LIBS_USER=~/R/library' >> ~/.Renviron"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"targeted-package-installation-workflow","dir":"","previous_headings":"Build and Development Workflow","what":"Targeted Package Installation Workflow","title":"report: Automated Results Reporting R Package","text":"ESSENTIAL: Follow targeted approach avoid “package installation taking long time” issues: Identify function: Determine specific function ’re modifying Find dependencies: Check packages function actually requires: Install required packages: Install packages found step 2 Test function: Test specific function works installed packages Proceed development: Build, test, develop normally","code":"cd /home/runner/work/report/report grep -A2 -B2 \"requireNamespace\\|@importFrom\" R/[your_function].R"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"build-the-package","dir":"","previous_headings":"Build and Development Workflow","what":"Build the Package","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: Build takes ~19 seconds. Set timeout 60+ seconds.","code":"cd /home/runner/work/report/report R CMD build . # Creates: report_0.6.1.1.tar.gz (version may vary)"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"install-the-package","dir":"","previous_headings":"Build and Development Workflow","what":"Install the Package","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: Install takes ~3 seconds. Set timeout 60+ seconds.","code":"cd /home/runner/work/report/report R CMD INSTALL report_0.6.1.1.tar.gz # Or install from source: # R CMD INSTALL ."},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"run-tests","dir":"","previous_headings":"Build and Development Workflow","what":"Run Tests","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: Tests take ~11 seconds. Set timeout 30+ seconds. Expected results: - ~99 tests processed across multiple test files - ~94 tests pass - 3-5 snapshot failures due minor precision differences (normal expected) - tests may skipped optional packages available","code":"cd /home/runner/work/report/report R --no-restore --no-save -e 'library(testthat); library(report); test_local()'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"run-linting-with-easystats-settings","dir":"","previous_headings":"Build and Development Workflow","what":"Run Linting with Easystats Settings","title":"report: Automated Results Reporting R Package","text":"IMPORTANT: package uses easystats organization’s centralized lintr configuration defined easystats/workflows. ensures consistency across easystats packages stays automatically --date organization standards. NEVER CANCEL: Linting takes ~20 seconds. Set timeout 60+ seconds. Recommended approach - Lint changed files (matches CI workflow behavior): Expected results: - Style warnings (normal existing codebase) - Focus new code adhering style guidelines - Package functional despite style warnings Note: lintr configuration exactly matches current settings easystats/workflows/lint-changed-files.yaml. ensures local linting matches CI workflow exactly stays current organization standards.","code":"cd /home/runner/work/report/report # Get list of changed R files in current PR/branch git diff --name-only HEAD~1 | grep \"\\\\.R$\" > changed_files.txt R --no-restore --no-save -e ' library(lintr) if (file.exists(\"changed_files.txt\") && file.size(\"changed_files.txt\") > 0) {   changed_files <- readLines(\"changed_files.txt\")   changed_files <- changed_files[file.exists(changed_files)]   if (length(changed_files) > 0) {     # Use the same lintr configuration as the CI workflow     lint(changed_files, linters = all_linters(       coalesce_linter = NULL,       absolute_path_linter = NULL,       cyclocomp_linter(40L),       if_not_else_linter(exceptions = character(0L)),       indentation_linter = NULL,       implicit_integer_linter = NULL,       library_call_linter = NULL,       line_length_linter(120L),       namespace_linter = NULL,       nonportable_path_linter = NULL,       object_length_linter(50L),       object_name_linter = NULL,       object_usage_linter = NULL,       one_call_pipe_linter = NULL,       todo_comment_linter = NULL,       commented_code_linter = NULL,       undesirable_function_linter(c(\"mapply\" = NA, \"setwd\" = NA)),       undesirable_operator_linter = NULL,       unnecessary_concatenation_linter(allow_single_expression = FALSE),       unused_import_linter = NULL     ))   } else {     cat(\"No R files changed\\n\")   } } else {   cat(\"No R files changed\\n\") } ' rm -f changed_files.txt"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"auto-format-code-with-styler","dir":"","previous_headings":"Build and Development Workflow","what":"Auto-format Code with Styler","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: Styling takes ~10-30 seconds depending package size. Set timeout 60+ seconds. Expected results: - Automatic code formatting according tidyverse style guide - Consistent indentation, spacing, bracket placement - Files modified -place styling changes needed - Use making changes committing","code":"cd /home/runner/work/report/report # Style entire package R --no-restore --no-save -e 'library(styler); style_pkg()'  # Style specific file R --no-restore --no-save -e 'library(styler); style_file(\"R/[function_name].R\")'  # Style specific directory R --no-restore --no-save -e 'library(styler); style_dir(\"R\")'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"update-documentation-with-roxygen2","dir":"","previous_headings":"Build and Development Workflow","what":"Update Documentation with roxygen2","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: Documentation update takes ~5-15 seconds. Set timeout 60+ seconds. Expected results: - Updates .Rd files man/ directory roxygen2 comments - Updates NAMESPACE file exports/imports - Essential step modifying function documentation adding/removing exports - Must run building package documentation changed use: Always run : - Adding modifying roxygen2 comments (#' comments functions) - Adding new exported functions - Changing function parameters return values documentation - Adding removing @export, @import, @importFrom tags","code":"cd /home/runner/work/report/report # Update documentation after making changes to roxygen2 comments R --no-restore --no-save -e 'roxygen2::document()'  # Alternative using devtools R --no-restore --no-save -e 'devtools::document()'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"run-r-cmd-check","dir":"","previous_headings":"Build and Development Workflow","what":"Run R CMD Check","title":"report: Automated Results Reporting R Package","text":"NEVER CANCEL: R CMD check takes ~30 seconds (without suggested packages) 5 minutes (full). Set timeout 10+ minutes. Expected results: - Status: May show 1 ERROR (missing suggested packages - normal), NOTEs - Core functionality passes checks - Tests pass correctly - Examples may fail due missing optional packages (expected)","code":"cd /home/runner/work/report/report # Without suggested packages (due to network limitations): _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check report_0.6.1.1.tar.gz --no-manual --no-vignettes  # With all checks (if network access available): # R CMD check report_0.6.1.1.tar.gz"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"always-test-core-functions-after-changes","dir":"","previous_headings":"Validation Scenarios","what":"Always Test Core Functions After Changes","title":"report: Automated Results Reporting R Package","text":"Test main functions ensure work correctly:","code":"cd /home/runner/work/report/report R --no-restore --no-save -e ' library(report)  # Test basic report function data(mtcars) model <- lm(mpg ~ wt + hp, data = mtcars) result <- report(model) print(result)  # Test data frame reporting report_data <- report(mtcars) print(report_data)  # Test sample reporting sample_report <- report_sample(mtcars) print(sample_report)  print(\"Core functions working correctly\") '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"mandatory-test-reprex-functionality-before-making-changes","dir":"","previous_headings":"Validation Scenarios","what":"MANDATORY: Test reprex Functionality Before Making Changes","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always verify reprex working modifying code require PR:","code":"cd /home/runner/work/report/report export CLIPR_ALLOW=TRUE && R --no-restore --no-save -e ' # Load required packages library(reprex) library(report)  # Create a test reprex with actual report function (WORKING EXAMPLE) reprex_result <- reprex({   library(report)   data(mtcars)    # Example model reporting   model <- lm(mpg ~ wt + hp, data = mtcars)   result <- report(model)   print(result)    }, venue = \"gh\", advertise = FALSE, html_preview = FALSE)  # Verify it worked if (length(reprex_result) > 0 && any(grepl(\"library\\\\(report\\\\)\", reprex_result))) {   cat(\"SUCCESS: reprex is working correctly with report functions\\n\")   cat(\"Sample reprex output:\\n\")   cat(paste(reprex_result, collapse = \"\\n\"))   cat(\"\\n\") } else {   stop(\"FAILED: reprex is not working correctly - follow debugging guide in Troubleshooting section\") } '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"manual-function-testing-workflow","dir":"","previous_headings":"Validation Scenarios","what":"Manual Function Testing Workflow","title":"report: Automated Results Reporting R Package","text":"making changes package functions: Always rebuild reinstall package: Test specific function modified: Run relevant tests:","code":"cd /home/runner/work/report/report R CMD build . && R CMD INSTALL report_*.tar.gz R --no-restore --no-save -e 'library(report); [your_function_test_here]' R --no-restore --no-save -e 'library(testthat); library(report); test_file(\"tests/testthat/test-[function_name].R\")'"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"repository-exploration-commands","dir":"","previous_headings":"Key Locations and Files","what":"Repository Exploration Commands","title":"report: Automated Results Reporting R Package","text":"","code":"# View repository structure ls -la /home/runner/work/report/report/  # View R source files ls -la /home/runner/work/report/report/R/  # View test files ls -la /home/runner/work/report/report/tests/testthat/  # Check package metadata cat /home/runner/work/report/report/DESCRIPTION"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"source-code-structure","dir":"","previous_headings":"Key Locations and Files","what":"Source Code Structure","title":"report: Automated Results Reporting R Package","text":"/R/ - R function source files (60+ files) /tests/testthat/ - Test files using testthat framework /tests/testthat.R - Test runner entry point /man/ - Documentation files (auto-generated roxygen2) /vignettes/ - R Markdown tutorials documentation","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"configuration-files","dir":"","previous_headings":"Key Locations and Files","what":"Configuration Files","title":"report: Automated Results Reporting R Package","text":"DESCRIPTION - Package metadata, dependencies, version NAMESPACE - Package exports (auto-generated roxygen2) .github/workflows/ - CI/CD workflows (R-CMD-check, lint, test-coverage) .Rbuildignore - Files exclude package build","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"important-functions-by-category","dir":"","previous_headings":"Key Locations and Files","what":"Important Functions by Category","title":"report: Automated Results Reporting R Package","text":"Core Reporting: report(), report.lm(), report.aov(), report.htest() Data Reporting: report.data.frame(), report_sample(), report_participants() Model Components: report_parameters(), report_performance(), report_statistics() Text Formatting: report_text(), report_table(), format_value() Utilities: cite_easystats(), report_info(), report_intercept()","code":""},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"core-dependencies-always-required","dir":"","previous_headings":"Dependencies and Package Management","what":"Core Dependencies (Always Required)","title":"report: Automated Results Reporting R Package","text":"","code":"# In DESCRIPTION file: Imports: bayestestR (>= 0.16.1), effectsize (>= 1.0.1), insight (>= 1.3.1),           parameters (>= 0.27.0), performance (>= 0.15.0), datawizard (>= 1.2.0),          stats, tools, utils Depends: R (>= 3.6)"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"suggested-packages-optional","dir":"","previous_headings":"Dependencies and Package Management","what":"Suggested Packages (Optional)","title":"report: Automated Results Reporting R Package","text":"Many functions require optional packages. package uses requireNamespace() check needed packages available functions called. Key suggested packages: BayesFactor, brms, collapse, ivreg, knitr, lavaan, lme4, dplyr, rstanarm, survival, modelbased, emmeans, marginaleffects ESSENTIAL development: reprex (mandatory creating PR examples)","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"installing-additional-packages-only-when-needed","dir":"","previous_headings":"Dependencies and Package Management","what":"Installing Additional Packages (Only When Needed)","title":"report: Automated Results Reporting R Package","text":"PRIORITY: Always install reprex first, install packages needed specific function modifying:","code":"# ALWAYS install reprex first (essential for PR creation): sudo apt install -y r-cran-reprex || R --no-restore --no-save -e 'install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Via system packages (recommended for individual packages): sudo apt install -y r-cran-[package-name]  # Via R (using r-universe for latest packages including development versions): R --no-restore --no-save -e 'install.packages(\"[package-name]\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Alternative sources when r-universe is not available: # Via CRAN mirror (FALLBACK PRIORITY): R --no-restore --no-save -e 'install.packages(\"[package-name]\", lib = .libPaths()[1], repos=\"https://cran.r-project.org/\")'  # Via remotes for GitHub packages (SECOND PRIORITY): R --no-restore --no-save -e 'if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\", lib = .libPaths()[1]); remotes::install_github(\"[author]/[package-name]\")'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"common-function-specific-package-requirements","dir":"","previous_headings":"Dependencies and Package Management > Installing Additional Packages (Only When Needed)","what":"Common Function-Specific Package Requirements","title":"report: Automated Results Reporting R Package","text":"install - install need specific function: report.lm(): modelbased, effectsize report.aov(): effectsize, emmeans report.brmsfit(): brms, rstanarm report.lavaan(): lavaan report.lme4(): lme4, modelbased report.BFBayesFactor(): BayesFactor report.ivreg(): ivreg report.coxph(): survival report_sample(): datawizard (already imported)","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"check-function-dependencies-before-installing","dir":"","previous_headings":"Dependencies and Package Management > Installing Additional Packages (Only When Needed)","what":"Check Function Dependencies Before Installing","title":"report: Automated Results Reporting R Package","text":"","code":"# Find exactly which packages a function requires: cd /home/runner/work/report/report grep -A2 -B2 \"requireNamespace\\|@importFrom\" R/[function_file].R  # Examples: # For report.lm.R: requires modelbased, effectsize # For report.lavaan.R: requires lavaan   # For report.brmsfit.R: requires brms, rstanarm"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"targeted-installation-examples","dir":"","previous_headings":"Dependencies and Package Management > Installing Additional Packages (Only When Needed)","what":"Targeted Installation Examples","title":"report: Automated Results Reporting R Package","text":"","code":"# Example 1: Working on report.lm() function R --no-restore --no-save -e 'install.packages(c(\"modelbased\", \"effectsize\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Example 2: Working on report.lavaan() function   R --no-restore --no-save -e 'install.packages(\"lavaan\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Example 3: Working on report.brmsfit() function R --no-restore --no-save -e 'install.packages(c(\"brms\", \"rstanarm\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'  # Example 4: Working on report.BFBayesFactor() function R --no-restore --no-save -e 'install.packages(\"BayesFactor\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"r-version-compatibility-requirements","dir":"","previous_headings":"Code Quality and Best Practices","what":"R Version Compatibility Requirements","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always check minimum R version requirements using functions ensure compatibility across supported environments.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"version-checking-process","dir":"","previous_headings":"Code Quality and Best Practices > R Version Compatibility Requirements","what":"Version Checking Process:","title":"report: Automated Results Reporting R Package","text":"Check DESCRIPTION file: Always verify minimum R version package DESCRIPTION file: Function availability validation: using R function, verify available minimum supported version: R 3.6.0+: Functions like grep(..., value = TRUE), standard base R operations R 4.0.0+: New features syntax improvements R 4.1.0+: Native pipe |>, new lambda syntax R 4.4.0: Null coalescing operator %||% R 4.5.0+: Functions like grepv() (existed) Safe function usage:","code":"cd /home/runner/work/report/report grep \"Depends:\" DESCRIPTION # Shows: R (>= 3.6) - must use functions available in R 3.6+ # CORRECT: Use functions available in R 3.6+ result <- grep(pattern, x, value = TRUE)  # INCORRECT: Don't use functions from later R versions # result <- grepv(pattern, x)  # Not available in R 3.6"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"documentation-for-minimum-r-versions","dir":"","previous_headings":"Code Quality and Best Practices > R Version Compatibility Requirements","what":"Documentation for Minimum R Versions:","title":"report: Automated Results Reporting R Package","text":"R 3.6.0 reference: Check base R documentation function availability doubt: Use help(function_name) check functions introduced Alternative approach: Use basic/older functions guaranteed exist","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"avoiding-global-variable-binding-issues","dir":"","previous_headings":"Code Quality and Best Practices","what":"Avoiding Global Variable Binding Issues","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always use proper variable referencing prevent “visible binding global variable” warnings make CI workflows fail.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"recommended-approaches","dir":"","previous_headings":"Code Quality and Best Practices > Avoiding Global Variable Binding Issues","what":"Recommended Approaches:","title":"report: Automated Results Reporting R Package","text":"dplyr operations: Use .data[[variable_name]] notation ggplot2 operations: Use .data[[variable_name]] aes_string() Import required functions: Always explicitly import packages","code":"# CORRECT: Use .data[[var]] notation data %>%   group_by(.data[[group_var]]) %>%   summarize(mean_val = mean(.data[[response_var]], na.rm = TRUE))  # INCORRECT: Direct variable names (causes binding warnings) data %>%   group_by(group_var) %>%   summarize(mean_val = mean(response_var, na.rm = TRUE)) # CORRECT: Use .data[[var]] in aes() ggplot(data, aes(x = .data[[x_var]], y = .data[[y_var]]))  # ALTERNATIVE: Use aes_string() for string variables ggplot(data, aes_string(x = x_var, y = y_var)) #' @importFrom dplyr group_by summarize #' @importFrom ggplot2 ggplot aes"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"discouraged-approaches","dir":"","previous_headings":"Code Quality and Best Practices > Avoiding Global Variable Binding Issues","what":"Discouraged Approaches:","title":"report: Automated Results Reporting R Package","text":"create global_variables.R files utils::globalVariables() use bare variable names dplyr ggplot operations rely global variable declarations suppress warnings","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"ensuring-documentation-code-consistency","dir":"","previous_headings":"Code Quality and Best Practices","what":"Ensuring Documentation-Code Consistency","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Documentation must exactly match function arguments prevent “Codoc mismatches” warnings.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"documentation-validation-steps","dir":"","previous_headings":"Code Quality and Best Practices > Ensuring Documentation-Code Consistency","what":"Documentation Validation Steps:","title":"report: Automated Results Reporting R Package","text":"Match parameter names exactly: Update documentation changing parameters: Always run roxygen2::document() parameter changes Check .Rd files reflect actual function signatures Verify examples use correct parameter names Validate building:","code":"#' @param response The dependent variable name #' @param group The grouping variable name   function_name <- function(response, group) { ... } # Check for documentation mismatches R --no-restore --no-save -e 'roxygen2::document()' R CMD build . # Look for \"Codoc mismatches\" warnings"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"adding-a-new-function","dir":"","previous_headings":"Common Development Tasks","what":"Adding a New Function","title":"report: Automated Results Reporting R Package","text":"FIRST: Update version number NEWS.md (see Version Management section - per PR) Create function /R/[function_name].R Identify required packages: Check packages function need using rlang::check_installed() Install required packages: Use targeted installation instead batch installation Use proper variable referencing: Use .data[[var]] dplyr/ggplot2 operations Add roxygen2 documentation function (ensure parameter names match exactly) Add @importFrom statements external functions used Add exports roxygen2 comments needed (@export) Create tests /tests/testthat/test-[function_name].R Check global variable issues: R CMD check show binding warnings Lint code: R ---restore ---save -e 'library(lintr); lint(\"R/[function_name].R\")' (lint specific file) R ---restore ---save -e 'library(lintr); lint_package()' (lint entire package) Style code: R ---restore ---save -e 'library(styler); style_file(\"R/[function_name].R\")' Update documentation: R ---restore ---save -e 'roxygen2::document()' Validate documentation consistency: Check “Codoc mismatches” warnings Rebuild test: R CMD build . && R CMD INSTALL report_*.tar.gz Run tests: R ---restore ---save -e 'library(testthat); library(report); test_local()' Create reprex examples: Prepare reproducible examples showing new function action PR description making additional commits: update version/NEWS.md - use version commits PR","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"modifying-existing-functions","dir":"","previous_headings":"Common Development Tasks","what":"Modifying Existing Functions","title":"report: Automated Results Reporting R Package","text":"FIRST: Update version number NEWS.md (see Version Management section - per PR) Identify current function dependencies: Check packages function currently requires Edit function appropriate /R/[file].R Check new packages needed: adding functionality, identify new package requirements Install new required packages: Install ’s newly needed, suggested packages Ensure proper variable referencing: Replace bare variable names .data[[var]] notation Update documentation parameters changed (ensure exact parameter name matches) Update @importFrom statements new external functions used Update tests function behavior changes Check global variable issues: R CMD check show binding warnings Lint code: R ---restore ---save -e 'library(lintr); lint(\"R/[file].R\")' (lint specific file) R ---restore ---save -e 'library(lintr); lint_package()' (lint entire package) Style code: R ---restore ---save -e 'library(styler); style_file(\"R/[file].R\")' Update documentation changed: R ---restore ---save -e 'roxygen2::document()' Validate documentation consistency: Check “Codoc mismatches” warnings Always rebuild reinstall: R CMD build . && R CMD INSTALL report_*.tar.gz Always test specific function manually Run full test suite check regressions Create /reprexes: Prepare examples showing old vs new behavior PR description making additional commits: update version/NEWS.md - use version commits PR","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"version-management-and-changelog-updates","dir":"","previous_headings":"","what":"Version Management and Changelog Updates","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Every PR must include version number updates NEWS.md changelog entries. mandatory changes. IMPORTANT CLARIFICATION: Version numbers bumped PER PULL REQUEST, per commit. make multiple commits within single PR, commits use version number. bump version beginning PR work submitting PR review. bump making changes functions (e.g, copilot instructions, workflow, etc.).","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"version-numbering-system","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Version Numbering System","title":"report: Automated Results Reporting R Package","text":"report package follows versioning pattern: - Major releases (CRAN submissions): Standard semantic versioning (e.g., 0.6.1, 0.6.0, 0.5.9) - Development versions (CRAN releases): Add fourth decimal (e.g., 0.6.1.1, 0.6.1.2, 0.6.1.3)","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"when-to-bump-versions","dir":"","previous_headings":"Version Management and Changelog Updates","what":"When to Bump Versions","title":"report: Automated Results Reporting R Package","text":"ALWAYS bump version change affects package: 1. Bug fixes: Increment fourth decimal (0.6.1.1 → 0.6.1.2) 2. New features: Increment fourth decimal (0.6.1.1 → 0.6.1.2) 3. Breaking changes: Increment minor version (0.6.1 → 0.7.0) - rare 4. Documentation-changes: Still increment fourth decimal tracking 5. bump making changes copilot instructions, workflow, etc.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"multiple-commits-within-a-single-pr","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Multiple Commits Within a Single PR","title":"report: Automated Results Reporting R Package","text":"CRITICAL RULE: PR involves multiple commits, use version number commits PR. Correct approach multi-commit PR: 1. start PR work: Bump version 0.6.1.1 → 0.6.1.2 update NEWS.md 2. First commit: Contains version bump + first set changes 3. Subsequent commits: Use version (0.6.1.2) additional changes 4. bump version start new PR Example correct multi-commit PR: - Commit 1: “Bump version 0.6.1.2 add new feature X” - Commit 2: “Fix bug feature X (still version 0.6.1.2)” - Commit 3: “Update documentation feature X (still version 0.6.1.2)” - commits use version 0.6.1.2, NEWS.md updated commit 1 NEVER (incorrect approach): - Commit 1: “Add feature X, bump 0.6.1.2” - Commit 2: “Fix bug feature X, bump 0.6.1.3” ❌ WRONG - Commit 3: “Update docs, bump 0.6.1.4” ❌ WRONG","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"how-to-update-version-number","dir":"","previous_headings":"Version Management and Changelog Updates","what":"How to Update Version Number","title":"report: Automated Results Reporting R Package","text":"Edit DESCRIPTION file: Version update pattern:","code":"cd /home/runner/work/report/report # Find current version grep \"Version:\" DESCRIPTION # Update to next version (example: 0.6.1.1 → 0.6.1.2) # Current version: 0.6.1.1 # For your PR: 0.6.1.2 # Next PR: 0.6.1.3 # etc."},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"how-to-update-newsmd","dir":"","previous_headings":"Version Management and Changelog Updates","what":"How to Update NEWS.md","title":"report: Automated Results Reporting R Package","text":"MANDATORY: Add changes top NEWS.md following exact format: first change major release (e.g., 0.6.1 released): subsequent development changes (0.6.x already exists): Change description guidelines: Use function names backticks: report(), report_sample() specific changed Include issue references applicable: (#451) report.lm(): fix issue missing coefficients summary output report_sample(): add new ci_method argument confidence interval calculation Fixed CRAN check failures related test dependencies","code":"# report 0.6.x  Bug fixes  * Your change description here # report 0.6.x  Bug fixes  * Your new change description here * Previous change description here"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"automated-version-management-workflow","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Automated Version Management Workflow","title":"report: Automated Results Reporting R Package","text":"Follow exact sequence PER PR (per commit):","code":"cd /home/runner/work/report/report  # Step 1: Check current version grep \"Version:\" DESCRIPTION grep -A5 \"^# report\" NEWS.md | head -10  # Step 2: Determine new version number # Current: 0.6.1.1 → New: 0.6.1.2 (example)  # Step 3: Update DESCRIPTION file (ONCE per PR) sed -i 's/Version: 0.6.1.1/Version: 0.6.1.2/' DESCRIPTION  # Step 4: Update NEWS.md (ONCE per PR - add entry at the top) # Use your preferred text editor or str_replace_editor  # Step 5: Verify updates grep \"Version:\" DESCRIPTION head -10 NEWS.md  # Step 6: Proceed with normal build/test workflow # Step 7: Make your code changes and commit everything together # Step 8: Any additional commits in this PR should NOT change version numbers again"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"example-1-bug-fix","dir":"","previous_headings":"Version Management and Changelog Updates > Version Update Examples","what":"Example 1: Bug Fix","title":"report: Automated Results Reporting R Package","text":"","code":"# In DESCRIPTION: Version: 0.6.1.1 → 0.6.1.2 # In NEWS.md (add at top): # report 0.6.x  Bug fixes  * `report.lm()`: fix issue with confidence intervals in summary output"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"example-2-new-feature","dir":"","previous_headings":"Version Management and Changelog Updates > Version Update Examples","what":"Example 2: New Feature","title":"report: Automated Results Reporting R Package","text":"","code":"# In DESCRIPTION: Version: 0.6.1.2 → 0.6.1.3 # In NEWS.md (add at top): # report 0.6.x  New features  * `report_sample()`: add `weights` argument for weighted sample descriptions"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"example-3-multiple-changes","dir":"","previous_headings":"Version Management and Changelog Updates > Version Update Examples","what":"Example 3: Multiple Changes","title":"report: Automated Results Reporting R Package","text":"","code":"# In DESCRIPTION: Version: 0.6.1.3 → 0.6.1.4   # In NEWS.md (add at top): # report 0.6.x  Bug fixes  * `report()`: improve error messages for unsupported model classes * `report_participants()`: fix issue with missing gender categories * Documentation updates for improved clarity across reporting functions"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"before-submitting-your-pr-final-validation","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Before Submitting Your PR (Final Validation)","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always run complete validation sequence ensure workflow checks pass first try. done submitting PR review, every individual commit.","code":"cd /home/runner/work/report/report  # 0. ENSURE: Version number and NEWS.md were already updated once at the beginning of this PR #    (Do NOT update them again if this is a subsequent commit in the same PR)  # 1. Check for global variable binding issues first (look for \"no visible binding\" warnings) R --no-restore --no-save -e 'warnings(); R CMD check report_*.tar.gz --no-manual --no-vignettes 2>&1 | grep -i \"binding\"'  # 2. Lint code to identify style issues (20 seconds) - use easystats/workflows configuration R --no-restore --no-save -e 'library(lintr); lint_package(linters = all_linters(   coalesce_linter = NULL,   absolute_path_linter = NULL,   cyclocomp_linter(40L),   if_not_else_linter(exceptions = character(0L)),   indentation_linter = NULL,   implicit_integer_linter = NULL,   library_call_linter = NULL,   line_length_linter(120L),   namespace_linter = NULL,   nonportable_path_linter = NULL,   object_length_linter(50L),   object_name_linter = NULL,   object_usage_linter = NULL,   one_call_pipe_linter = NULL,   todo_comment_linter = NULL,   commented_code_linter = NULL,   undesirable_function_linter(c(\"mapply\" = NA, \"setwd\" = NA)),   undesirable_operator_linter = NULL,   unnecessary_concatenation_linter(allow_single_expression = FALSE),   unused_import_linter = NULL ))'  # 3. Style code to automatically fix issues (10-30 seconds) - optional but recommended R --no-restore --no-save -e 'library(styler); style_pkg()'  # 4. Update documentation if documentation was changed (5-15 seconds) R --no-restore --no-save -e 'roxygen2::document()'  # 5. Build (19 seconds) R CMD build .  # 6. Install   R CMD INSTALL report_*.tar.gz  # 7. Test (11 seconds)  R --no-restore --no-save -e 'library(testthat); library(report); test_local()'  # 8. Final R CMD check for all issues (~30 seconds) - REQUIRED before PR submission _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check report_*.tar.gz --no-manual --no-vignettes  # 9. Look specifically for critical warnings that fail CI: # - \"no visible binding for global variable\" # - \"Codoc mismatches from Rd file\" # - Fix these issues before submitting your PR"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"pull-request-requirements","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Pull Request Requirements","title":"report: Automated Results Reporting R Package","text":"CRITICAL: creating pull requests, MUST include following: Version number bump DESCRIPTION file (see Version Management section ) NEWS.md changelog entry changes (see Version Management section ) Reprexes (minimally reproducible examples) showing old new behavior comparison MANDATORY: Use actual reprex package - NEVER simulate guess reprex output. repository owner needs see actual function behavior, including plots/images simulated. VERSION MANAGEMENT OPTIONAL: Every PR must include version updates changelog entries. PRs without updates rejected.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"creating-reprexes-for-prs","dir":"","previous_headings":"Version Management and Changelog Updates > Pull Request Requirements","what":"Creating Reprexes for PRs:","title":"report: Automated Results Reporting R Package","text":"Use base R datasets possible (e.g., mtcars, iris, airquality) reproducible examples Show /behavior code changes ALWAYS use actual reprex package consistent formatting: Generate ACTUAL reprex output using workflow: Include ACTUAL reprex outputs PR description: : Real reprex output showing current (problematic) behavior : Real reprex output showing improved behavior changes","code":"# Ensure reprex is installed and working BEFORE creating PR R --no-restore --no-save -e ' if (!requireNamespace(\"reprex\", quietly = TRUE)) {   stop(\"reprex package MUST be installed before creating PRs\") } library(reprex) # Test with simple example first test_result <- reprex(input = \"x <- 1:5\\nmean(x)\", venue = \"gh\", advertise = FALSE, show = FALSE) if (length(test_result) == 0) {   stop(\"reprex package is not working correctly\") } cat(\"reprex is ready for PR creation\\n\") ' library(reprex)  # For BEFORE behavior (if modifying existing function): before_code <- \" library(report) data(mtcars) # [your code showing current behavior] \" before_reprex <- reprex(input = before_code, venue = \"gh\", advertise = FALSE)  # For AFTER behavior (with your changes): after_code <- \" library(report) data(mtcars) # [your code showing improved behavior] \" after_reprex <- reprex(input = after_code, venue = \"gh\", advertise = FALSE)"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"optimized-reprex-creation-with-image-handling","dir":"","previous_headings":"Version Management and Changelog Updates > Pull Request Requirements","what":"Optimized Reprex Creation with Image Handling:","title":"report: Automated Results Reporting R Package","text":"ESSENTIAL: Always generate actual reprex automatic imgur integration plots: Key Benefits Approach: - ✅ Automatic image hosting: Plots automatically uploaded imgur (whitelisted domain) - ✅ local artifacts: PNG files left repository accidentally commit - ✅ Complete format: Includes “Created [date] reprex v[version]” footer - ✅ Direct embedding: Images display directly GitHub responses - ✅ Clean workflow: manual upload cleanup steps required CRITICAL: Always set advertise = TRUE get complete format date/version info provides authority reprex. Testing: Use exact CI configuration local validation: R Version Compatibility: Always check minimum R version DESCRIPTION file (Depends: R (>= X.X)) ensure functions used available minimum supported version. use functions introduced later R versions.","code":"cd /home/runner/work/report/report export CLIPR_ALLOW=TRUE && R --no-restore --no-save -e ' library(reprex) library(report)  # Create ACTUAL reprex - plots automatically uploaded to imgur reprex_result <- reprex({   library(report)      # Example: Create basic report output   data(mtcars)   model <- lm(mpg ~ wt + hp, data = mtcars)   result <- report(model)   print(result)      # Example: Sample reporting   sample_report <- report_sample(mtcars)     print(sample_report)    }, venue = \"gh\", advertise = TRUE, html_preview = FALSE)  # Display complete reprex with imgur links embedded cat(paste(reprex_result, collapse = \"\\n\")) ' **RStudio Users**: Use the reprex addin for faster creation: - Install reprex: `install.packages(\"reprex\")` - Go to `Addins` → Search \"reprex\" → Select \"Render reprex...\" - Copy code → Use addin → Check \"Append session info\" → Render  **Workflow Logic**: - Lint first to identify all style issues - Style second to automatically fix what can be fixed - Update documentation third if any roxygen2 comments were changed - Build and test last to validate everything works together  ## Troubleshooting  ### \"The package installation is taking a long time\" - **Cause**: Installing too many suggested packages instead of only the ones needed for the current function - **Solution**: Follow the targeted installation approach - only install packages specifically required by the function you're modifying - **Prevention**: Always use `grep -A2 -B2 \"rlang::check_installed\" R/[function_file].R` to identify minimal dependencies first  ### \"Could not find function\" Errors - **Cause**: Package not loaded or installed - **Solution**: Run `R CMD build . && R CMD INSTALL report_*.tar.gz` then `library(report)`  ### Package Installation \"lib is not writable\" Errors - **Cause**: R attempting to install packages to system library (`/usr/local/lib/R/site-library`) instead of user library when custom setup doesn't run - **Symptoms**: Warnings like `'lib = \"/usr/local/lib/R/site-library\"' is not writable` during package installation - **Root Cause**: User library directory not properly configured or `.libPaths()[1]` pointing to system directory - **Complete Solution**:   1. Set up user library first: `mkdir -p ~/R/library && echo 'R_LIBS_USER=~/R/library' >> ~/.Renviron`   2. Use explicit library path: `install.packages(\"package\", lib = \"~/R/library\", repos=\"...\")`   3. Alternatively, restart R session after step 1 and then use: `install.packages(\"package\", lib = .libPaths()[1], repos=\"...\")` - **Prevention**: All install.packages calls in these instructions now include the `lib = .libPaths()[1]` parameter, but you must set up user library directory first - **Note**: This issue occurs when the pre-configured environment setup doesn't run and R defaults to system library locations  ### Missing Package Errors - **Cause**: Suggested packages not installed - **Solution**: Install via `sudo apt install r-cran-[package]` or ignore if testing core functionality  ### Network/CRAN Access Issues - **Cause**: Blocked network access to CRAN mirrors - **Solution**: Use system packages via apt or skip optional package tests  ### Test Snapshot Failures - **Cause**: Minor precision differences in numerical results (normal) - **Solution**: Review changes, accept if precision differences are minor: `testthat::snapshot_accept()`  ### Build Failures - **Cause**: Syntax errors, missing dependencies, or file issues - **Solution**: Check specific error messages, ensure DESCRIPTION is correct, verify all R files have valid syntax  ### Styler Not Available - **Cause**: styler package not installed - **Solution**: Install via R: `R --no-restore --no-save -e 'install.packages(\"styler\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'` or skip styling step if not critical  ### Roxygen2 Not Available - **Cause**: roxygen2 package not installed - **Solution**: Install via R: `R --no-restore --no-save -e 'install.packages(\"roxygen2\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'` or use devtools: `R --no-restore --no-save -e 'devtools::document()'`  ### Documentation Build Failures - **Cause**: Documentation not updated after changing roxygen2 comments - **Solution**: Run `R --no-restore --no-save -e 'roxygen2::document()'` before building the package  ### Global Variable Binding Warnings (\"no visible binding\") - **Cause**: Using bare variable names in dplyr/ggplot2 operations instead of proper notation - **Solution**: Replace with `.data[[variable_name]]` notation and add proper `@importFrom` statements - **Example**: Change `group_by(var)` to `group_by(.data[[var]])` - **DO NOT**: Create `global_variables.R` files with `utils::globalVariables()`  ### Lintr CI vs Local Discrepancies (CRITICAL VERSION ISSUE) - **Cause**: CI uses development lintr (`r-lib/lintr`) while local uses CRAN stable (`r-cran-lintr`) - **Symptoms**: Local lintr passes but CI lintr fails with stricter rules - **Root issue**: Development lintr has stricter rules and different function preferences - **Solution**: Always install development lintr to match CI. Priority order: r-universe first, then remotes fallback:   ```bash   # Install development lintr to match CI - check if already installed first   R --no-restore --no-save -e '   if (!requireNamespace(\"lintr\", quietly = TRUE)) {     # Set GitHub token if available to avoid rate limits (use GH_PAT directly)     if (Sys.getenv(\"GH_PAT\") != \"\") {       Sys.setenv(GITHUB_PAT = Sys.getenv(\"GH_PAT\"))     }     # Priority order: r-universe FIRST, then remotes as fallback     # Based on testing with whitelisted r-lib.r-universe.dev and cdn.r-universe.dev: both r-universe and remotes work successfully     tryCatch({       # FIRST PRIORITY: Try r-universe installation       install.packages(\"lintr\", lib = .libPaths()[1], repos=c(\"https://r-lib.r-universe.dev\", \"https://cloud.r-project.org\"))       cat(\"SUCCESS: r-universe installation worked\\n\")     }, error = function(e1) {       cat(\"r-universe installation failed, trying remotes...\\n\")       tryCatch({         # FALLBACK: Use remotes for development lintr installation         if (!requireNamespace(\"remotes\", quietly = TRUE)) {           install.packages(\"remotes\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))         }         remotes::install_github(\"r-lib/lintr\")         cat(\"SUCCESS: remotes installation worked\\n\")       }, error = function(e2) {         cat(\"CRITICAL ERROR: Cannot install development lintr from any source\\n\")         cat(\"Tried: 1) r-universe (failed), 2) remotes (failed)\\n\")         cat(\"This is required for proper linting that matches CI environment.\\n\")         cat(\"COPILOT MUST STOP and report this issue in the PR.\\n\")         cat(\"User must resolve lintr installation before continuing.\\n\")         stop(\"Development lintr installation failed - cannot proceed\")       })     })   } else {     cat(\"Development lintr already installed. Version:\", as.character(packageVersion(\"lintr\")), \"\\n\")   }   ' R --no-restore --no-save -e 'library(lintr); lint_package(linters = all_linters(   coalesce_linter = NULL, absolute_path_linter = NULL, cyclocomp_linter(40L),    if_not_else_linter(exceptions = character(0L)), indentation_linter = NULL,    implicit_integer_linter = NULL, library_call_linter = NULL,    line_length_linter(120L), namespace_linter = NULL, nonportable_path_linter = NULL,   object_length_linter(50L), object_name_linter = NULL, object_usage_linter = NULL,   one_call_pipe_linter = NULL, todo_comment_linter = NULL, commented_code_linter = NULL,   undesirable_function_linter(c(\"mapply\" = NA, \"setwd\" = NA)), undesirable_operator_linter = NULL,   unnecessary_concatenation_linter(allow_single_expression = FALSE), unused_import_linter = NULL ))'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"documentation-mismatch-warnings-codoc-mismatches","dir":"","previous_headings":"Version Management and Changelog Updates","what":"Documentation Mismatch Warnings (“Codoc mismatches”)","title":"report: Automated Results Reporting R Package","text":"Cause: Function parameter names don’t match documentation Solution: Ensure @param parameter_name exactly matches function arguments Prevention: Always run roxygen2::document() changing function signatures","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"crannetwork-access-blocked","dir":"","previous_headings":"Version Management and Changelog Updates","what":"CRAN/Network Access Blocked","title":"report: Automated Results Reporting R Package","text":"Cause: install packages CRAN mirrors Use system packages: sudo apt install r-cran-[package] Try R-universe (FIRST PRIORITY): repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\") Use remotes GitHub packages (SECOND PRIORITY): remotes::install_github(\"[author]/[package]\")","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"reprex-package-issues-and-complete-debugging-guide","dir":"","previous_headings":"Version Management and Changelog Updates","what":"reprex Package Issues and Complete Debugging Guide","title":"report: Automated Results Reporting R Package","text":"CRITICAL SOLUTION: main issues reprex missing dependencies environment variables. NEW: pre-configured environment (copilot-setup-steps.yml), reprex dependencies now pre-installed: pandoc, knitr, rmarkdown, clipr. ’re using pre-configured environment, skip Step 3 (Set Environment Variables). manual setup debugging: Follow complete debugging guide:","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"step-1-install-required-dependencies","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Step 1: Install Required Dependencies","title":"report: Automated Results Reporting R Package","text":"","code":"# Install core dependencies first sudo apt install -y pandoc R --no-restore --no-save -e 'install.packages(c(\"knitr\", \"rmarkdown\"), lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"step-2-install-reprex-package","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Step 2: Install reprex Package","title":"report: Automated Results Reporting R Package","text":"","code":"# Multi-method installation R --no-restore --no-save -e ' if (!requireNamespace(\"reprex\", quietly = TRUE)) {   tryCatch({     install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))   }, error = function(e1) {     tryCatch({       install.packages(\"reprex\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))     }, error = function(e2) {       if (!requireNamespace(\"remotes\", quietly = TRUE)) {         install.packages(\"remotes\", lib = .libPaths()[1], repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\"))       }       remotes::install_github(\"tidyverse/reprex\")     })   }) } '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"step-3-set-environment-variables-critical","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Step 3: Set Environment Variables (CRITICAL)","title":"report: Automated Results Reporting R Package","text":"","code":"# ESSENTIAL: Set clipboard environment variable to prevent crashes export CLIPR_ALLOW=TRUE"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"step-4-test-reprex-with-simple-example","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Step 4: Test reprex with Simple Example","title":"report: Automated Results Reporting R Package","text":"","code":"export CLIPR_ALLOW=TRUE && R --no-restore --no-save -e ' library(reprex)  # Test basic functionality result <- reprex({   x <- 1:5   mean(x) }, venue = \"gh\", advertise = FALSE, html_preview = FALSE)  cat(\"SUCCESS: Basic reprex working\\n\") cat(result, sep = \"\\n\") '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"step-5-test-reprex-with-report-functions","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Step 5: Test reprex with report Functions","title":"report: Automated Results Reporting R Package","text":"","code":"export CLIPR_ALLOW=TRUE && R --no-restore --no-save -e ' library(reprex)  # Working reprex example with report result <- reprex({   library(report)   data(mtcars)      # Example model reporting   model <- lm(mpg ~ wt + hp, data = mtcars)   result <- report(model)   print(result)    }, venue = \"gh\", advertise = FALSE, html_preview = FALSE)  cat(\"SUCCESS: report reprex working\\n\") cat(result, sep = \"\\n\") '"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"common-error-solutions","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Common Error Solutions:","title":"report: Automated Results Reporting R Package","text":"Error: “reprex appears crash R” - Cause: CLIPR_ALLOW set missing dependencies - Solution: Set export CLIPR_ALLOW=TRUE install pandoc, knitr, rmarkdown Error: “CLIPR_ALLOW set” - Cause: Missing environment variable - Solution: Always run export CLIPR_ALLOW=TRUE using reprex Plot Rendering Issues - Cause: Complex ggplot objects cause crashes reprex rendering - Solution: plots, keep examples simple use ggsave() save plots separately - Workaround: Document plot creation without displaying plot object reprex","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"verified-working-example-template","dir":"","previous_headings":"Version Management and Changelog Updates > reprex Package Issues and Complete Debugging Guide","what":"Verified Working Example Template","title":"report: Automated Results Reporting R Package","text":"","code":"# ALWAYS use this pattern for report reprex: export CLIPR_ALLOW=TRUE library(reprex)  result <- reprex({   library(report)      # Your report example here   # Keep it simple, avoid complex plots in reprex    }, venue = \"gh\", advertise = FALSE, html_preview = FALSE)"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"common-reference-information","dir":"","previous_headings":"","what":"Common Reference Information","title":"report: Automated Results Reporting R Package","text":"following outputs frequently used commands. Reference instead running bash commands save time.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"repository-root-structure","dir":"","previous_headings":"Common Reference Information","what":"Repository Root Structure","title":"report: Automated Results Reporting R Package","text":"","code":"ls -la /home/runner/work/report/report/  .Rbuildignore       - Files to exclude from package build .github/            - GitHub workflows and actions .gitignore          - Git ignore patterns DESCRIPTION         - Package metadata and dependencies LICENSE             - Package license (MIT) LICENSE.md          - License details NAMESPACE           - Package exports (auto-generated) NEWS.md             - Change log R/                  - R source code (60+ files) README.Rmd          - Source for README (edit this, not README.md) README.md           - Main repository documentation cran-comments.md    - CRAN submission notes inst/               - Package installation files man/                - Help documentation (auto-generated) paper/              - Academic paper materials pkgdown/            - Documentation site configuration tests/              - Test files (testthat framework) vignettes/          - R Markdown tutorials"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"core-r-functions-by-file","dir":"","previous_headings":"Common Reference Information","what":"Core R Functions by File","title":"report: Automated Results Reporting R Package","text":"","code":"R/report.R           - Main report() generic function R/report.lm.R        - Linear model reporting R/report.aov.R       - ANOVA reporting R/report.htest.R     - Statistical test reporting R/report_sample.R    - Sample description reporting R/report_parameters.R - Parameter reporting R/report_performance.R - Model performance reporting R/format_*.R         - Text formatting utilities R/cite_easystats.R   - Citation utilities"},{"path":[]},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"correct-proper-variable-referencing-and-imports","dir":"","previous_headings":"Common Reference Information > Code Quality Examples","what":"CORRECT: Proper Variable Referencing and Imports","title":"report: Automated Results Reporting R Package","text":"","code":"# In report functions - USE proper imports and namespacing: #' @importFrom insight get_parameters #' @importFrom bayestestR describe_posterior #' @importFrom effectsize effectsize  # Always include proper imports for external functions: #' @importFrom stats lm #' @importFrom utils head"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"incorrect-missing-imports-causes-ci-failures","dir":"","previous_headings":"Common Reference Information > Code Quality Examples","what":"INCORRECT: Missing Imports (Causes CI Failures)","title":"report: Automated Results Reporting R Package","text":"","code":"# DO NOT: Use functions without proper imports get_parameters(model)  # Should be insight::get_parameters or use @importFrom  # DO NOT: Missing namespace declarations describe_posterior(model)  # Should have @importFrom bayestestR describe_posterior"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"cicd-integration","dir":"","previous_headings":"","what":"CI/CD Integration","title":"report: Automated Results Reporting R Package","text":"package uses GitHub Actions workflows: - R-CMD-check: Multi-platform testing (Ubuntu, macOS, Windows) - lint-changed-files: Code style checking lintr (changed files - efficient!) - test-coverage: Code coverage reporting covr - pkgdown: Documentation website generation Centralized Workflow System: easystats organization uses centralized workflow system easystats/workflows repositories reference. ensures consistency automatically keeps packages --date latest organization standards without manual maintenance. workflows run automatically pushes pull requests main/master branches.","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"ensuring-ci-workflows-pass-on-first-try","dir":"","previous_headings":"CI/CD Integration","what":"Ensuring CI Workflows Pass on First Try","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Follow guidelines prevent CI failures:","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"id_1-global-variable-binding-prevention","dir":"","previous_headings":"CI/CD Integration > Ensuring CI Workflows Pass on First Try","what":"1. Global Variable Binding Prevention","title":"report: Automated Results Reporting R Package","text":"Always use .data[[variable_name]] dplyr operations Always add @importFrom package function external functions Never create global_variables.R files utils::globalVariables() Test locally: R CMD check show “visible binding” warnings","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"id_2-documentation-consistency-validation","dir":"","previous_headings":"CI/CD Integration > Ensuring CI Workflows Pass on First Try","what":"2. Documentation Consistency Validation","title":"report: Automated Results Reporting R Package","text":"Always ensure parameter names @param match function arguments exactly Always run roxygen2::document() changing function signatures Test locally: Look “Codoc mismatches” warnings build","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"id_3-package-installation-strategy","dir":"","previous_headings":"CI/CD Integration > Ensuring CI Workflows Pass on First Try","what":"3. Package Installation Strategy","title":"report: Automated Results Reporting R Package","text":"packages can’t installed CRAN: - Primary: Use system packages via sudo apt install r-cran-[package] - Alternative (FIRST PRIORITY): Use R-universe repository: repos=c(\"https://r-universe.dev\", \"https://cloud.r-project.org\") - Fallback (SECOND PRIORITY): Use remotes GitHub packages: remotes::install_github(\"[author]/[package]\")","code":""},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"id_4-pre-commit-validation-checklist","dir":"","previous_headings":"CI/CD Integration > Ensuring CI Workflows Pass on First Try","what":"4. Pre-Commit Validation Checklist","title":"report: Automated Results Reporting R Package","text":"making PR, verify locally:","code":"# Must show ZERO \"no visible binding\" warnings: R CMD check report_*.tar.gz 2>&1 | grep -i \"binding\"  # Must show ZERO \"Codoc mismatches\" warnings:   R CMD check report_*.tar.gz 2>&1 | grep -i \"codoc\"  # All tests must pass (expected number varies): R --no-restore --no-save -e 'library(testthat); library(report); test_local()'"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"id_5-pr-description-requirements","dir":"","previous_headings":"CI/CD Integration > Ensuring CI Workflows Pass on First Try","what":"5. PR Description Requirements","title":"report: Automated Results Reporting R Package","text":"CRITICAL: Always include reprexes PR descriptions demonstrate code changes:","code":"# Create examples showing before/after behavior: library(report) data(mtcars)  # BEFORE (if modifying existing function): # [show current behavior]  # AFTER (with your changes): # [show improved behavior]"},{"path":"https://easystats.github.io/report/copilot-instructions.html","id":"performance-notes","dir":"","previous_headings":"","what":"Performance Notes","title":"report: Automated Results Reporting R Package","text":"Package build: ~19 seconds Package install: ~3 seconds Test suite: ~15 seconds (varies based enabled tests) Linting: ~20 seconds (normal existing codebase) Code styling: ~10-30 seconds depending package size Documentation update: ~5-15 seconds (roxygen2) R CMD check: ~30 seconds (without suggested packages), 2-5 minutes (full check) Function loading install: Near instant Package installation: 1-5 seconds per package (targeted) vs 2-10 minutes (batch installation suggested packages) CRITICAL: Never cancel builds tests prematurely. Always wait completion set appropriate timeouts (60+ seconds builds, 30+ seconds tests, 10+ minutes R CMD check). PACKAGE INSTALLATION: Use targeted installation (install specific function needs) avoid “package installation taking long time” messages. Installing 15+ suggested packages takes 2-10 minutes; installing 1-3 specific packages takes 1-5 seconds .","code":""},{"path":"https://easystats.github.io/report/index.html","id":"report-","dir":"","previous_headings":"","what":"Automated Reporting of Results and Statistical Models","title":"Automated Reporting of Results and Statistical Models","text":"“R manuscript” report’s primary goal bridge gap R’s output formatted results contained manuscript. automatically produces reports models data frames according best practices guidelines (e.g., APA’s style), ensuring standardization quality results reporting.","code":"library(report)  model <- lm(Sepal.Length ~ Species, data = iris) report(model) # We fitted a linear model (estimated using OLS) to predict Sepal.Length with # Species (formula: Sepal.Length ~ Species). The model explains a statistically # significant and substantial proportion of variance (R2 = 0.62, F(2, 147) = # 119.26, p < .001, adj. R2 = 0.61). The model's intercept, corresponding to # Species = setosa, is at 5.01 (95% CI [4.86, 5.15], t(147) = 68.76, p < .001). # Within this model: #  #   - The effect of Species [versicolor] is statistically significant and positive # (beta = 0.93, 95% CI [0.73, 1.13], t(147) = 9.03, p < .001; Std. beta = 1.12, # 95% CI [0.88, 1.37]) #   - The effect of Species [virginica] is statistically significant and positive # (beta = 1.58, 95% CI [1.38, 1.79], t(147) = 15.37, p < .001; Std. beta = 1.91, # 95% CI [1.66, 2.16]) #  # Standardized parameters were obtained by fitting the model on a standardized # version of the dataset. 95% Confidence Intervals (CIs) and p-values were # computed using a Wald t-distribution approximation."},{"path":"https://easystats.github.io/report/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automated Reporting of Results and Statistical Models","text":"package available CRAN can downloaded running: instead like experiment development version, can download GitHub: Load package every time start R Tip Instead library(report), use library(easystats). make features easystats-ecosystem available. stay updated, use easystats::install_latest().","code":"install.packages(\"report\") install.packages(\"remotes\") remotes::install_github(\"easystats/report\") # You only need to do that once library(\"report\")"},{"path":"https://easystats.github.io/report/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Automated Reporting of Results and Statistical Models","text":"package documentation can found .","code":""},{"path":[]},{"path":"https://easystats.github.io/report/index.html","id":"general-workflow","dir":"","previous_headings":"Report all the things","what":"General Workflow","title":"Automated Reporting of Results and Statistical Models","text":"report package works two step fashion. First, create report object report() function. , report object can displayed either textually (default output) table, using .data.frame(). Moreover, can also access digest compact version report using summary() report object.  report() function works variety models, well objects dataframes: reports nicely work within tidyverse workflow:","code":"report(iris) # The data contains 150 observations of the following 5 variables: #  #   - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, # range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing #   - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44, # range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing #   - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85, # range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing #   - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04, # range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing #   - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50, # 33.33%) and virginica (n = 50, 33.33%) iris %>%   select(-starts_with(\"Sepal\")) %>%   group_by(Species) %>%   report() %>%   summary() # The data contains 150 observations, grouped by Species, of the following 3 # variables: #  # - setosa (n = 50): #   - Petal.Length: Mean = 1.46, SD = 0.17, range: [1, 1.90] #   - Petal.Width: Mean = 0.25, SD = 0.11, range: [0.10, 0.60] #  # - versicolor (n = 50): #   - Petal.Length: Mean = 4.26, SD = 0.47, range: [3, 5.10] #   - Petal.Width: Mean = 1.33, SD = 0.20, range: [1, 1.80] #  # - virginica (n = 50): #   - Petal.Length: Mean = 5.55, SD = 0.55, range: [4.50, 6.90] #   - Petal.Width: Mean = 2.03, SD = 0.27, range: [1.40, 2.50]"},{"path":"https://easystats.github.io/report/index.html","id":"t-tests-and-correlations","dir":"","previous_headings":"Report all the things","what":"t-tests and correlations","title":"Automated Reporting of Results and Statistical Models","text":"Reports can used automatically format tests like t-tests correlations. mentioned, can also create tables .data.frame() functions, like example correlation test:","code":"report(t.test(mtcars$mpg ~ mtcars$am)) # Effect sizes were labelled following Cohen's (1988) recommendations. #  # The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$am # (mean in group 0 = 17.15, mean in group 1 = 24.39) suggests that the effect is # negative, statistically significant, and large (difference = -7.24, 95% CI # [-11.28, -3.21], t(18.33) = -3.77, p = 0.001; Cohen's d = -1.41, 95% CI [-2.26, # -0.53]) cor.test(iris$Sepal.Length, iris$Sepal.Width) %>%   report() %>%   as.data.frame() # Pearson's product-moment correlation #  # Parameter1        |       Parameter2 |     r |        95% CI | t(148) |     p # ----------------------------------------------------------------------------- # iris$Sepal.Length | iris$Sepal.Width | -0.12 | [-0.27, 0.04] |  -1.44 | 0.152 #  # Alternative hypothesis: two.sided"},{"path":"https://easystats.github.io/report/index.html","id":"anovas","dir":"","previous_headings":"Report all the things","what":"ANOVAs","title":"Automated Reporting of Results and Statistical Models","text":"works great ANOVAs, includes effect sizes interpretation.","code":"aov(Sepal.Length ~ Species, data = iris) %>%   report() # The ANOVA (formula: Sepal.Length ~ Species) suggests that: #  #   - The main effect of Species is statistically significant and large (F(2, 147) # = 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00]) #  # Effect sizes were labelled following Field's (2013) recommendations."},{"path":"https://easystats.github.io/report/index.html","id":"generalized-linear-models-glms","dir":"","previous_headings":"Report all the things","what":"Generalized Linear Models (GLMs)","title":"Automated Reporting of Results and Statistical Models","text":"Reports also compatible GLMs, logistic regression:","code":"model <- glm(vs ~ mpg * drat, data = mtcars, family = \"binomial\")  report(model) # We fitted a logistic model (estimated using ML) to predict vs with mpg and drat # (formula: vs ~ mpg * drat). The model's explanatory power is substantial # (Tjur's R2 = 0.51). The model's intercept, corresponding to mpg = 0 and drat = # 0, is at -33.43 (95% CI [-77.90, 3.25], p = 0.083). Within this model: #  #   - The effect of mpg is statistically non-significant and positive (beta = 1.79, # 95% CI [-0.10, 4.05], p = 0.066; Std. beta = 3.63, 95% CI [1.36, 7.50]) #   - The effect of drat is statistically non-significant and positive (beta = # 5.96, 95% CI [-3.75, 16.26], p = 0.205; Std. beta = -0.36, 95% CI [-1.96, # 0.98]) #   - The effect of mpg × drat is statistically non-significant and negative (beta # = -0.33, 95% CI [-0.83, 0.15], p = 0.141; Std. beta = -1.07, 95% CI [-2.66, # 0.48]) #  # Standardized parameters were obtained by fitting the model on a standardized # version of the dataset. 95% Confidence Intervals (CIs) and p-values were # computed using a Wald z-distribution approximation."},{"path":"https://easystats.github.io/report/index.html","id":"mixed-models","dir":"","previous_headings":"Report all the things","what":"Mixed Models","title":"Automated Reporting of Results and Statistical Models","text":"Mixed models, whose popularity usage exploding, can also reported:","code":"library(lme4)  model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)  report(model) # We fitted a linear mixed model (estimated using REML and nloptwrap optimizer) # to predict Sepal.Length with Petal.Length (formula: Sepal.Length ~ # Petal.Length). The model included Species as random effect (formula: ~1 | # Species). The model's total explanatory power is substantial (conditional R2 = # 0.97) and the part related to the fixed effects alone (marginal R2) is of 0.66. # The model's intercept, corresponding to Petal.Length = 0, is at 2.50 (95% CI # [1.19, 3.82], t(146) = 3.75, p < .001). Within this model: #  #   - The effect of Petal Length is statistically significant and positive (beta = # 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001; Std. beta = 1.89, 95% CI # [1.63, 2.16]) #  # Standardized parameters were obtained by fitting the model on a standardized # version of the dataset. 95% Confidence Intervals (CIs) and p-values were # computed using a Wald t-distribution approximation."},{"path":"https://easystats.github.io/report/index.html","id":"bayesian-models","dir":"","previous_headings":"Report all the things","what":"Bayesian Models","title":"Automated Reporting of Results and Statistical Models","text":"Bayesian models can also reported using new SEXIT framework, combines clarity, precision usefulness.","code":"library(rstanarm)  model <- stan_glm(mpg ~ qsec + wt, data = mtcars)  report(model) # We fitted a Bayesian linear model (estimated using MCMC sampling with 4 chains # of 1000 iterations and a warmup of 500) to predict mpg with qsec and wt # (formula: mpg ~ qsec + wt). Priors over parameters were all set as normal (mean # = 0.00, SD = 8.43; mean = 0.00, SD = 15.40) distributions. The model's # explanatory power is substantial (R2 = 0.81, 95% CI [0.71, 0.90], adj. R2 = # 0.79). The model's intercept, corresponding to qsec = 0 and wt = 0, is at 19.67 # (95% CI [8.34, 30.67]). Within this model: #  #   - The effect of qsec (Median = 0.93, 95% CI [0.39, 1.51]) has a 99.90% # probability of being positive (> 0), 98.65% of being significant (> 0.30), and # 0.30% of being large (> 1.81). The estimation successfully converged (Rhat = # 1.000) and the indices are reliable (ESS = 1762) #   - The effect of wt (Median = -5.05, 95% CI [-6.01, -4.05]) has a 100.00% # probability of being negative (< 0), 100.00% of being significant (< -0.30), # and 100.00% of being large (< -1.81). The estimation successfully converged # (Rhat = 1.000) and the indices are reliable (ESS = 2213) #  # Following the Sequential Effect eXistence and sIgnificance Testing (SEXIT) # framework, we report the median of the posterior distribution and its 95% CI # (Highest Density Interval), along the probability of direction (pd), the # probability of significance and the probability of being large. The thresholds # beyond which the effect is considered as significant (i.e., non-negligible) and # large are |0.30| and |1.81| (corresponding respectively to 0.05 and 0.30 of the # outcome's SD). Convergence and stability of the Bayesian sampling has been # assessed using R-hat, which should be below 1.01 (Vehtari et al., 2019), and # Effective Sample Size (ESS), which should be greater than 1000 (Burkner, 2017)."},{"path":[]},{"path":"https://easystats.github.io/report/index.html","id":"specific-parts","dir":"","previous_headings":"Other types of reports","what":"Specific parts","title":"Automated Reporting of Results and Statistical Models","text":"One can, complex reports, directly access pieces reports:","code":"model <- lm(Sepal.Length ~ Species, data = iris)  report_model(model) # linear model (estimated using OLS) to predict Sepal.Length with Species (formula: Sepal.Length ~ Species)  report_performance(model) # The model explains a statistically significant and substantial proportion of # variance (R2 = 0.62, F(2, 147) = 119.26, p < .001, adj. R2 = 0.61)  report_statistics(model) # beta = 5.01, 95% CI [4.86, 5.15], t(147) = 68.76, p < .001; Std. beta = -1.01, 95% CI [-1.18, -0.84] # beta = 0.93, 95% CI [0.73, 1.13], t(147) = 9.03, p < .001; Std. beta = 1.12, 95% CI [0.88, 1.37] # beta = 1.58, 95% CI [1.38, 1.79], t(147) = 15.37, p < .001; Std. beta = 1.91, 95% CI [1.66, 2.16]"},{"path":"https://easystats.github.io/report/index.html","id":"report-participants-details","dir":"","previous_headings":"Other types of reports","what":"Report participants’ details","title":"Automated Reporting of Results and Statistical Models","text":"can useful complete Participants paragraph manuscript.","code":"data <- data.frame(   \"Age\" = c(22, 23, 54, 21),   \"Sex\" = c(\"F\", \"F\", \"M\", \"M\") )  paste(   report_participants(data, spell_n = TRUE),   \"were recruited in the study by means of torture and coercion.\" ) # Four participants (Mean age = 30.0, SD = 16.0, range: [21, 54]; Sex: #   50.0% females, 50.0% males, 0.0% other) were recruited in the study by #   means of torture and coercion."},{"path":"https://easystats.github.io/report/index.html","id":"report-sample","dir":"","previous_headings":"Other types of reports","what":"Report sample","title":"Automated Reporting of Results and Statistical Models","text":"Report can also help create sample description table (also referred Table 1).","code":"report_sample(iris, by = \"Species\")"},{"path":"https://easystats.github.io/report/index.html","id":"report-system-and-packages","dir":"","previous_headings":"Other types of reports","what":"Report system and packages","title":"Automated Reporting of Results and Statistical Models","text":"Finally, report includes functions help write data analysis paragraph tools used.","code":"report(sessionInfo()) # Analyses were conducted using the R Statistical language (version 4.4.1; R Core # Team, 2024) on Windows 11 x64 (build 22631), using the packages lme4 (version # 1.1.35.5; Bates D et al., 2015), Matrix (version 1.7.0; Bates D et al., 2024), # Rcpp (version 1.0.13; Eddelbuettel D et al., 2024), rstanarm (version 2.32.1; # Goodrich B et al., 2024), report (version 0.5.9; Makowski D et al., 2023) and # dplyr (version 1.1.4; Wickham H et al., 2023). #  # References # ---------- #   - Bates D, Mächler M, Bolker B, Walker S (2015). \"Fitting Linear Mixed-Effects # Models Using lme4.\" _Journal of Statistical Software_, *67*(1), 1-48. # doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #   - Bates D, Maechler M, Jagan M (2024). _Matrix: Sparse and Dense Matrix Classes # and Methods_. R package version 1.7-0, # <https://CRAN.R-project.org/package=Matrix>. #   - Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, # Bates D, Chambers J (2024). _Rcpp: Seamless R and C++ Integration_. R package # version 1.0.13, <https://CRAN.R-project.org/package=Rcpp>. Eddelbuettel D, # François R (2011). \"Rcpp: Seamless R and C++ Integration.\" _Journal of # Statistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08 # <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and # C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 # <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. # Eddelbuettel D, Balamuta J (2018). \"Extending R with C++: A Brief Introduction # to Rcpp.\" _The American Statistician_, *72*(1), 28-36. # doi:10.1080/00031305.2017.1375990 # <https://doi.org/10.1080/00031305.2017.1375990>. #   - Goodrich B, Gabry J, Ali I, Brilleman S (2024). \"rstanarm: Bayesian applied # regression modeling via Stan.\" R package version 2.32.1, # <https://mc-stan.org/rstanarm/>. Brilleman S, Crowther M, Moreno-Betancur M, # Buros Novik J, Wolfe R (2018). \"Joint longitudinal and time-to-event models via # Stan.\" StanCon 2018. 10-12 Jan 2018. Pacific Grove, CA, USA., # <https://github.com/stan-dev/stancon_talks/>. #   - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). # \"Automated Results Reporting as a Practical Tool to Improve Reproducibility and # Methodological Best Practices Adoption.\" _CRAN_. # <https://easystats.github.io/report/>. #   - R Core Team (2024). _R: A Language and Environment for Statistical # Computing_. R Foundation for Statistical Computing, Vienna, Austria. # <https://www.R-project.org/>. #   - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar # of Data Manipulation_. R package version 1.1.4, # <https://CRAN.R-project.org/package=dplyr>."},{"path":"https://easystats.github.io/report/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Automated Reporting of Results and Statistical Models","text":"like , can put star repo, cite package follows:","code":"citation(\"report\") To cite in publications use:    Makowski, D., Lüdecke, D., Patil, I., Thériault, R., Ben-Shachar,   M.S., & Wiernik, B.M. (2023). Automated Results Reporting as a   Practical Tool to Improve Reproducibility and Methodological Best   Practices Adoption. CRAN. Available from   https://easystats.github.io/report/ doi: .  A BibTeX entry for LaTeX users is    @Article{,     title = {Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption},     author = {Dominique Makowski and Daniel Lüdecke and Indrajeet Patil and Rémi Thériault and Mattan S. Ben-Shachar and Brenton M. Wiernik},     year = {2023},     journal = {CRAN},     url = {https://easystats.github.io/report/},   }"},{"path":"https://easystats.github.io/report/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Automated Reporting of Results and Statistical Models","text":"report young package need affection. can easily part developing community open-source software improve science! Don’t shy, try code submit pull request (See contributing guide). Even ’s perfect, help make great!","code":""},{"path":"https://easystats.github.io/report/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Automated Reporting of Results and Statistical Models","text":"Please note report project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://easystats.github.io/report/reference/as.report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or test objects of class report. — as.report_text","title":"Create or test objects of class report. — as.report_text","text":"Allows create test whether object report class.","code":""},{"path":"https://easystats.github.io/report/reference/as.report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or test objects of class report. — as.report_text","text":"","code":"as.report_text(x, ...)  as.report(text, table = NULL, plot = NULL, ...)  is.report(x)  as.report_effectsize(x, summary = NULL, prefix = \"  - \", ...)  as.report_info(x, summary = NULL, ...)  as.report_intercept(x, summary = NULL, ...)  as.report_model(x, summary = NULL, ...)  as.report_parameters(x, summary = NULL, prefix = \"  - \", ...)  as.report_performance(x, summary = NULL, ...)  as.report_priors(x, summary = NULL, ...)  as.report_random(x, summary = NULL, ...)  as.report_statistics(x, summary = NULL, prefix = \"  - \", ...)  as.report_table(x, ...)"},{"path":"https://easystats.github.io/report/reference/as.report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or test objects of class report. — as.report_text","text":"x arbitrary R object. ... Args saved attributes. text Text obtained via report_text() table Table obtained via report_table() plot Plot obtained via report_plot(). yet implemented. summary Add summary attribute (extracted via summary()). prefix prefix displayed front parameter.","code":""},{"path":"https://easystats.github.io/report/reference/as.report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or test objects of class report. — as.report_text","text":"report object TRUE/FALSE value.","code":""},{"path":"https://easystats.github.io/report/reference/cite_easystats.html","id":null,"dir":"Reference","previous_headings":"","what":"Cite the easystats ecosystem — cite_easystats","title":"Cite the easystats ecosystem — cite_easystats","text":"convenient function wish cite easystats packages.","code":""},{"path":"https://easystats.github.io/report/reference/cite_easystats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cite the easystats ecosystem — cite_easystats","text":"","code":"cite_easystats(   packages = \"easystats\",   format = c(\"text\", \"markdown\", \"biblatex\"),   intext_prefix = TRUE,   intext_suffix = \".\" )  # S3 method for class 'cite_easystats' summary(object, what = \"all\", ...)  # S3 method for class 'cite_easystats' print(x, what = \"all\", ...)"},{"path":"https://easystats.github.io/report/reference/cite_easystats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cite the easystats ecosystem — cite_easystats","text":"packages character vector packages cite. Can \"\" easystats packages vector specific package names. format format generate citations. Can \"text\" plain text, \"markdown\" markdown citations CSL bibliography (recommended writing RMarkdown), \"biblatex\" BibLaTeX citations bibliography. intext_prefix character vector length 1 containing text include -text citations. TRUE, defaults \"Analyses conducted using easystats collection packages \". FALSE NA, prefix included. intext_suffix character vector length 1 containing text include -text citations. Defaults \".\". FALSE NA, suffix included. elements citations print, can \"\", \"intext\", \"refs\". ... used. Included compatibility generic function. x, object \"cite_easystats\" object print.","code":""},{"path":"https://easystats.github.io/report/reference/cite_easystats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cite the easystats ecosystem — cite_easystats","text":"list class \"cite_easystats\" elements: intext: -text citations requested format refs: References bibliography requested format","code":""},{"path":"https://easystats.github.io/report/reference/cite_easystats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cite the easystats ecosystem — cite_easystats","text":"","code":"# \\donttest{ # Cite just the 'easystats' umbrella package: cite_easystats() #> Thanks for crediting us! 😀 You can cite the easystats ecosystem as follows: #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Lüdecke et al., 2019/2023). #>  #>  #> References #> ---------- #>  #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Wiernik, B. M., #>     Bacher, Etienne, & Thériault, R. (2023). easystats: Streamline model #>     interpretation, visualization, and reporting [R package]. #>     https://easystats.github.io/easystats/ (Original work published 2019) #>  summary(cite_easystats(), what = \"all\") #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Lüdecke et al., 2019/2023). #>  #>  #> References #> ---------- #>  #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Wiernik, B. M., #>     Bacher, Etienne, & Thériault, R. (2023). easystats: Streamline model #>     interpretation, visualization, and reporting [R package]. #>     https://easystats.github.io/easystats/ (Original work published 2019) #>   # Cite every easystats package: cite_easystats(packages = \"all\") #> Thanks for crediting us! 😀 You can cite the easystats ecosystem as follows: #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Lüdecke et al., 2019, 2019/2022a, Makowski et al., 2021/2022a, Makowski et #> al., 2019, 2019/2022b, Lüdecke et al., 2021, 2019/2022b, Lüdecke et al., #> 2020, 2019/2022c, Ben-Shachar et al., 2020, 2019/2022, Makowski et al., #> 2020/2022c, Makowski et al., 2021/2023d). #>  #>  #> References #> ---------- #>  #> - Ben-Shachar, M. S., Lüdecke, D., & Makowski, D. (2020). effectsize: #>     Estimation of effect size indices and standardized parameters. Journal #>     of Open Source Software, 5(56), 2815. #>     https://doi.org/10.21105/joss.02815 #> - Ben-Shachar, M. S., Makowski, D., Lüdecke, D., Patil, I., & Wiernik, B. #>     M. (2022). effectsize: Indices of effect size and standardized #>     parameters (1.0.1) [R package]. #>     https://CRAN.R-project.org/package=effectsize (Original work published #>     2019) #> - Lüdecke, D., Ben-Shachar, M., Patil, I., & Makowski, D. (2020). #>     Extracting, computing and exploring the parameters of statistical #>     models using R. Journal of Open Source Software, 5(53), 2445. #>     https://doi.org/10.21105/joss.02445 #> - Lüdecke, D., Ben-Shachar, M., Patil, I., Waggoner, P., & Makowski, D. #>     (2021). performance: An R package for assessment, comparison and #>     testing of statistical models. Journal of Open Source Software, 6(60), #>     3139. https://doi.org/10.21105/joss.03139 #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Højsgaard, S., #>     & Wiernik, B. M. (2022). parameters: Processing of model parameters #>     (0.28.2) [R package]. https://CRAN.R-project.org/package=parameters #>     (Original work published 2019) #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Waggoner, P., & #>     Wiernik, B. M. (2021). performance: Assessment of regression models #>     performance (0.15.1) [R package]. #>     https://CRAN.R-project.org/package=performance (Original work published #>     2019) #> - Lüdecke, D., Makowski, D., Patil, I., Waggoner, P., Ben-Shachar, M. S., #>     Wiernik, B. M., & Arel-Bundock, V. (2022). insight: Easy access to #>     model information for various model objects (1.4.2) [R package]. #>     https://CRAN.R-project.org/package=insight (Original work published #>     2019) #> - Lüdecke, D., Waggoner, P., & Makowski, D. (2019). insight: A unified #>     interface to access information from model objects in R. Journal of #>     Open Source Software, 4(38), 1412. https://doi.org/10.21105/joss.01412 #> - Makowski, D., Ben-Shachar, M., & Lüdecke, D. (2019). bayestestR: #>     Describing effects and their uncertainty, existence and significance #>     within the Bayesian framework. Journal of Open Source Software, 4(40), #>     1541. https://doi.org/10.21105/joss.01541 #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., & Patil, I. (2022). #>     modelbased: Estimation of model-based predictions, contrasts and means #>     (0.13.0) [R package]. https://CRAN.R-project.org/package=modelbased #>     (Original work published 2020) #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., Patil, I., Wilson, M. D., #>     & Wiernik, B. M. (2021). bayestestR: Understand and describe Bayesian #>     models and posterior distributions (0.17.0.1) [R package]. #>     https://CRAN.R-project.org/package=bayestestR (Original work published #>     2019) #> - Makowski, D., Lüdecke, D., Patil, I., Ben-Shachar, M. S., & Wiernik, B. #>     M. (2022). datawizard: Easy data wrangling (1.2.0) [R package]. #>     https://CRAN.R-project.org/package=datawizard (Original work published #>     2021) #> - Makowski, D., Lüdecke, D., Patil, I., Thériault, R., Ben-Shachar, M. S., #>     & Wiernik, B. M. (2023). report: Automated reporting of results and #>     statistical models (0.6.1.5) [R package]. #>     https://easystats.github.io/easystats/ (Original work published 2021) #>  summary(cite_easystats(packages = \"all\"), what = \"all\") #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Lüdecke et al., 2019, 2019/2022a, Makowski et al., 2021/2022a, Makowski et #> al., 2019, 2019/2022b, Lüdecke et al., 2021, 2019/2022b, Lüdecke et al., #> 2020, 2019/2022c, Ben-Shachar et al., 2020, 2019/2022, Makowski et al., #> 2020/2022c, Makowski et al., 2021/2023d). #>  #>  #> References #> ---------- #>  #> - Ben-Shachar, M. S., Lüdecke, D., & Makowski, D. (2020). effectsize: #>     Estimation of effect size indices and standardized parameters. Journal #>     of Open Source Software, 5(56), 2815. #>     https://doi.org/10.21105/joss.02815 #> - Ben-Shachar, M. S., Makowski, D., Lüdecke, D., Patil, I., & Wiernik, B. #>     M. (2022). effectsize: Indices of effect size and standardized #>     parameters (1.0.1) [R package]. #>     https://CRAN.R-project.org/package=effectsize (Original work published #>     2019) #> - Lüdecke, D., Ben-Shachar, M., Patil, I., & Makowski, D. (2020). #>     Extracting, computing and exploring the parameters of statistical #>     models using R. Journal of Open Source Software, 5(53), 2445. #>     https://doi.org/10.21105/joss.02445 #> - Lüdecke, D., Ben-Shachar, M., Patil, I., Waggoner, P., & Makowski, D. #>     (2021). performance: An R package for assessment, comparison and #>     testing of statistical models. Journal of Open Source Software, 6(60), #>     3139. https://doi.org/10.21105/joss.03139 #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Højsgaard, S., #>     & Wiernik, B. M. (2022). parameters: Processing of model parameters #>     (0.28.2) [R package]. https://CRAN.R-project.org/package=parameters #>     (Original work published 2019) #> - Lüdecke, D., Makowski, D., Ben-Shachar, M. S., Patil, I., Waggoner, P., & #>     Wiernik, B. M. (2021). performance: Assessment of regression models #>     performance (0.15.1) [R package]. #>     https://CRAN.R-project.org/package=performance (Original work published #>     2019) #> - Lüdecke, D., Makowski, D., Patil, I., Waggoner, P., Ben-Shachar, M. S., #>     Wiernik, B. M., & Arel-Bundock, V. (2022). insight: Easy access to #>     model information for various model objects (1.4.2) [R package]. #>     https://CRAN.R-project.org/package=insight (Original work published #>     2019) #> - Lüdecke, D., Waggoner, P., & Makowski, D. (2019). insight: A unified #>     interface to access information from model objects in R. Journal of #>     Open Source Software, 4(38), 1412. https://doi.org/10.21105/joss.01412 #> - Makowski, D., Ben-Shachar, M., & Lüdecke, D. (2019). bayestestR: #>     Describing effects and their uncertainty, existence and significance #>     within the Bayesian framework. Journal of Open Source Software, 4(40), #>     1541. https://doi.org/10.21105/joss.01541 #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., & Patil, I. (2022). #>     modelbased: Estimation of model-based predictions, contrasts and means #>     (0.13.0) [R package]. https://CRAN.R-project.org/package=modelbased #>     (Original work published 2020) #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., Patil, I., Wilson, M. D., #>     & Wiernik, B. M. (2021). bayestestR: Understand and describe Bayesian #>     models and posterior distributions (0.17.0.1) [R package]. #>     https://CRAN.R-project.org/package=bayestestR (Original work published #>     2019) #> - Makowski, D., Lüdecke, D., Patil, I., Ben-Shachar, M. S., & Wiernik, B. #>     M. (2022). datawizard: Easy data wrangling (1.2.0) [R package]. #>     https://CRAN.R-project.org/package=datawizard (Original work published #>     2021) #> - Makowski, D., Lüdecke, D., Patil, I., Thériault, R., Ben-Shachar, M. S., #>     & Wiernik, B. M. (2023). report: Automated reporting of results and #>     statistical models (0.6.1.5) [R package]. #>     https://easystats.github.io/easystats/ (Original work published 2021) #>   # Cite specific packages: cite_easystats(packages = c(\"modelbased\", \"see\")) #> Requested package(s) not installed: #>   see #>   Citations to these packages omitted. #> Thanks for crediting us! 😀 You can cite the easystats ecosystem as follows: #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Makowski et al., 2020/2022). #>  #>  #> References #> ---------- #>  #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., & Patil, I. (2022). #>     modelbased: Estimation of model-based predictions, contrasts and means #>     (0.13.0) [R package]. https://CRAN.R-project.org/package=modelbased #>     (Original work published 2020) #>  summary(cite_easystats(packages = c(\"modelbased\", \"see\")), what = \"all\") #> Requested package(s) not installed: #>   see #>   Citations to these packages omitted. #>  #> Citations #> ---------- #>  #> Analyses were conducted using the _easystats_ collection of packages #> (Makowski et al., 2020/2022). #>  #>  #> References #> ---------- #>  #> - Makowski, D., Lüdecke, D., Ben-Shachar, M. S., & Patil, I. (2022). #>     modelbased: Estimation of model-based predictions, contrasts and means #>     (0.13.0) [R package]. https://CRAN.R-project.org/package=modelbased #>     (Original work published 2020) #>   # To cite easystats packages in an RMarkdown document, use:  ## In-text citations: print(cite_easystats(format = \"markdown\"), what = \"intext\") #> Analyses were conducted using the _easystats_ collection of packages #> [@easystatsPackage].  ## Bibliography (print with the  `output = 'asis'` option on the code chunk) print(cite_easystats(format = \"markdown\"), what = \"refs\") #> --- references: #>  #> - id: easystatsPackage accessed: - year: 2023 month: 2 day: 4 author: - #>     family: Lüdecke given: Daniel - family: Makowski given: Dominique - #>     family: Ben-Shachar given: Mattan S.  - family: Patil given: Indrajeet #>     - family: Wiernik given: Brenton M.  - family: Bacher given: Etienne - #>     family: Thériault given: Rémi citation-key: easystatsPackage genre: R #>     package issued: - year: 2023 month: 2 day: 4 original-date: - year: #>     2019 month: 1 day: 28 title: >- <span class=\"nocase\">easystats<\/span>: #>     streamline model interpretation, visualization, and reporting #>     title-short: <span class=\"nocase\">easystats<\/span> type: software URL: #>     https://easystats.github.io/easystats/ version: ... # }"},{"path":"https://easystats.github.io/report/reference/format_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Citation formatting — format_citation","title":"Citation formatting — format_citation","text":"Convenience functions manipulate format citations. works APA formatted citations, now.","code":""},{"path":"https://easystats.github.io/report/reference/format_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Citation formatting — format_citation","text":"","code":"format_citation(citation, authorsdate = FALSE, short = FALSE, intext = FALSE)  cite_citation(citation)  clean_citation(citation)"},{"path":"https://easystats.github.io/report/reference/format_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Citation formatting — format_citation","text":"citation character string citation. authorsdate show authors date (remove title, journal, etc.). short one authors, replace et al. intext Remove brackets around date (can placed inside larger parentheses).","code":""},{"path":"https://easystats.github.io/report/reference/format_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Citation formatting — format_citation","text":"character string.","code":""},{"path":"https://easystats.github.io/report/reference/format_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Citation formatting — format_citation","text":"","code":"library(report)  citation <- \"Makowski, D., Ben-Shachar, M. S., Patil, I., & Ludecke, D. (2020). Methods and Algorithms for Correlation Analysis in R. Journal of Open Source Software, 5(51), 2306.\"  format_citation(citation, authorsdate = TRUE) #> [1] \"Makowski, Ben-Shachar, Patil, & Ludecke (2020)\" format_citation(citation, authorsdate = TRUE, short = TRUE) #> [1] \"Makowski et al. (2020)\" format_citation(citation, authorsdate = TRUE, short = TRUE, intext = TRUE) #> [1] \"Makowski et al., 2020\"  cite_citation(citation) #> [1] \"(Makowski et al., 2020)\" clean_citation(citation()) #> [1] \"R Core Team (2025). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.\""},{"path":"https://easystats.github.io/report/reference/format_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenient formatting of text components — format_algorithm","title":"Convenient formatting of text components — format_algorithm","text":"Convenient formatting text components","code":""},{"path":"https://easystats.github.io/report/reference/format_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenient formatting of text components — format_algorithm","text":"","code":"format_algorithm(x)  format_formula(x, what = \"conditional\")  format_model(x)"},{"path":"https://easystats.github.io/report/reference/format_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenient formatting of text components — format_algorithm","text":"x R object want report (see list supported objects ). name item returned insight::find_formula.","code":""},{"path":"https://easystats.github.io/report/reference/format_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenient formatting of text components — format_algorithm","text":"character string. character string. character string.","code":""},{"path":"https://easystats.github.io/report/reference/format_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenient formatting of text components — format_algorithm","text":"","code":"model <- lm(Sepal.Length ~ Species, data = iris) format_algorithm(model) #> [1] \"OLS\"  # Mixed models library(lme4) #> Loading required package: Matrix model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris) format_algorithm(model) #> [1] \"REML and nloptwrap optimizer\" model <- lm(Sepal.Length ~ Species, data = iris) format_formula(model) #> [1] \"formula: Sepal.Length ~ Species\"  # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris) format_formula(model) #> [1] \"formula: Sepal.Length ~ Sepal.Width\" format_formula(model, \"random\") #> [1] \"formula: ~1 | Species\" model <- lm(Sepal.Length ~ Species, data = iris) format_model(model) #> [1] \"linear model\"  # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris) format_model(model) #> [1] \"linear mixed model\""},{"path":"https://easystats.github.io/report/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. insight display, print_html, print_md","code":""},{"path":"https://easystats.github.io/report/reference/report-package.html","id":null,"dir":"Reference","previous_headings":"","what":"report: Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption — report-package","title":"report: Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption — report-package","text":"report’s primary goal bridge gap R’s output formatted results contained manuscript. automatically produces reports models data frames according best practices guidelines (e.g., APA’s style), ensuring standardization quality results reporting.","code":""},{"path":"https://easystats.github.io/report/reference/report-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"report: Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption — report-package","text":"report-package","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"report: Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption — report-package","text":"Maintainer: Rémi Thériault remi.theriault@mail.mcgill.ca (ORCID) Authors: Dominique Makowski dom.makowski@gmail.com (ORCID) Daniel Lüdecke d.luedecke@uke.de (ORCID) Indrajeet Patil patilindrajeet.science@gmail.com (ORCID) Mattan S. Ben-Shachar matanshm@post.bgu.ac.il (ORCID) Brenton M. Wiernik brenton@wiernik.org (ORCID) contributors: Rudolf Siegel mutlusun@users.noreply.github.com (ORCID) [contributor] Camden Bock camden.bock@maine.edu (ORCID) [contributor]","code":""},{"path":"https://easystats.github.io/report/reference/report.BFBayesFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting BFBayesFactor objects from the BayesFactor package — report.BFBayesFactor","title":"Reporting BFBayesFactor objects from the BayesFactor package — report.BFBayesFactor","text":"Interpretation Bayes factor output BayesFactor package.","code":""},{"path":"https://easystats.github.io/report/reference/report.BFBayesFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting BFBayesFactor objects from the BayesFactor package — report.BFBayesFactor","text":"","code":"# S3 method for class 'BFBayesFactor' report(x, h0 = \"H0\", h1 = \"H1\", ...)  # S3 method for class 'BFBayesFactor' report_statistics(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.BFBayesFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting BFBayesFactor objects from the BayesFactor package — report.BFBayesFactor","text":"x object class BFBayesFactor. h0, h1 Names null alternative hypotheses. ... arguments passed effectsize::interpret_bf insight::format_bf. table parameters table (argument meant internal use).","code":""},{"path":"https://easystats.github.io/report/reference/report.BFBayesFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting BFBayesFactor objects from the BayesFactor package — report.BFBayesFactor","text":"","code":"# \\donttest{ library(BayesFactor) #> Loading required package: coda #> ************ #> Welcome to BayesFactor 0.9.12-4.7. If you have questions, please contact Richard Morey (richarddmorey@gmail.com). #>  #> Type BFManual() to open the manual. #> ************  rez <- BayesFactor::ttestBF(iris$Sepal.Width, iris$Sepal.Length) report_statistics(rez, exact = TRUE) # Print exact BF #> [1] \"BF10 = 6.11e+107\" report(rez, h0 = \"the null hypothesis\", h1 = \"the alternative\") #> [1] \"There is extreme evidence in favour of the alternative over the null hypothesis (BF10 > 1000).\"  rez <- BayesFactor::correlationBF(iris$Sepal.Width, iris$Sepal.Length) report(rez) #> [1] \"There is anecdotal evidence in favour of H0 over H1 (BF01 = 1.96).\" # }"},{"path":"https://easystats.github.io/report/reference/report.aov.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting ANOVAs — report.aov","title":"Reporting ANOVAs — report.aov","text":"Create reports ANOVA models.","code":""},{"path":"https://easystats.github.io/report/reference/report.aov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting ANOVAs — report.aov","text":"","code":"# S3 method for class 'aov' report(x, ...)  # S3 method for class 'aov' report_effectsize(x, include_intercept = FALSE, ...)  # S3 method for class 'aov' report_table(x, include_intercept = FALSE, ...)  # S3 method for class 'aov' report_statistics(x, table = NULL, ...)  # S3 method for class 'aov' report_parameters(x, ...)  # S3 method for class 'aov' report_model(x, table = NULL, ...)  # S3 method for class 'aov' report_info(x, effectsize = NULL, ...)  # S3 method for class 'aov' report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.aov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting ANOVAs — report.aov","text":"x Object class aov, anova aovlist. ... Arguments passed methods. include_intercept Set TRUE include intercept (relevant type-3 ANOVA tables). table Provide output report_table() avoid re-computation. effectsize Provide output report_effectsize() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.aov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting ANOVAs — report.aov","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.aov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting ANOVAs — report.aov","text":"","code":"data <- iris data$Cat1 <- rep(c(\"A\", \"B\"), length.out = nrow(data))  model <- aov(Sepal.Length ~ Species * Cat1, data = data) r <- report(model) r #> The ANOVA (formula: Sepal.Length ~ Species * Cat1) suggests that: #>  #>   - The main effect of Species is statistically significant and large (F(2, 144) #> = 118.43, p < .001; Eta2 (partial) = 0.62, 95% CI [0.54, 1.00]) #>   - The main effect of Cat1 is statistically not significant and very small (F(1, #> 144) = 6.25e-03, p = 0.937; Eta2 (partial) = 4.34e-05, 95% CI [0.00, 1.00]) #>   - The interaction between Species and Cat1 is statistically not significant and #> small (F(2, 144) = 0.98, p = 0.377; Eta2 (partial) = 0.01, 95% CI [0.00, 1.00]) #>  #> Effect sizes were labelled following Field's (2013) recommendations. summary(r) #> The ANOVA suggests that: #>  #>   - The main effect of Species is statistically significant and large (F(2, 144) #> = 118.43, p < .001, Eta2 (partial) = 0.62) #>   - The main effect of Cat1 is statistically not significant and very small (F(1, #> 144) = 6.25e-03, p = 0.937, Eta2 (partial) = 4.34e-05) #>   - The interaction between Species and Cat1 is statistically not significant and #> small (F(2, 144) = 0.98, p = 0.377, Eta2 (partial) = 0.01) as.data.frame(r) #> Parameter    | Sum_Squares |  df | Mean_Square |        F |      p #> ------------------------------------------------------------------ #> Species      |       63.21 |   2 |       31.61 |   118.43 | < .001 #> Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937  #> Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377  #> Residuals    |       38.43 | 144 |        0.27 |          |        #>  #> Parameter    | Eta2 (partial) | Eta2_partial 95% CI #> --------------------------------------------------- #> Species      |           0.62 |        [0.54, 1.00] #> Cat1         |       4.34e-05 |        [0.00, 1.00] #> Species:Cat1 |           0.01 |        [0.00, 1.00] #> Residuals    |                |                     summary(as.data.frame(r)) #> Parameter    | Sum_Squares |  df | Mean_Square |        F |      p | Eta2 (partial) #> ----------------------------------------------------------------------------------- #> Species      |       63.21 |   2 |       31.61 |   118.43 | < .001 |           0.62 #> Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937  |       4.34e-05 #> Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377  |           0.01 #> Residuals    |       38.43 | 144 |        0.27 |          |        |"},{"path":"https://easystats.github.io/report/reference/report.bayesfactor_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Models' Bayes Factor — report.bayesfactor_models","title":"Reporting Models' Bayes Factor — report.bayesfactor_models","text":"Create reports Bayes factors model comparison.","code":""},{"path":"https://easystats.github.io/report/reference/report.bayesfactor_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Models' Bayes Factor — report.bayesfactor_models","text":"","code":"# S3 method for class 'bayesfactor_models' report(   x,   interpretation = \"jeffreys1961\",   exact = TRUE,   protect_ratio = TRUE,   ... )  # S3 method for class 'bayesfactor_inclusion' report(   x,   interpretation = \"jeffreys1961\",   exact = TRUE,   protect_ratio = TRUE,   ... )"},{"path":"https://easystats.github.io/report/reference/report.bayesfactor_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Models' Bayes Factor — report.bayesfactor_models","text":"x Object class bayesfactor_inclusion. interpretation Effect size interpretation set rules (see interpret_bf). exact large small values reported scientific format (e.g., 4.24e5), truncated values (\"> 1000\" \"< 1/1000\"). protect_ratio values smaller 1 represented ratios? ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report.bayesfactor_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Models' Bayes Factor — report.bayesfactor_models","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.bayesfactor_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Models' Bayes Factor — report.bayesfactor_models","text":"","code":"library(bayestestR) # Bayes factor - models mo0 <- lm(Sepal.Length ~ 1, data = iris) mo1 <- lm(Sepal.Length ~ Species, data = iris) mo2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris) mo3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris) BFmodels <- bayesfactor_models(mo1, mo2, mo3, denominator = mo0)  r <- report(BFmodels) r #> Bayes factors were computed using the BIC approximation, by which BF10 = #> exp((BIC0 - BIC1)/2). Compared to the (Intercept only) model (the least #> supported model), we found extreme evidence (BF = 1.70e+29) in favour of the #> Species model; extreme evidence (BF = 5.84e+55) in favour of the Species + #> Petal.Length model (the most supported model); extreme evidence (BF = 2.20e+54) #> in favour of the Species * Petal.Length model.  # Bayes factor - inclusion inc_bf <- bayesfactor_inclusion(BFmodels, prior_odds = c(1, 2, 3), match_models = TRUE)  r <- report(inc_bf) r #> Bayesian model averaging (BMA) was used to obtain the average evidence for each #> predictor. Since each model has a prior probability (here we used subjective #> prior odds of 1, 2, 3), it is possible to sum the prior probability of all #> models that include a predictor of interest (the prior inclusion probability), #> and of all models that do not include that predictor (the prior exclusion #> probability). After the data are observed, we can similarly consider the sums #> of the posterior models' probabilities to obtain the posterior inclusion #> probability and the posterior exclusion probability. The change from prior to #> posterior inclusion odds is the Inclusion Bayes factor. For each predictor, #> averaging was done only across models that did not include any interactions #> with that predictor; additionally, for each interaction predictor, averaging #> was done only across models that contained the main effect from which the #> interaction predictor was comprised. This was done to prevent Inclusion Bayes #> factors from being contaminated with non-relevant evidence (see Mathot, 2017). #> We found extreme evidence (BF = 3.90e+55) in favour of including Species, with #> models including Species having an overall posterior probability of 95%; #> extreme evidence (BF = 6.89e+26) in favour of including Petal.Length, with #> models including Petal.Length having an overall posterior probability of 95%; #> strong evidence (BF = 1/26.52) against including Petal.Length:Species, with #> models including Petal.Length:Species having an overall posterior probability #> of 5%. as.data.frame(r) #> Terms                | Pr(prior) | Pr(posterior) | Inclusion BF #> --------------------------------------------------------------- #> Species              |      0.43 |          0.95 |       128.00 #> Petal.Length         |      0.29 |          0.95 |        61.80 #> Petal.Length:Species |      0.43 |          0.05 |  1/-3.05e-01 #>  #> Across matched models only. #> With custom prior odds of [1, 2, 3]."},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Bayesian Models from brms — report.brmsfit","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"Create reports Bayesian models. description parameters follows Sequential Effect eXistence sIgnificance Testing framework (see SEXIT documentation).","code":""},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"","code":"# S3 method for class 'brmsfit' report(x, ...)  # S3 method for class 'brmsfit' report_effectsize(x, effectsize_method = \"basic\", ...)"},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"x Object class lm glm. ... Arguments passed methods. effectsize_method Method computing effect sizes. brmsfit objects, defaults \"basic\" (faster, refitting) instead \"refit\" improve performance large Bayesian models. See documentation effectsize::effectsize().","code":""},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"object class report().","code":""},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"Message rstan package: \"avoid recompilation unchanged Stan programs, recommend calling rstan_options(auto_write = TRUE)\"","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.brmsfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Bayesian Models from brms — report.brmsfit","text":"","code":"# \\donttest{ # Bayesian models library(brms) model <- suppressWarnings(brm(mpg ~ qsec + wt,   data = mtcars,   refresh = 0, iter = 300 )) #> Compiling Stan program... #> Start sampling r <- report(model, verbose = FALSE) r #> We fitted a Bayesian linear model (estimated using MCMC sampling with 4 chains #> of 300 iterations and a warmup of 150) to predict mpg with qsec and wt #> (formula: mpg ~ qsec + wt). Priors were: Slopes (b_Intercept) ~ Student-t(df = #> 3.00, μ = 19.20, σ = 5.40); σ ~ Student-t⁺(df = 3.00, μ = 0.00, σ = 5.40). The #> model's explanatory power is substantial (R2 = 0.82, 95% CI [0.75, 0.85], adj. #> R2 = 0.78). Within this model: #>  #>   - The effect of b Intercept (Median = 19.51, 95% CI [9.40, 30.15]) has a #> 100.00% probability of being positive (> 0), 100.00% of being significant (> #> 0.30), and 100.00% of being large (> 1.81). The estimation successfully #> converged (Rhat = 0.998) but the indices are unreliable (ESS = 507) #>   - The effect of b qsec (Median = 0.93, 95% CI [0.42, 1.48]) has a 100.00% #> probability of being positive (> 0), 99.17% of being significant (> 0.30), and #> 0.00% of being large (> 1.81). The estimation successfully converged (Rhat = #> 0.998) but the indices are unreliable (ESS = 466) #>   - The effect of b wt (Median = -5.02, 95% CI [-6.03, -3.93]) has a 100.00% #> probability of being negative (< 0), 100.00% of being significant (< -0.30), #> and 100.00% of being large (< -1.81). The estimation successfully converged #> (Rhat = 1.000) but the indices are unreliable (ESS = 712) #>  #> Following the Sequential Effect eXistence and sIgnificance Testing (SEXIT) #> framework, we report the median of the posterior distribution and its 95% CI #> (Highest Density Interval), along the probability of direction (pd), the #> probability of significance and the probability of being large. The thresholds #> beyond which the effect is considered as significant (i.e., non-negligible) and #> large are |0.30| and |1.81| (corresponding respectively to 0.05 and 0.30 of the #> outcome's SD). Convergence and stability of the Bayesian sampling has been #> assessed using R-hat, which should be below 1.01 (Vehtari et al., 2019), and #> Effective Sample Size (ESS), which should be greater than 1000 (Burkner, 2017). summary(r) #> We fitted a Bayesian linear model to predict mpg with qsec and wt. Priors were: #> Slopes (b_Intercept) ~ Student-t(df = 3.00, μ = 19.20, σ = 5.40); σ ~ #> Student-t⁺(df = 3.00, μ = 0.00, σ = 5.40). The model's explanatory power is #> substantial (R2 = 0.82, adj. R2 = 0.78). Within this model: #>  #>   - The effect of b Intercept (Median = 19.51, 95% CI [9.40, 30.15]) has 100.00%, #> 100.00% and 100.00% probability of being positive (> 0), significant (> 0.30) #> and large (> 1.81). The estimation successfully converged (Rhat = 0.998) but #> the indices are unreliable (ESS = 507) #>   - The effect of b qsec (Median = 0.93, 95% CI [0.42, 1.48]) has 100.00%, 99.17% #> and 0.00% probability of being positive (> 0), significant (> 0.30) and large #> (> 1.81). The estimation successfully converged (Rhat = 0.998) but the indices #> are unreliable (ESS = 466) #>   - The effect of b wt (Median = -5.02, 95% CI [-6.03, -3.93]) has 100.00%, #> 100.00% and 100.00% probability of being negative (< 0), significant (< -0.30) #> and large (< -1.81). The estimation successfully converged (Rhat = 1.000) but #> the indices are unreliable (ESS = 712) as.data.frame(r) #> Parameter   |   Component | Median |         95% CI |   pd |  Rhat | ESS |    Fit #> --------------------------------------------------------------------------------- #> (Intercept) | conditional |  19.51 | [ 9.40, 30.15] | 100% | 0.998 | 507 |        #> qsec        | conditional |   0.93 | [ 0.42,  1.48] | 100% | 0.998 | 466 |        #> wt          | conditional |  -5.02 | [-6.03, -3.93] | 100% | 1.000 | 712 |        #> sigma       |       sigma |   2.66 | [ 2.10,  3.54] | 100% | 1.007 | 321 |        #>             |             |        |                |      |       |     |        #> ELPD        |             |        |                |      |       |     | -79.08 #> LOOIC       |             |        |                |      |       |     | 158.16 #> WAIC        |             |        |                |      |       |     | 157.98 #> R2          |             |        |                |      |       |     |   0.82 #> R2 (adj.)   |             |        |                |      |       |     |   0.78 #> Sigma       |             |        |                |      |       |     |   2.69 summary(as.data.frame(r)) #> Parameter   |   Component | Median |         95% CI |   pd |  Rhat | ESS |  Fit #> ------------------------------------------------------------------------------- #> (Intercept) | conditional |  19.51 | [ 9.40, 30.15] | 100% | 0.998 | 507 |      #> qsec        | conditional |   0.93 | [ 0.42,  1.48] | 100% | 0.998 | 466 |      #> wt          | conditional |  -5.02 | [-6.03, -3.93] | 100% | 1.000 | 712 |      #> sigma       |       sigma |   2.66 | [ 2.10,  3.54] | 100% | 1.007 | 321 |      #>             |             |        |                |      |       |     |      #> R2          |             |        |                |      |       |     | 0.82 #> R2 (adj.)   |             |        |                |      |       |     | 0.78 #> Sigma       |             |        |                |      |       |     | 2.69 # }"},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Bayesian Model Comparison — report.compare.loo","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"Automatically report results Bayesian model comparison using loo package.","code":""},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"","code":"# S3 method for class 'compare.loo' report(x, include_IC = TRUE, include_ENP = FALSE, ...)"},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"x object class brms::loo_compare. include_IC Whether include information criteria (IC). include_ENP Whether include effective number parameters (ENP). ... Additional arguments (used now).","code":""},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"Objects class report_text().","code":""},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"rule thumb models \"similar\" |elpd_diff| (absolute value elpd_diff) less 4 (Sivula, Magnusson Vehtari, 2020). superior 4, one can use SE obtain standardized difference (Z-diff) interpret , assuming difference normally distributed. corresponding p-value calculated 2 * pnorm(-abs(Z-diff)). However, note raw ELPD difference small (less 4), make much sense rely standardized value: useful conclude model much better another models make similar predictions.","code":""},{"path":"https://easystats.github.io/report/reference/report.compare.loo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Bayesian Model Comparison — report.compare.loo","text":"","code":"# \\donttest{ library(brms)  m1 <- brms::brm(mpg ~ qsec, data = mtcars) #> Compiling Stan program... #> Start sampling #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 6e-06 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.014 seconds (Warm-up) #> Chain 1:                0.011 seconds (Sampling) #> Chain 1:                0.025 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 3e-06 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.015 seconds (Warm-up) #> Chain 2:                0.011 seconds (Sampling) #> Chain 2:                0.026 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 3e-06 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.013 seconds (Warm-up) #> Chain 3:                0.011 seconds (Sampling) #> Chain 3:                0.024 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 3e-06 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.013 seconds (Warm-up) #> Chain 4:                0.012 seconds (Sampling) #> Chain 4:                0.025 seconds (Total) #> Chain 4:  m2 <- brms::brm(mpg ~ qsec + drat, data = mtcars) #> Compiling Stan program... #> Start sampling #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 7e-06 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.07 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.016 seconds (Warm-up) #> Chain 1:                0.013 seconds (Sampling) #> Chain 1:                0.029 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 3e-06 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.016 seconds (Warm-up) #> Chain 2:                0.011 seconds (Sampling) #> Chain 2:                0.027 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 3e-06 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.016 seconds (Warm-up) #> Chain 3:                0.012 seconds (Sampling) #> Chain 3:                0.028 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 3e-06 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.016 seconds (Warm-up) #> Chain 4:                0.012 seconds (Sampling) #> Chain 4:                0.028 seconds (Total) #> Chain 4:  m3 <- brms::brm(mpg ~ qsec + drat + wt, data = mtcars) #> Compiling Stan program... #> Start sampling #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 9e-06 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.09 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.019 seconds (Warm-up) #> Chain 1:                0.015 seconds (Sampling) #> Chain 1:                0.034 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 3e-06 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.02 seconds (Warm-up) #> Chain 2:                0.014 seconds (Sampling) #> Chain 2:                0.034 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 3e-06 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.021 seconds (Warm-up) #> Chain 3:                0.016 seconds (Sampling) #> Chain 3:                0.037 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 3e-06 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.03 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.021 seconds (Warm-up) #> Chain 4:                0.02 seconds (Sampling) #> Chain 4:                0.041 seconds (Total) #> Chain 4:   x <- suppressWarnings(brms::loo_compare(   brms::add_criterion(m1, \"loo\"),   brms::add_criterion(m2, \"loo\"),   brms::add_criterion(m3, \"loo\"),   model_names = c(\"m1\", \"m2\", \"m3\") )) report(x) #> The difference in predictive accuracy, as indexed by Expected Log Predictive #> Density (ELPD-LOO), suggests that 'm3' is the best model (ELPD = -79.18), #> followed by 'm2' (diff-ELPD = -13.16 +- 4.38, p = 0.003) and 'm1' (diff-ELPD = #> -23.05 +- 4.41, p < .001) report(x, include_IC = FALSE) #> The difference in predictive accuracy, as indexed by Expected Log Predictive #> Density (ELPD-LOO), suggests that 'm3' is the best model (ELPD = -79.18), #> followed by 'm2' (diff-ELPD = -13.16 +- 4.38, p = 0.003) and 'm1' (diff-ELPD = #> -23.05 +- 4.41, p < .001) report(x, include_ENP = TRUE) #> The difference in predictive accuracy, as indexed by Expected Log Predictive #> Density (ELPD-LOO), suggests that 'm3' is the best model (LOOIC = 158.36, ENP = #> 5.06), followed by 'm2' (diff-ELPD = -13.16 +- 4.38, p = 0.003, LOOIC = 184.68, #> ENP = 3.84) and 'm1' (diff-ELPD = -23.05 +- 4.41, p < .001, LOOIC = 204.46, ENP #> = 2.54) # }"},{"path":"https://easystats.github.io/report/reference/report.compare_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting models comparison — report.compare_performance","title":"Reporting models comparison — report.compare_performance","text":"Create reports model comparison obtained performance::compare_performance() function performance package.","code":""},{"path":"https://easystats.github.io/report/reference/report.compare_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting models comparison — report.compare_performance","text":"","code":"# S3 method for class 'compare_performance' report(x, ...)  # S3 method for class 'compare_performance' report_table(x, ...)  # S3 method for class 'compare_performance' report_statistics(x, table = NULL, ...)  # S3 method for class 'compare_performance' report_parameters(x, table = NULL, ...)  # S3 method for class 'compare_performance' report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.compare_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting models comparison — report.compare_performance","text":"x Object class NEW OBJECT. ... Arguments passed methods. table Provide output report_table() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.compare_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting models comparison — report.compare_performance","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.compare_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting models comparison — report.compare_performance","text":"","code":"# \\donttest{ library(report) library(performance)  m1 <- lm(Sepal.Length ~ Petal.Length * Species, data = iris) m2 <- lm(Sepal.Length ~ Petal.Length + Species, data = iris) m3 <- lm(Sepal.Length ~ Petal.Length, data = iris)  x <- performance::compare_performance(m1, m2, m3) r <- report(x) r #> We compared three models; lm (R2 = 0.84, adj. R2 = 0.83, AIC = 106.77, BIC = #> 127.84, RMSE = 0.33, Sigma = 0.34), lm (R2 = 0.84, adj. R2 = 0.83, AIC = #> 106.23, BIC = 121.29, RMSE = 0.33, Sigma = 0.34) and lm (R2 = 0.76, adj. R2 = #> 0.76, AIC = 160.04, BIC = 169.07, RMSE = 0.40, Sigma = 0.41). summary(r) #> We compared three models; lm (adj. R2 = 0.83, BIC = 127.84), lm (adj. R2 = #> 0.83, BIC = 121.29) and lm (adj. R2 = 0.76, BIC = 169.07). as.data.frame(r) #> Name | Model | AIC (weights) | AICc (weights) | BIC (weights) |   R2 #> -------------------------------------------------------------------- #> m1   |    lm |  106.8 (0.43) |   107.6 (0.39) |  127.8 (0.04) | 0.84 #> m2   |    lm |  106.2 (0.57) |   106.6 (0.61) |  121.3 (0.96) | 0.84 #> m3   |    lm | 160.0 (<.001) |  160.2 (<.001) | 169.1 (<.001) | 0.76 #>  #> Name | R2 (adj.) | RMSE | Sigma #> ------------------------------- #> m1   |      0.83 | 0.33 |  0.34 #> m2   |      0.83 | 0.33 |  0.34 #> m3   |      0.76 | 0.40 |  0.41 summary(as.data.frame(r)) #> Name | Model | AIC (weights) | AICc (weights) | BIC (weights) |   R2 #> -------------------------------------------------------------------- #> m1   |    lm |  106.8 (0.43) |   107.6 (0.39) |  127.8 (0.04) | 0.84 #> m2   |    lm |  106.2 (0.57) |   106.6 (0.61) |  121.3 (0.96) | 0.84 #> m3   |    lm | 160.0 (<.001) |  160.2 (<.001) | 169.1 (<.001) | 0.76 #>  #> Name | R2 (adj.) | RMSE #> ----------------------- #> m1   |      0.83 | 0.33 #> m2   |      0.83 | 0.33 #> m3   |      0.76 | 0.40  # Specific reports report_table(x) #> Name | Model | AIC (weights) | AICc (weights) | BIC (weights) |   R2 #> -------------------------------------------------------------------- #> m1   |    lm |  106.8 (0.43) |   107.6 (0.39) |  127.8 (0.04) | 0.84 #> m2   |    lm |  106.2 (0.57) |   106.6 (0.61) |  121.3 (0.96) | 0.84 #> m3   |    lm | 160.0 (<.001) |  160.2 (<.001) | 169.1 (<.001) | 0.76 #>  #> Name | R2 (adj.) | RMSE | Sigma #> ------------------------------- #> m1   |      0.83 | 0.33 |  0.34 #> m2   |      0.83 | 0.33 |  0.34 #> m3   |      0.76 | 0.40 |  0.41 report_statistics(x) #> R2 = 0.84, adj. R2 = 0.83, AIC = 106.77, BIC = 127.84, RMSE = 0.33, Sigma = 0.34 #> R2 = 0.84, adj. R2 = 0.83, AIC = 106.23, BIC = 121.29, RMSE = 0.33, Sigma = 0.34 #> R2 = 0.76, adj. R2 = 0.76, AIC = 160.04, BIC = 169.07, RMSE = 0.40, Sigma = 0.41 report_parameters(x) #>   - lm (R2 = 0.84, adj. R2 = 0.83, AIC = 106.77, BIC = 127.84, RMSE = 0.33, Sigma = 0.34) #>   - lm (R2 = 0.84, adj. R2 = 0.83, AIC = 106.23, BIC = 121.29, RMSE = 0.33, Sigma = 0.34) #>   - lm (R2 = 0.76, adj. R2 = 0.76, AIC = 160.04, BIC = 169.07, RMSE = 0.40, Sigma = 0.41) # }"},{"path":"https://easystats.github.io/report/reference/report.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Datasets and Dataframes — report.character","title":"Reporting Datasets and Dataframes — report.character","text":"Create reports data frames.","code":""},{"path":"https://easystats.github.io/report/reference/report.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Datasets and Dataframes — report.character","text":"","code":"# S3 method for class 'character' report(   x,   n_entries = 3,   levels_percentage = \"auto\",   missing_percentage = \"auto\",   ... )  # S3 method for class 'data.frame' report(   x,   n = FALSE,   centrality = \"mean\",   dispersion = TRUE,   range = TRUE,   distribution = FALSE,   levels_percentage = \"auto\",   digits = 2,   n_entries = 3,   missing_percentage = \"auto\",   ... )  # S3 method for class 'factor' report(x, levels_percentage = \"auto\", ...)  # S3 method for class 'numeric' report(   x,   n = FALSE,   centrality = \"mean\",   dispersion = TRUE,   range = TRUE,   distribution = FALSE,   missing_percentage = \"auto\",   digits = 2,   ... )"},{"path":"https://easystats.github.io/report/reference/report.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Datasets and Dataframes — report.character","text":"x R object want report (see list supported objects ). n_entries Number different character entries show. Can \"\". levels_percentage Show characters entries factor levels number percentage. \"auto\", set number percentage length n observations larger 100. missing_percentage Show missing number (default) percentage. \"auto\", set number percentage length n observations larger 100. ... Arguments passed methods. n Include number observations individual variable. centrality Character vector, indicating index centrality (either \"mean\" \"median\"). dispersion Show index dispersion (sd centrality = \"mean\", mad centrality = \"median\"). range Show range. distribution Show kurtosis skewness. digits Number significant digits.","code":""},{"path":"https://easystats.github.io/report/reference/report.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Datasets and Dataframes — report.character","text":"object class report().","code":""},{"path":"https://easystats.github.io/report/reference/report.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Datasets and Dataframes — report.character","text":"","code":"r <- report(iris,   centrality = \"median\", dispersion = FALSE,   distribution = TRUE, missing_percentage = TRUE ) r #> The data contains 150 observations of the following 5 variables: #>  #>   - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, #> range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing #>   - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44, #> range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing #>   - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85, #> range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing #>   - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04, #> range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing #>   - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50, #> 33.33%) and virginica (n = 50, 33.33%) summary(r) #> The data contains 150 observations of the following 5 variables: #>  #>   - Sepal.Length: Median = 5.80, range: [4.30, 7.90], Skewness = 0.31, Kurtosis = #> -0.55 #>   - Sepal.Width: Median = 3.00, range: [2, 4.40], Skewness = 0.32, Kurtosis = #> 0.23 #>   - Petal.Length: Median = 4.35, range: [1, 6.90], Skewness = -0.27, Kurtosis = #> -1.40 #>   - Petal.Width: Median = 1.30, range: [0.10, 2.50], Skewness = -0.10, Kurtosis = #> -1.34 #>   - Species: 3 levels, namely setosa (n = 50), versicolor (n = 50) and virginica #> (n = 50) as.data.frame(r) #> Variable     |      Level | n_Obs | percentage_Obs | Mean |   SD | Median #> ------------------------------------------------------------------------- #> Sepal.Length |            |   150 |                | 5.84 | 0.83 |   5.80 #> Sepal.Width  |            |   150 |                | 3.06 | 0.44 |   3.00 #> Petal.Length |            |   150 |                | 3.76 | 1.77 |   4.35 #> Petal.Width  |            |   150 |                | 1.20 | 0.76 |   1.30 #> Species      |     setosa |    50 |          33.33 |      |      |        #> Species      | versicolor |    50 |          33.33 |      |      |        #> Species      |  virginica |    50 |          33.33 |      |      |        #>  #> Variable     |  MAD |  Min |  Max | Skewness | Kurtosis | percentage_Missing #> ---------------------------------------------------------------------------- #> Sepal.Length | 1.04 | 4.30 | 7.90 |     0.31 |    -0.55 |                  0 #> Sepal.Width  | 0.44 | 2.00 | 4.40 |     0.32 |     0.23 |                  0 #> Petal.Length | 1.85 | 1.00 | 6.90 |    -0.27 |    -1.40 |                  0 #> Petal.Width  | 1.04 | 0.10 | 2.50 |    -0.10 |    -1.34 |                  0 #> Species      |      |      |      |          |          |                    #> Species      |      |      |      |          |          |                    #> Species      |      |      |      |          |          |                    summary(as.data.frame(r)) #> Variable     |      Level | n_Obs | percentage_Obs | Median |  Min |  Max #> ------------------------------------------------------------------------- #> Sepal.Length |            |       |                |   5.80 | 4.30 | 7.90 #> Sepal.Width  |            |       |                |   3.00 | 2.00 | 4.40 #> Petal.Length |            |       |                |   4.35 | 1.00 | 6.90 #> Petal.Width  |            |       |                |   1.30 | 0.10 | 2.50 #> Species      |     setosa |    50 |          33.33 |        |      |      #> Species      | versicolor |    50 |          33.33 |        |      |      #> Species      |  virginica |    50 |          33.33 |        |      |      #>  #> Variable     | Skewness | Kurtosis | percentage_Missing #> ------------------------------------------------------- #> Sepal.Length |     0.31 |    -0.55 |                  0 #> Sepal.Width  |     0.32 |     0.23 |                  0 #> Petal.Length |    -0.27 |    -1.40 |                  0 #> Petal.Width  |    -0.10 |    -1.34 |                  0 #> Species      |          |          |                    #> Species      |          |          |                    #> Species      |          |          |                     # grouped analysis using `{dplyr}` package library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union r <- iris %>%   group_by(Species) %>%   report() r #> The data contains 150 observations, grouped by Species, of the following 5 #> variables: #>  #> - setosa (n = 50): #>   - Sepal.Length: n = 50, Mean = 5.01, SD = 0.35, Median = 5.00, MAD = 0.30, #> range: [4.30, 5.80], Skewness = 0.12, Kurtosis = -0.25, 0 missing #>   - Sepal.Width: n = 50, Mean = 3.43, SD = 0.38, Median = 3.40, MAD = 0.37, #> range: [2.30, 4.40], Skewness = 0.04, Kurtosis = 0.95, 0 missing #>   - Petal.Length: n = 50, Mean = 1.46, SD = 0.17, Median = 1.50, MAD = 0.15, #> range: [1, 1.90], Skewness = 0.11, Kurtosis = 1.02, 0 missing #>   - Petal.Width: n = 50, Mean = 0.25, SD = 0.11, Median = 0.20, MAD = 0.00, #> range: [0.10, 0.60], Skewness = 1.25, Kurtosis = 1.72, 0 missing #>  #> - versicolor (n = 50): #>   - Sepal.Length: n = 50, Mean = 5.94, SD = 0.52, Median = 5.90, MAD = 0.52, #> range: [4.90, 7], Skewness = 0.11, Kurtosis = -0.53, 0 missing #>   - Sepal.Width: n = 50, Mean = 2.77, SD = 0.31, Median = 2.80, MAD = 0.30, #> range: [2, 3.40], Skewness = -0.36, Kurtosis = -0.37, 0 missing #>   - Petal.Length: n = 50, Mean = 4.26, SD = 0.47, Median = 4.35, MAD = 0.52, #> range: [3, 5.10], Skewness = -0.61, Kurtosis = 0.05, 0 missing #>   - Petal.Width: n = 50, Mean = 1.33, SD = 0.20, Median = 1.30, MAD = 0.22, #> range: [1, 1.80], Skewness = -0.03, Kurtosis = -0.41, 0 missing #>  #> - virginica (n = 50): #>   - Sepal.Length: n = 50, Mean = 6.59, SD = 0.64, Median = 6.50, MAD = 0.59, #> range: [4.90, 7.90], Skewness = 0.12, Kurtosis = 0.03, 0 missing #>   - Sepal.Width: n = 50, Mean = 2.97, SD = 0.32, Median = 3.00, MAD = 0.30, #> range: [2.20, 3.80], Skewness = 0.37, Kurtosis = 0.71, 0 missing #>   - Petal.Length: n = 50, Mean = 5.55, SD = 0.55, Median = 5.55, MAD = 0.67, #> range: [4.50, 6.90], Skewness = 0.55, Kurtosis = -0.15, 0 missing #>   - Petal.Width: n = 50, Mean = 2.03, SD = 0.27, Median = 2.00, MAD = 0.30, #> range: [1.40, 2.50], Skewness = -0.13, Kurtosis = -0.60, 0 missing summary(r) #> The data contains 150 observations, grouped by Species, of the following 5 #> variables: #>  #> - setosa (n = 50): #>   - Sepal.Length: Mean = 5.01, SD = 0.35, range: [4.30, 5.80] #>   - Sepal.Width: Mean = 3.43, SD = 0.38, range: [2.30, 4.40] #>   - Petal.Length: Mean = 1.46, SD = 0.17, range: [1, 1.90] #>   - Petal.Width: Mean = 0.25, SD = 0.11, range: [0.10, 0.60] #>  #> - versicolor (n = 50): #>   - Sepal.Length: Mean = 5.94, SD = 0.52, range: [4.90, 7] #>   - Sepal.Width: Mean = 2.77, SD = 0.31, range: [2, 3.40] #>   - Petal.Length: Mean = 4.26, SD = 0.47, range: [3, 5.10] #>   - Petal.Width: Mean = 1.33, SD = 0.20, range: [1, 1.80] #>  #> - virginica (n = 50): #>   - Sepal.Length: Mean = 6.59, SD = 0.64, range: [4.90, 7.90] #>   - Sepal.Width: Mean = 2.97, SD = 0.32, range: [2.20, 3.80] #>   - Petal.Length: Mean = 5.55, SD = 0.55, range: [4.50, 6.90] #>   - Petal.Width: Mean = 2.03, SD = 0.27, range: [1.40, 2.50] as.data.frame(r) #> Group      |     Variable | n_Obs | Mean |   SD | Median |  MAD |  Min |  Max #> ----------------------------------------------------------------------------- #> setosa     | Sepal.Length |    50 | 5.01 | 0.35 |   5.00 | 0.30 | 4.30 | 5.80 #> setosa     |  Sepal.Width |    50 | 3.43 | 0.38 |   3.40 | 0.37 | 2.30 | 4.40 #> setosa     | Petal.Length |    50 | 1.46 | 0.17 |   1.50 | 0.15 | 1.00 | 1.90 #> setosa     |  Petal.Width |    50 | 0.25 | 0.11 |   0.20 | 0.00 | 0.10 | 0.60 #> versicolor | Sepal.Length |    50 | 5.94 | 0.52 |   5.90 | 0.52 | 4.90 | 7.00 #> versicolor |  Sepal.Width |    50 | 2.77 | 0.31 |   2.80 | 0.30 | 2.00 | 3.40 #> versicolor | Petal.Length |    50 | 4.26 | 0.47 |   4.35 | 0.52 | 3.00 | 5.10 #> versicolor |  Petal.Width |    50 | 1.33 | 0.20 |   1.30 | 0.22 | 1.00 | 1.80 #> virginica  | Sepal.Length |    50 | 6.59 | 0.64 |   6.50 | 0.59 | 4.90 | 7.90 #> virginica  |  Sepal.Width |    50 | 2.97 | 0.32 |   3.00 | 0.30 | 2.20 | 3.80 #> virginica  | Petal.Length |    50 | 5.55 | 0.55 |   5.55 | 0.67 | 4.50 | 6.90 #> virginica  |  Petal.Width |    50 | 2.03 | 0.27 |   2.00 | 0.30 | 1.40 | 2.50 #>  #> Group      | Skewness | Kurtosis | n_Missing #> -------------------------------------------- #> setosa     |     0.12 |    -0.25 |         0 #> setosa     |     0.04 |     0.95 |         0 #> setosa     |     0.11 |     1.02 |         0 #> setosa     |     1.25 |     1.72 |         0 #> versicolor |     0.11 |    -0.53 |         0 #> versicolor |    -0.36 |    -0.37 |         0 #> versicolor |    -0.61 |     0.05 |         0 #> versicolor |    -0.03 |    -0.41 |         0 #> virginica  |     0.12 |     0.03 |         0 #> virginica  |     0.37 |     0.71 |         0 #> virginica  |     0.55 |    -0.15 |         0 #> virginica  |    -0.13 |    -0.60 |         0 summary(as.data.frame(r)) #> Group      |     Variable | Mean |   SD |  Min |  Max | n_Missing #> ----------------------------------------------------------------- #> setosa     | Sepal.Length | 5.01 | 0.35 | 4.30 | 5.80 |         0 #> setosa     |  Sepal.Width | 3.43 | 0.38 | 2.30 | 4.40 |         0 #> setosa     | Petal.Length | 1.46 | 0.17 | 1.00 | 1.90 |         0 #> setosa     |  Petal.Width | 0.25 | 0.11 | 0.10 | 0.60 |         0 #> versicolor | Sepal.Length | 5.94 | 0.52 | 4.90 | 7.00 |         0 #> versicolor |  Sepal.Width | 2.77 | 0.31 | 2.00 | 3.40 |         0 #> versicolor | Petal.Length | 4.26 | 0.47 | 3.00 | 5.10 |         0 #> versicolor |  Petal.Width | 1.33 | 0.20 | 1.00 | 1.80 |         0 #> virginica  | Sepal.Length | 6.59 | 0.64 | 4.90 | 7.90 |         0 #> virginica  |  Sepal.Width | 2.97 | 0.32 | 2.20 | 3.80 |         0 #> virginica  | Petal.Length | 5.55 | 0.55 | 4.50 | 6.90 |         0 #> virginica  |  Petal.Width | 2.03 | 0.27 | 1.40 | 2.50 |         0"},{"path":"https://easystats.github.io/report/reference/report.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Template to add report support for new objects — report.default","title":"Template to add report support for new objects — report.default","text":"Template file add report support new objects. Check-vignette Supporting New Models.","code":""},{"path":"https://easystats.github.io/report/reference/report.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template to add report support for new objects — report.default","text":"","code":"# Default S3 method report(x, ...)  # Default S3 method report_effectsize(x, ...)  # Default S3 method report_table(x, ...)  # Default S3 method report_statistics(x, ...)  # Default S3 method report_parameters(x, ...)  # Default S3 method report_intercept(x, ...)  # Default S3 method report_model(x, ...)  # Default S3 method report_random(x, ...)  # Default S3 method report_priors(x, ...)  # Default S3 method report_performance(x, ...)  # Default S3 method report_info(x, ...)  # Default S3 method report_text(x, ...)"},{"path":"https://easystats.github.io/report/reference/report.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template to add report support for new objects — report.default","text":"x Object class NEW OBJECT. ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Template to add report support for new objects — report.default","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Template to add report support for new objects — report.default","text":"","code":"library(report)  # Add a reproducible example instead of the following model <- lm(Sepal.Length ~ Petal.Length * Species, data = iris) r <- report(model) r #> We fitted a linear model (estimated using OLS) to predict Sepal.Length with #> Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species). The #> model explains a statistically significant and substantial proportion of #> variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's #> intercept, corresponding to Petal.Length = 0 and Species = setosa, is at 4.21 #> (95% CI [3.41, 5.02], t(144) = 10.34, p < .001). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta = #> 1.16, 95% CI [-0.01, 2.32]) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta = #> -0.88, 95% CI [-2.41, 0.65]) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta = #> -1.75, 95% CI [-3.32, -0.18]) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85]) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald t-distribution approximation. summary(r) #> We fitted a linear model to predict Sepal.Length with Petal.Length and Species. #> The model's explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The #> model's intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta = #> 1.16) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta = #> -0.88) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta = #> -1.75) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334, Std. beta = 0.61) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120, Std. beta = 0.97) as.data.frame(r) #> Parameter                           | Coefficient |         95% CI | t(144) #> --------------------------------------------------------------------------- #> (Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 #> Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 #> Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 #> Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 #> Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 #> Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 #>                                     |             |                |        #> AIC                                 |             |                |        #> AICc                                |             |                |        #> BIC                                 |             |                |        #> R2                                  |             |                |        #> R2 (adj.)                           |             |                |        #> Sigma                               |             |                |        #>  #> Parameter                           |      p | Std. Coef. | Std. Coef. 95% CI |    Fit #> -------------------------------------------------------------------------------------- #> (Intercept)                         | < .001 |       0.49 |    [-1.03,  2.01] |        #> Petal Length                        | 0.052  |       1.16 |    [-0.01,  2.32] |        #> Species [versicolor]                | 0.003  |      -0.88 |    [-2.41,  0.65] |        #> Species [virginica]                 | < .001 |      -1.75 |    [-3.32, -0.18] |        #> Petal Length × Species [versicolor] | 0.334  |       0.61 |    [-0.63,  1.85] |        #> Petal Length × Species [virginica]  | 0.120  |       0.97 |    [-0.26,  2.19] |        #>                                     |        |            |                   |        #> AIC                                 |        |            |                   | 106.77 #> AICc                                |        |            |                   | 107.56 #> BIC                                 |        |            |                   | 127.84 #> R2                                  |        |            |                   |   0.84 #> R2 (adj.)                           |        |            |                   |   0.83 #> Sigma                               |        |            |                   |   0.34 summary(as.data.frame(r)) #> Parameter                           | Coefficient |         95% CI | t(144) #> --------------------------------------------------------------------------- #> (Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 #> Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 #> Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 #> Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 #> Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 #> Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 #>                                     |             |                |        #> AICc                                |             |                |        #> R2                                  |             |                |        #> R2 (adj.)                           |             |                |        #> Sigma                               |             |                |        #>  #> Parameter                           |      p | Std. Coef. |    Fit #> ------------------------------------------------------------------ #> (Intercept)                         | < .001 |       0.49 |        #> Petal Length                        | 0.052  |       1.16 |        #> Species [versicolor]                | 0.003  |      -0.88 |        #> Species [virginica]                 | < .001 |      -1.75 |        #> Petal Length × Species [versicolor] | 0.334  |       0.61 |        #> Petal Length × Species [virginica]  | 0.120  |       0.97 |        #>                                     |        |            |        #> AICc                                |        |            | 107.56 #> R2                                  |        |            |   0.84 #> R2 (adj.)                           |        |            |   0.83 #> Sigma                               |        |            |   0.34"},{"path":"https://easystats.github.io/report/reference/report.estimate_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting estimate_contrasts objects — report.estimate_contrasts","title":"Reporting estimate_contrasts objects — report.estimate_contrasts","text":"Create reports estimate_contrasts objects.","code":""},{"path":"https://easystats.github.io/report/reference/report.estimate_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting estimate_contrasts objects — report.estimate_contrasts","text":"","code":"# S3 method for class 'estimate_contrasts' report(x, ...)  # S3 method for class 'estimate_contrasts' report_table(x, ...)  # S3 method for class 'estimate_contrasts' report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.estimate_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting estimate_contrasts objects — report.estimate_contrasts","text":"x Object class estimate_contrasts. ... Arguments passed methods. table Provide output  report_table() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.estimate_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting estimate_contrasts objects — report.estimate_contrasts","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.estimate_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting estimate_contrasts objects — report.estimate_contrasts","text":"","code":"library(modelbased) model <- lm(Sepal.Width ~ Species, data = iris) contr <- estimate_contrasts(model) #> We selected `contrast=c(\"Species\")`. report(contr) #> The marginal contrasts analysis suggests the following. The difference between #> versicolor and setosa is negative and statistically significant (difference = #> -0.66, 95% CI [-0.79, -0.52], t(147) = -9.69, p < .001). The difference between #> virginica and setosa is negative and statistically significant (difference = #> -0.45, 95% CI [-0.59, -0.32], t(147) = -6.68, p < .001). The difference between #> virginica and versicolor is positive and statistically significant (difference #> = 0.20, 95% CI [ 0.07, 0.34], t(147) = 3.00, p = 0.003)"},{"path":"https://easystats.github.io/report/reference/report.htest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting htest objects (Correlation, t-test...) — report.htest","title":"Reporting htest objects (Correlation, t-test...) — report.htest","text":"Create reports htest objects (t.test(), cor.test(), etc.).","code":""},{"path":"https://easystats.github.io/report/reference/report.htest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting htest objects (Correlation, t-test...) — report.htest","text":"","code":"# S3 method for class 'htest' report(x, ...)  # S3 method for class 'htest' report_effectsize(x, table = NULL, ...)  # S3 method for class 'htest' report_table(x, ...)  # S3 method for class 'htest' report_statistics(x, table = NULL, ...)  # S3 method for class 'htest' report_parameters(x, table = NULL, ...)  # S3 method for class 'htest' report_model(x, table = NULL, ...)  # S3 method for class 'htest' report_info(x, effectsize = NULL, ...)  # S3 method for class 'htest' report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.htest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting htest objects (Correlation, t-test...) — report.htest","text":"x Object class htest. ... Arguments passed methods. table Provide output report_table() avoid re-computation. effectsize Provide output report_effectsize() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.htest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting htest objects (Correlation, t-test...) — report.htest","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.htest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting htest objects (Correlation, t-test...) — report.htest","text":"","code":"# t-tests report(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Welch Two Sample t-test testing the difference between iris$Sepal.Width and #> iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect #> is negative, statistically significant, and large (difference = -2.79, 95% CI #> [-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66, #> -3.76]) report(t.test(iris$Sepal.Width, iris$Sepal.Length, var.equal = TRUE)) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Two Sample t-test testing the difference between iris$Sepal.Width and #> iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect #> is negative, statistically significant, and large (difference = -2.79, 95% CI #> [-2.94, -2.64], t(298) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.61, #> -3.80]) report(t.test(mtcars$mpg ~ mtcars$vs)) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$vs #> (mean in group 0 = 16.62, mean in group 1 = 24.56) suggests that the effect is #> negative, statistically significant, and large (difference = -7.94, 95% CI #> [-11.46, -4.42], t(22.72) = -4.67, p < .001; Cohen's d = -1.70, 95% CI [-2.55, #> -0.82]) report(t.test(mtcars$mpg, mtcars$vs, paired = TRUE), verbose = FALSE) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Paired t-test testing the difference between mtcars$mpg and mtcars$vs (mean #> difference = 19.65) suggests that the effect is positive, statistically #> significant, and large (difference = 19.65, 95% CI [17.60, 21.71], t(31) = #> 19.49, p < .001; Cohen's d = 3.45, 95% CI [2.52, 4.36]) report(t.test(iris$Sepal.Width, mu = 1)) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The One Sample t-test testing the difference between iris$Sepal.Width (mean = #> 3.06) and mu = 1 suggests that the effect is positive, statistically #> significant, and large (difference = 2.06, 95% CI [2.99, 3.13], t(149) = 57.81, #> p < .001; Cohen's d = 4.72, 95% CI [4.15, 5.27])  # Correlations report(cor.test(iris$Sepal.Width, iris$Sepal.Length)) #> Effect sizes were labelled following Funder's (2019) recommendations. #>  #> The Pearson's product-moment correlation between iris$Sepal.Width and #> iris$Sepal.Length is negative, statistically not significant, and small (r = #> -0.12, 95% CI [-0.27, 0.04], t(148) = -1.44, p = 0.152)"},{"path":"https://easystats.github.io/report/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic reporting of R objects — report","title":"Automatic reporting of R objects — report","text":"Create reports different objects. See documentation object's class:","code":""},{"path":"https://easystats.github.io/report/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic reporting of R objects — report","text":"","code":"report(x, ...)"},{"path":"https://easystats.github.io/report/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic reporting of R objects — report","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic reporting of R objects — report","text":"list-object class report, contains list-objects short long description model summary, well short long table parameters fit indices.","code":""},{"path":"https://easystats.github.io/report/reference/report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic reporting of R objects — report","text":"System packages (sessionInfo) Dataframes vectors Correlations t-tests (htest) ANOVAs (aov, anova, aovlist, ...) Regression models (glm, lm, ...) Mixed models (glmer, lmer, glmmTMB, ...) Bayesian models (stanreg, brms...) Bayes factors (bayestestR) Structural Equation Models (SEM) (lavaan) Model comparison (performance()) time, object created report() function can transformed, instance summarized (using summary()), converted table (using .data.frame()).","code":""},{"path":"https://easystats.github.io/report/reference/report.html","id":"organization","dir":"Reference","previous_headings":"","what":"Organization","title":"Automatic reporting of R objects — report","text":"report_table report_text two distal representations report, two provided report(). However, intermediate steps accessible (depending object) via specific functions (e.g., report_parameters).","code":""},{"path":"https://easystats.github.io/report/reference/report.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Automatic reporting of R objects — report","text":"report() function generates report-object contain different representations (e.g., text, tables, plots). different representations can accessed via several functions, : .report_text(r): Detailed text. .report_text(r, summary=TRUE): Minimal text giving minimal information. .report_table(r): Comprehensive table including available indices. .report_table(r, summary=TRUE): Minimal table. Note report objects, representations might identical.","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic reporting of R objects — report","text":"","code":"library(report)  model <- t.test(mtcars$mpg ~ mtcars$am) r <- report(model)  # Text r #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$am #> (mean in group 0 = 17.15, mean in group 1 = 24.39) suggests that the effect is #> negative, statistically significant, and large (difference = -7.24, 95% CI #> [-11.28, -3.21], t(18.33) = -3.77, p = 0.001; Cohen's d = -1.41, 95% CI [-2.26, #> -0.53]) summary(r) #> The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$am #> (mean in group 0 = 17.15, mean in group 1 = 24.39) suggests that the effect is #> negative, statistically significant, and large (difference = -7.24, 95% CI #> [-11.28, -3.21], t(18.33) = -3.77, p = 0.001, Cohen's d = -1.41)  # Tables as.data.frame(r) #> Welch Two Sample t-test #>  #> Parameter  |     Group | Mean_Group1 | Mean_Group2 | Difference #> --------------------------------------------------------------- #> mtcars$mpg | mtcars$am |       17.15 |       24.39 |      -7.24 #>  #> Parameter  |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI #> ---------------------------------------------------------------------------- #> mtcars$mpg | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53] #>  #> Alternative hypothesis: two.sided summary(as.data.frame(r)) #> Difference |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI #> ---------------------------------------------------------------------------- #> -7.24      | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53] #>  #> Alternative hypothesis: two.sided"},{"path":"https://easystats.github.io/report/reference/report.lavaan.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports of Structural Equation Models (SEM) — report.lavaan","title":"Reports of Structural Equation Models (SEM) — report.lavaan","text":"Create report lavaan objects.","code":""},{"path":"https://easystats.github.io/report/reference/report.lavaan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports of Structural Equation Models (SEM) — report.lavaan","text":"","code":"# S3 method for class 'lavaan' report(x, ...)  # S3 method for class 'lavaan' report_performance(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.lavaan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports of Structural Equation Models (SEM) — report.lavaan","text":"x Object class lavaan. ... Arguments passed methods. table Provide output report_table() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.lavaan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports of Structural Equation Models (SEM) — report.lavaan","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.lavaan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports of Structural Equation Models (SEM) — report.lavaan","text":"","code":"# \\donttest{ # Structural Equation Models (SEM) library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. structure <- \"ind60 =~ x1 + x2 + x3               dem60 =~ y1 + y2 + y3               dem60 ~ ind60\" model <- lavaan::sem(structure, data = PoliticalDemocracy) r <- report(model) #> Support for lavaan not fully implemented yet :( r #> NULL summary(r) #> Length  Class   Mode  #>      0   NULL   NULL  as.data.frame(r) #> data frame with 0 columns and 0 rows summary(as.data.frame(r)) #> < table of extent 0 x 0 >  # Specific reports suppressWarnings(report_table(model)) #> Parameter     | Coefficient |       95% CI |     z |      p |  Component |     Fit #> ---------------------------------------------------------------------------------- #> ind60 =~ x1   |        1.00 | [1.00, 1.00] |       | < .001 |    Loading |         #> ind60 =~ x2   |        2.18 | [1.91, 2.45] | 15.59 | < .001 |    Loading |         #> ind60 =~ x3   |        1.82 | [1.52, 2.12] | 11.96 | < .001 |    Loading |         #> dem60 =~ y1   |        1.00 | [1.00, 1.00] |       | < .001 |    Loading |         #> dem60 =~ y2   |        1.04 | [0.66, 1.43] |  5.33 | < .001 |    Loading |         #> dem60 =~ y3   |        0.98 | [0.65, 1.30] |  5.89 | < .001 |    Loading |         #> dem60 ~ ind60 |        1.37 | [0.53, 2.21] |  3.20 | 0.001  | Regression |         #>               |             |              |       |        |            |         #> Chi2          |             |              |       |        |            |    7.98 #> Chi2_df       |             |              |       |        |            |    8.00 #> p_Chi2        |             |              |       |        |            |    0.44 #> p_Baseline    |             |              |       |        |            |    0.00 #> GFI           |             |              |       |        |            |    0.97 #> AGFI          |             |              |       |        |            |    0.91 #> NFI           |             |              |       |        |            |    0.97 #> NNFI          |             |              |       |        |            |    1.00 #> CFI           |             |              |       |        |            |    1.00 #> RMSEA         |             |              |       |        |            |    0.00 #> RMSEA_CI_low  |             |              |       |        |            |    0.00 #> RMSEA_CI_high |             |              |       |        |            |    0.14 #> p_RMSEA       |             |              |       |        |            |    0.57 #> RMR           |             |              |       |        |            |    0.10 #> SRMR          |             |              |       |        |            |    0.03 #> RFI           |             |              |       |        |            |    0.95 #> PNFI          |             |              |       |        |            |    0.52 #> IFI           |             |              |       |        |            |    1.00 #> RNI           |             |              |       |        |            |    1.00 #> Loglikelihood |             |              |       |        |            | -778.27 #> AIC           |             |              |       |        |            | 1582.54 #> BIC           |             |              |       |        |            | 1612.67 #> BIC (adj.)    |             |              |       |        |            | 1571.69 suppressWarnings(report_performance(model)) #> The model is not significantly different from a baseline model (Chi2(8) = 7.98, #> p = 0.435). The GFI (.97 > .95) suggest a satisfactory fit., The model is not #> significantly different from a baseline model (Chi2(8) = 7.98, p = 0.435). The #> AGFI (.91 > .90) suggest a satisfactory fit., The model is not significantly #> different from a baseline model (Chi2(8) = 7.98, p = 0.435). The NFI (.97 > #> .90) suggest a satisfactory fit., The model is not significantly different from #> a baseline model (Chi2(8) = 7.98, p = 0.435). The NNFI (.00 > .90) suggest a #> satisfactory fit., The model is not significantly different from a baseline #> model (Chi2(8) = 7.98, p = 0.435). The CFI (.00 > .90) suggest a satisfactory #> fit., The model is not significantly different from a baseline model (Chi2(8) = #> 7.98, p = 0.435). The RMSEA (.00 < .05) suggest a satisfactory fit., The model #> is not significantly different from a baseline model (Chi2(8) = 7.98, p = #> 0.435). The SRMR (.03 < .08) suggest a satisfactory fit., The model is not #> significantly different from a baseline model (Chi2(8) = 7.98, p = 0.435). The #> RFI (.95 > .90) suggest a satisfactory fit., The model is not significantly #> different from a baseline model (Chi2(8) = 7.98, p = 0.435). The PNFI (.52 > #> .50) suggest a satisfactory fit. and The model is not significantly different #> from a baseline model (Chi2(8) = 7.98, p = 0.435). The IFI (.00 > .90) suggest #> a satisfactory fit. # }"},{"path":"https://easystats.github.io/report/reference/report.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting (General) Linear Models — report.lm","title":"Reporting (General) Linear Models — report.lm","text":"Create reports (general) linear models.","code":""},{"path":"https://easystats.github.io/report/reference/report.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting (General) Linear Models — report.lm","text":"","code":"# S3 method for class 'lm' report(x, include_effectsize = TRUE, effectsize_method = \"refit\", ...)  # S3 method for class 'lm' report_effectsize(x, effectsize_method = \"refit\", ...)  # S3 method for class 'lm' report_table(x, include_effectsize = TRUE, ...)  # S3 method for class 'lm' report_statistics(   x,   table = NULL,   include_effectsize = TRUE,   include_diagnostic = TRUE,   ... )  # S3 method for class 'lm' report_parameters(   x,   table = NULL,   include_effectsize = TRUE,   include_intercept = TRUE,   ... )  # S3 method for class 'lm' report_intercept(x, table = NULL, ...)  # S3 method for class 'lm' report_model(x, table = NULL, ...)  # S3 method for class 'lm' report_performance(x, table = NULL, ...)  # S3 method for class 'lm' report_info(   x,   effectsize = NULL,   include_effectsize = FALSE,   parameters = NULL,   ... )  # S3 method for class 'lm' report_text(x, table = NULL, ...)  # S3 method for class 'merMod' report_random(x, ...)"},{"path":"https://easystats.github.io/report/reference/report.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting (General) Linear Models — report.lm","text":"x Object class lm glm. include_effectsize FALSE, include effect-size related indices (standardized coefficients, etc.). effectsize_method See documentation effectsize::effectsize(). ... Arguments passed methods. table Provide output report_table() avoid re-computation. include_diagnostic FALSE, include diagnostic related indices Bayesian models (ESS, Rhat). include_intercept FALSE, include intercept. effectsize Provide output report_effectsize() avoid re-computation. parameters Provide output report_parameters() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting (General) Linear Models — report.lm","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting (General) Linear Models — report.lm","text":"","code":"# \\donttest{ library(report)  # Linear models model <- lm(Sepal.Length ~ Petal.Length * Species, data = iris) r <- report(model) r #> We fitted a linear model (estimated using OLS) to predict Sepal.Length with #> Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species). The #> model explains a statistically significant and substantial proportion of #> variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's #> intercept, corresponding to Petal.Length = 0 and Species = setosa, is at 4.21 #> (95% CI [3.41, 5.02], t(144) = 10.34, p < .001). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta = #> 1.16, 95% CI [-0.01, 2.32]) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta = #> -0.88, 95% CI [-2.41, 0.65]) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta = #> -1.75, 95% CI [-3.32, -0.18]) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85]) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald t-distribution approximation. summary(r) #> We fitted a linear model to predict Sepal.Length with Petal.Length and Species. #> The model's explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The #> model's intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta = #> 1.16) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta = #> -0.88) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta = #> -1.75) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334, Std. beta = 0.61) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120, Std. beta = 0.97) as.data.frame(r) #> Parameter                           | Coefficient |         95% CI | t(144) #> --------------------------------------------------------------------------- #> (Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 #> Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 #> Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 #> Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 #> Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 #> Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 #>                                     |             |                |        #> AIC                                 |             |                |        #> AICc                                |             |                |        #> BIC                                 |             |                |        #> R2                                  |             |                |        #> R2 (adj.)                           |             |                |        #> Sigma                               |             |                |        #>  #> Parameter                           |      p | Std. Coef. | Std. Coef. 95% CI |    Fit #> -------------------------------------------------------------------------------------- #> (Intercept)                         | < .001 |       0.49 |    [-1.03,  2.01] |        #> Petal Length                        | 0.052  |       1.16 |    [-0.01,  2.32] |        #> Species [versicolor]                | 0.003  |      -0.88 |    [-2.41,  0.65] |        #> Species [virginica]                 | < .001 |      -1.75 |    [-3.32, -0.18] |        #> Petal Length × Species [versicolor] | 0.334  |       0.61 |    [-0.63,  1.85] |        #> Petal Length × Species [virginica]  | 0.120  |       0.97 |    [-0.26,  2.19] |        #>                                     |        |            |                   |        #> AIC                                 |        |            |                   | 106.77 #> AICc                                |        |            |                   | 107.56 #> BIC                                 |        |            |                   | 127.84 #> R2                                  |        |            |                   |   0.84 #> R2 (adj.)                           |        |            |                   |   0.83 #> Sigma                               |        |            |                   |   0.34 summary(as.data.frame(r)) #> Parameter                           | Coefficient |         95% CI | t(144) #> --------------------------------------------------------------------------- #> (Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 #> Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 #> Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 #> Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 #> Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 #> Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 #>                                     |             |                |        #> AICc                                |             |                |        #> R2                                  |             |                |        #> R2 (adj.)                           |             |                |        #> Sigma                               |             |                |        #>  #> Parameter                           |      p | Std. Coef. |    Fit #> ------------------------------------------------------------------ #> (Intercept)                         | < .001 |       0.49 |        #> Petal Length                        | 0.052  |       1.16 |        #> Species [versicolor]                | 0.003  |      -0.88 |        #> Species [virginica]                 | < .001 |      -1.75 |        #> Petal Length × Species [versicolor] | 0.334  |       0.61 |        #> Petal Length × Species [virginica]  | 0.120  |       0.97 |        #>                                     |        |            |        #> AICc                                |        |            | 107.56 #> R2                                  |        |            |   0.84 #> R2 (adj.)                           |        |            |   0.83 #> Sigma                               |        |            |   0.34  # Logistic models model <- glm(vs ~ disp, data = mtcars, family = \"binomial\") r <- report(model) r #> We fitted a logistic model (estimated using ML) to predict vs with disp #> (formula: vs ~ disp). The model's explanatory power is substantial (Tjur's R2 = #> 0.53). The model's intercept, corresponding to disp = 0, is at 4.14 (95% CI #> [1.81, 7.44], p = 0.003). Within this model: #>  #>   - The effect of disp is statistically significant and negative (beta = -0.02, #> 95% CI [-0.04, -0.01], p = 0.002; Std. beta = -2.68, 95% CI [-4.90, -1.27]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald z-distribution approximation. summary(r) #> We fitted a logistic model to predict vs with disp. The model's explanatory #> power is substantial (Tjur's R2 = 0.53). The model's intercept is at 4.14 (95% #> CI [1.81, 7.44]). Within this model: #>  #>   - The effect of disp is statistically significant and negative (beta = -0.02, #> 95% CI [-0.04, -0.01], p = 0.002, Std. beta = -2.68) as.data.frame(r) #> Parameter   | Coefficient |         95% CI |     z |     p | Std. Coef. #> ----------------------------------------------------------------------- #> (Intercept) |        4.14 | [ 1.81,  7.44] |  2.98 | 0.003 |      -0.85 #> disp        |       -0.02 | [-0.04, -0.01] | -3.03 | 0.002 |      -2.68 #>             |             |                |       |       |            #> AIC         |             |                |       |       |            #> AICc        |             |                |       |       |            #> BIC         |             |                |       |       |            #> Tjur's R2   |             |                |       |       |            #> Sigma       |             |                |       |       |            #> Log_loss    |             |                |       |       |            #>  #> Parameter   | Std. Coef. 95% CI |   Fit #> --------------------------------------- #> (Intercept) |    [-2.42,  0.27] |       #> disp        |    [-4.90, -1.27] |       #>             |                   |       #> AIC         |                   | 26.70 #> AICc        |                   | 27.11 #> BIC         |                   | 29.63 #> Tjur's R2   |                   |  0.53 #> Sigma       |                   |  1.00 #> Log_loss    |                   |  0.35 summary(as.data.frame(r)) #> Parameter   | Coefficient |         95% CI |     z |     p | Std. Coef. |   Fit #> ------------------------------------------------------------------------------- #> (Intercept) |        4.14 | [ 1.81,  7.44] |  2.98 | 0.003 |      -0.85 |       #> disp        |       -0.02 | [-0.04, -0.01] | -3.03 | 0.002 |      -2.68 |       #>             |             |                |       |       |            |       #> AICc        |             |                |       |       |            | 27.11 #> Tjur's R2   |             |                |       |       |            |  0.53 #> Sigma       |             |                |       |       |            |  1.00 #> Log_loss    |             |                |       |       |            |  0.35 # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) r <- report(model) r #> We fitted a linear mixed model (estimated using REML and nloptwrap optimizer) #> to predict Sepal.Length with Petal.Length (formula: Sepal.Length ~ #> Petal.Length). The model included Species as random effect (formula: ~1 | #> Species). The model's total explanatory power is substantial (conditional R2 = #> 0.97) and the part related to the fixed effects alone (marginal R2) is of 0.66. #> The model's intercept, corresponding to Petal.Length = 0, is at 2.50 (95% CI #> [1.19, 3.82], t(146) = 3.75, p < .001). Within this model: #>  #>   - The effect of Petal Length is statistically significant and positive (beta = #> 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001; Std. beta = 1.89, 95% CI #> [1.63, 2.16]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald t-distribution approximation. summary(r) #> We fitted a linear mixed model to predict Sepal.Length with Petal.Length. The #> model included Species as random effect. The model's total explanatory power is #> substantial (conditional R2 = 0.97) and the part related to the fixed effects #> alone (marginal R2) is of 0.66. The model's intercept is at 2.50 (95% CI [1.19, #> 3.82]). Within this model: #>  #>   - The effect of Petal Length is statistically significant and positive (beta = #> 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001, Std. beta = 1.89) as.data.frame(r) #> Parameter        | Coefficient |       95% CI | t(146) |      p | Effects #> ------------------------------------------------------------------------- #> (Intercept)      |        2.50 | [1.19, 3.82] |   3.75 | < .001 |   fixed #> Petal Length     |        0.89 | [0.76, 1.01] |  13.93 | < .001 |   fixed #>                  |        1.08 |              |        |        |  random #>                  |        0.34 |              |        |        |  random #>                  |             |              |        |        |         #> AIC              |             |              |        |        |         #> AICc             |             |              |        |        |         #> BIC              |             |              |        |        |         #> R2 (conditional) |             |              |        |        |         #> R2 (marginal)    |             |              |        |        |         #> Sigma            |             |              |        |        |         #>  #> Parameter        |    Group | Std. Coef. | Std. Coef. 95% CI |    Fit #> --------------------------------------------------------------------- #> (Intercept)      |          |  -1.46e-13 |     [-1.49, 1.49] |        #> Petal Length     |          |       1.89 |     [ 1.63, 2.16] |        #>                  |  Species |            |                   |        #>                  | Residual |            |                   |        #>                  |          |            |                   |        #> AIC              |          |            |                   | 127.79 #> AICc             |          |            |                   | 128.07 #> BIC              |          |            |                   | 139.84 #> R2 (conditional) |          |            |                   |   0.97 #> R2 (marginal)    |          |            |                   |   0.66 #> Sigma            |          |            |                   |   0.34 summary(as.data.frame(r)) #> Parameter        | Coefficient |       95% CI | t(146) |      p | Effects #> ------------------------------------------------------------------------- #> (Intercept)      |        2.50 | [1.19, 3.82] |   3.75 | < .001 |   fixed #> Petal Length     |        0.89 | [0.76, 1.01] |  13.93 | < .001 |   fixed #>                  |        1.08 |              |        |        |  random #>                  |        0.34 |              |        |        |  random #>                  |             |              |        |        |         #> AICc             |             |              |        |        |         #> R2 (conditional) |             |              |        |        |         #> R2 (marginal)    |             |              |        |        |         #> Sigma            |             |              |        |        |         #>  #> Parameter        |    Group | Std. Coef. |    Fit #> ------------------------------------------------- #> (Intercept)      |          |  -1.46e-13 |        #> Petal Length     |          |       1.89 |        #>                  |  Species |            |        #>                  | Residual |            |        #>                  |          |            |        #> AICc             |          |            | 128.07 #> R2 (conditional) |          |            |   0.97 #> R2 (marginal)    |          |            |   0.66 #> Sigma            |          |            |   0.34 # }"},{"path":"https://easystats.github.io/report/reference/report.sessionInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Report R environment (packages, system, etc.) — report.sessionInfo","title":"Report R environment (packages, system, etc.) — report.sessionInfo","text":"Report R environment (packages, system, etc.)","code":""},{"path":"https://easystats.github.io/report/reference/report.sessionInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report R environment (packages, system, etc.) — report.sessionInfo","text":"","code":"# S3 method for class 'sessionInfo' report(x, ...)  report_packages(session = NULL, include_R = TRUE, ...)  cite_packages(session = NULL, include_R = TRUE, ...)  report_system(session = NULL)"},{"path":"https://easystats.github.io/report/reference/report.sessionInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report R environment (packages, system, etc.) — report.sessionInfo","text":"x R object want report (see list supported objects ). ... Arguments passed methods. session sessionInfo object. include_R Include R citations.","code":""},{"path":"https://easystats.github.io/report/reference/report.sessionInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report R environment (packages, system, etc.) — report.sessionInfo","text":"report_packages, data frame class information package name, version citation. object class report().","code":""},{"path":"https://easystats.github.io/report/reference/report.sessionInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report R environment (packages, system, etc.) — report.sessionInfo","text":"","code":"library(report)  session <- sessionInfo()  r <- report(session) r #> Analyses were conducted using the R Statistical language (version 4.5.1; R Core #> Team, 2025) on Ubuntu 24.04.3 LTS, using the packages Matrix (version 1.7.4; #> Bates D et al., 2025), lme4 (version 1.1.37; Bates D et al., 2015), brms #> (version 2.23.0; Bürkner P, 2017), Rcpp (version 1.1.0; Eddelbuettel D et al., #> 2025), performance (version 0.15.1; Lüdecke D et al., 2021), bayestestR #> (version 0.17.0.1; Makowski D et al., 2019), modelbased (version 0.13.0; #> Makowski D et al., 2025), report (version 0.6.1.5; Makowski D et al., 2023), #> BayesFactor (version 0.9.12.4.7; Morey R, Rouder J, 2024), coda (version #> 0.19.4.1; Plummer M et al., 2006), lavaan (version 0.6.19; Rosseel Y, 2012) and #> dplyr (version 1.1.4; Wickham H et al., 2023). #>  #> References #> ---------- #>   - Bates D, Maechler M, Jagan M (2025). _Matrix: Sparse and Dense Matrix Classes #> and Methods_. R package version 1.7-4, <https://Matrix.R-forge.R-project.org>. #>   - Bates D, Mächler M, Bolker B, Walker S (2015). “Fitting Linear Mixed-Effects #> Models Using lme4.” _Journal of Statistical Software_, *67*(1), 1-48. #> doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #>   - Bürkner P (2017). “brms: An R Package for Bayesian Multilevel Models Using #> Stan.” _Journal of Statistical Software_, *80*(1), 1-28. #> doi:10.18637/jss.v080.i01 <https://doi.org/10.18637/jss.v080.i01>. Bürkner P #> (2018). “Advanced Bayesian Multilevel Modeling with the R Package brms.” _The R #> Journal_, *10*(1), 395-411. doi:10.32614/RJ-2018-017 #> <https://doi.org/10.32614/RJ-2018-017>. Bürkner P (2021). “Bayesian Item #> Response Modeling in R with brms and Stan.” _Journal of Statistical Software_, #> *100*(5), 1-54. doi:10.18637/jss.v100.i05 #> <https://doi.org/10.18637/jss.v100.i05>. #>   - Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, #> Bates D, Chambers J (2025). _Rcpp: Seamless R and C++ Integration_. R package #> version 1.1.0, <https://www.rcpp.org>. Eddelbuettel D, François R (2011). #> “Rcpp: Seamless R and C++ Integration.” _Journal of Statistical Software_, #> *40*(8), 1-18. doi:10.18637/jss.v040.i08 #> <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and #> C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 #> <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. #> Eddelbuettel D, Balamuta J (2018). “Extending R with C++: A Brief Introduction #> to Rcpp.” _The American Statistician_, *72*(1), 28-36. #> doi:10.1080/00031305.2017.1375990 #> <https://doi.org/10.1080/00031305.2017.1375990>. #>   - Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). #> “performance: An R Package for Assessment, Comparison and Testing of #> Statistical Models.” _Journal of Open Source Software_, *6*(60), 3139. #> doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>. #>   - Makowski D, Ben-Shachar M, Lüdecke D (2019). “bayestestR: Describing Effects #> and their Uncertainty, Existence and Significance within the Bayesian #> Framework.” _Journal of Open Source Software_, *4*(40), 1541. #> doi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>, #> <https://joss.theoj.org/papers/10.21105/joss.01541>. #>   - Makowski D, Ben-Shachar M, Wiernik B, Patil I, Thériault R, Lüdecke D (2025). #> “modelbased: An R package to make the most out of your statistical models #> through marginal means, marginal effects, and model predictions.” _Journal of #> Open Source Software_, *10*(109), 7969. doi:10.21105/joss.07969 #> <https://doi.org/10.21105/joss.07969>, #> <https://joss.theoj.org/papers/10.21105/joss.07969>. #>   - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). #> “Automated Results Reporting as a Practical Tool to Improve Reproducibility and #> Methodological Best Practices Adoption.” _CRAN_. #> doi:10.32614/CRAN.package.report #> <https://doi.org/10.32614/CRAN.package.report>, #> <https://easystats.github.io/report/>. #>   - Morey R, Rouder J (2024). _BayesFactor: Computation of Bayes Factors for #> Common Designs_. R package version 0.9.12-4.7, #> <https://richarddmorey.github.io/BayesFactor/>. #>   - Plummer M, Best N, Cowles K, Vines K (2006). “CODA: Convergence Diagnosis and #> Output Analysis for MCMC.” _R News_, *6*(1), 7-11. #> <https://journal.r-project.org/archive/>. #>   - R Core Team (2025). _R: A Language and Environment for Statistical #> Computing_. R Foundation for Statistical Computing, Vienna, Austria. #> <https://www.R-project.org/>. #>   - Rosseel Y (2012). “lavaan: An R Package for Structural Equation Modeling.” #> _Journal of Statistical Software_, *48*(2), 1-36. doi:10.18637/jss.v048.i02 #> <https://doi.org/10.18637/jss.v048.i02>. #>   - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar #> of Data Manipulation_. R package version 1.1.4, <https://dplyr.tidyverse.org>. summary(r) #> The analysis was done using the R Statistical language (v4.5.1; R Core Team, #> 2025) on Ubuntu 24.04.3 LTS, using the packages Matrix (v1.7.4), lme4 #> (v1.1.37), brms (v2.23.0), Rcpp (v1.1.0), performance (v0.15.1), bayestestR #> (v0.17.0.1), modelbased (v0.13.0), report (v0.6.1.5), BayesFactor #> (v0.9.12.4.7), coda (v0.19.4.1), lavaan (v0.6.19) and dplyr (v1.1.4). as.data.frame(r) #> Package     |    Version |eferenceayesFactor | 0.9.12.4.7 |orey R, Rouder J (2024). _BayesFactor: Computation of Bayes Factors for Common Designs_. R package version 0.9.12-4.7, <https://richarddmorey.github.io/BayesFactor/>. #> Matrix      |      1.7.4 |ates D, Maechler M, Jagan M (2025). _Matrix: Sparse and Dense Matrix Classes and Methods_. R package version 1.7-4, <https://Matrix.R-forge.R-project.org>. #> R           |      4.5.1 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             R Core Team (2025). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>. #> Rcpp        |      1.1.0 | Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, Bates D, Chambers J (2025). _Rcpp: Seamless R and C++ Integration_. R package version 1.1.0, <https://www.rcpp.org>. Eddelbuettel D, François R (2011). “Rcpp: Seamless R and C++ Integration.” _Journal of Statistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08 <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. Eddelbuettel D, Balamuta J (2018). “Extending R with C++: A Brief Introduction to Rcpp.” _The American Statistician_, *72*(1), 28-36. doi:10.1080/00031305.2017.1375990 <https://doi.org/10.1080/00031305.2017.1375990>. #> bayestestR  |   0.17.0.1 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Makowski D, Ben-Shachar M, Lüdecke D (2019). “bayestestR: Describing Effects and their Uncertainty, Existence and Significance within the Bayesian Framework.” _Journal of Open Source Software_, *4*(40), 1541. doi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>, <https://joss.theoj.org/papers/10.21105/joss.01541>. #> brms        |     2.23.0 |                                                                                                                                                                                                                  Bürkner P (2017). “brms: An R Package for Bayesian Multilevel Models Using Stan.” _Journal of Statistical Software_, *80*(1), 1-28. doi:10.18637/jss.v080.i01 <https://doi.org/10.18637/jss.v080.i01>. Bürkner P (2018). “Advanced Bayesian Multilevel Modeling with the R Package brms.” _The R Journal_, *10*(1), 395-411. doi:10.32614/RJ-2018-017 <https://doi.org/10.32614/RJ-2018-017>. Bürkner P (2021). “Bayesian Item Response Modeling in R with brms and Stan.” _Journal of Statistical Software_, *100*(5), 1-54. doi:10.18637/jss.v100.i05 <https://doi.org/10.18637/jss.v100.i05>. #> coda        |   0.19.4.1 |lummer M, Best N, Cowles K, Vines K (2006). “CODA: Convergence Diagnosis and Output Analysis for MCMC.” _R News_, *6*(1), 7-11. <https://journal.r-project.org/archive/>. #> dplyr       |      1.1.4 |ickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://dplyr.tidyverse.org>. #> lavaan      |     0.6.19 |osseel Y (2012). “lavaan: An R Package for Structural Equation Modeling.” _Journal of Statistical Software_, *48*(2), 1-36. doi:10.18637/jss.v048.i02 <https://doi.org/10.18637/jss.v048.i02>. #> lme4        |     1.1.37 |ates D, Mächler M, Bolker B, Walker S (2015). “Fitting Linear Mixed-Effects Models Using lme4.” _Journal of Statistical Software_, *67*(1), 1-48. doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #> modelbased  |     0.13.0 |                                                                                                                                                                                                                                                                                                                                                                                                                 Makowski D, Ben-Shachar M, Wiernik B, Patil I, Thériault R, Lüdecke D (2025). “modelbased: An R package to make the most out of your statistical models through marginal means, marginal effects, and model predictions.” _Journal of Open Source Software_, *10*(109), 7969. doi:10.21105/joss.07969 <https://doi.org/10.21105/joss.07969>, <https://joss.theoj.org/papers/10.21105/joss.07969>. #> performance |     0.15.1 |üdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). “performance: An R Package for Assessment, Comparison and Testing of Statistical Models.” _Journal of Open Source Software_, *6*(60), 3139. doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>. #> report      |    0.6.1.5 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption.” _CRAN_. doi:10.32614/CRAN.package.report <https://doi.org/10.32614/CRAN.package.report>, <https://easystats.github.io/report/>. summary(as.data.frame(r)) #> Package     |    Version #> ------------------------ #> BayesFactor | 0.9.12.4.7 #> Matrix      |      1.7.4 #> R           |      4.5.1 #> Rcpp        |      1.1.0 #> bayestestR  |   0.17.0.1 #> brms        |     2.23.0 #> coda        |   0.19.4.1 #> dplyr       |      1.1.4 #> lavaan      |     0.6.19 #> lme4        |     1.1.37 #> modelbased  |     0.13.0 #> performance |     0.15.1 #> report      |    0.6.1.5  # Convenience functions report_packages(include_R = FALSE) #>   - Matrix (version 1.7.4; Bates D et al., 2025) #>   - lme4 (version 1.1.37; Bates D et al., 2015) #>   - brms (version 2.23.0; Bürkner P, 2017) #>   - Rcpp (version 1.1.0; Eddelbuettel D et al., 2025) #>   - performance (version 0.15.1; Lüdecke D et al., 2021) #>   - bayestestR (version 0.17.0.1; Makowski D et al., 2019) #>   - modelbased (version 0.13.0; Makowski D et al., 2025) #>   - report (version 0.6.1.5; Makowski D et al., 2023) #>   - BayesFactor (version 0.9.12.4.7; Morey R, Rouder J, 2024) #>   - coda (version 0.19.4.1; Plummer M et al., 2006) #>   - lavaan (version 0.6.19; Rosseel Y, 2012) #>   - dplyr (version 1.1.4; Wickham H et al., 2023) cite_packages(prefix = \"> \") #> > Bates D, Maechler M, Jagan M (2025). _Matrix: Sparse and Dense Matrix Classes and Methods_. R package version 1.7-4, <https://Matrix.R-forge.R-project.org>. #> > Bates D, Mächler M, Bolker B, Walker S (2015). “Fitting Linear Mixed-Effects Models Using lme4.” _Journal of Statistical Software_, *67*(1), 1-48. doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #> > Bürkner P (2017). “brms: An R Package for Bayesian Multilevel Models Using Stan.” _Journal of Statistical Software_, *80*(1), 1-28. doi:10.18637/jss.v080.i01 <https://doi.org/10.18637/jss.v080.i01>. Bürkner P (2018). “Advanced Bayesian Multilevel Modeling with the R Package brms.” _The R Journal_, *10*(1), 395-411. doi:10.32614/RJ-2018-017 <https://doi.org/10.32614/RJ-2018-017>. Bürkner P (2021). “Bayesian Item Response Modeling in R with brms and Stan.” _Journal of Statistical Software_, *100*(5), 1-54. doi:10.18637/jss.v100.i05 <https://doi.org/10.18637/jss.v100.i05>. #> > Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, Bates D, Chambers J (2025). _Rcpp: Seamless R and C++ Integration_. R package version 1.1.0, <https://www.rcpp.org>. Eddelbuettel D, François R (2011). “Rcpp: Seamless R and C++ Integration.” _Journal of Statistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08 <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. Eddelbuettel D, Balamuta J (2018). “Extending R with C++: A Brief Introduction to Rcpp.” _The American Statistician_, *72*(1), 28-36. doi:10.1080/00031305.2017.1375990 <https://doi.org/10.1080/00031305.2017.1375990>. #> > Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). “performance: An R Package for Assessment, Comparison and Testing of Statistical Models.” _Journal of Open Source Software_, *6*(60), 3139. doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>. #> > Makowski D, Ben-Shachar M, Lüdecke D (2019). “bayestestR: Describing Effects and their Uncertainty, Existence and Significance within the Bayesian Framework.” _Journal of Open Source Software_, *4*(40), 1541. doi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>, <https://joss.theoj.org/papers/10.21105/joss.01541>. #> > Makowski D, Ben-Shachar M, Wiernik B, Patil I, Thériault R, Lüdecke D (2025). “modelbased: An R package to make the most out of your statistical models through marginal means, marginal effects, and model predictions.” _Journal of Open Source Software_, *10*(109), 7969. doi:10.21105/joss.07969 <https://doi.org/10.21105/joss.07969>, <https://joss.theoj.org/papers/10.21105/joss.07969>. #> > Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption.” _CRAN_. doi:10.32614/CRAN.package.report <https://doi.org/10.32614/CRAN.package.report>, <https://easystats.github.io/report/>. #> > Morey R, Rouder J (2024). _BayesFactor: Computation of Bayes Factors for Common Designs_. R package version 0.9.12-4.7, <https://richarddmorey.github.io/BayesFactor/>. #> > Plummer M, Best N, Cowles K, Vines K (2006). “CODA: Convergence Diagnosis and Output Analysis for MCMC.” _R News_, *6*(1), 7-11. <https://journal.r-project.org/archive/>. #> > R Core Team (2025). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>. #> > Rosseel Y (2012). “lavaan: An R Package for Structural Equation Modeling.” _Journal of Statistical Software_, *48*(2), 1-36. doi:10.18637/jss.v048.i02 <https://doi.org/10.18637/jss.v048.i02>. #> > Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://dplyr.tidyverse.org>. report_system() #> Analyses were conducted using the R Statistical language (version 4.5.1; R Core #> Team, 2025) on Ubuntu 24.04.3 LTS"},{"path":"https://easystats.github.io/report/reference/report.stanreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Bayesian Models — report.stanreg","title":"Reporting Bayesian Models — report.stanreg","text":"Create reports Bayesian models. description parameters follows Sequential Effect eXistence sIgnificance Testing framework (see SEXIT documentation).","code":""},{"path":"https://easystats.github.io/report/reference/report.stanreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Bayesian Models — report.stanreg","text":"","code":"# S3 method for class 'stanreg' report(x, ...)"},{"path":"https://easystats.github.io/report/reference/report.stanreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Bayesian Models — report.stanreg","text":"x Object class lm glm. ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report.stanreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Bayesian Models — report.stanreg","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.stanreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Bayesian Models — report.stanreg","text":"","code":"# \\donttest{ # Bayesian models library(rstanarm) #> This is rstanarm version 2.32.1 #> - See https://mc-stan.org/rstanarm/articles/priors for changes to default priors! #> - Default priors may change, so it's safest to specify priors, even if equivalent to the defaults. #> - For execution on a local, multicore CPU with excess RAM we recommend calling #>   options(mc.cores = parallel::detectCores()) #>  #> Attaching package: ‘rstanarm’ #> The following objects are masked from ‘package:brms’: #>  #>     dirichlet, exponential, get_y, lasso, ngrps model <- suppressWarnings(stan_glm(mpg ~ qsec + wt, data = mtcars, refresh = 0, iter = 500)) r <- report(model) r #> We fitted a Bayesian linear model (estimated using MCMC sampling with 4 chains #> of 500 iterations and a warmup of 250) to predict mpg with qsec and wt #> (formula: mpg ~ qsec + wt). Priors over parameters were all set as normal (mean #> = 0.00, SD = 8.43; mean = 0.00, SD = 15.40) distributions. The model's #> explanatory power is substantial (R2 = 0.81, 95% CI [0.71, 0.89], adj. R2 = #> 0.79). The model's intercept, corresponding to qsec = 0 and wt = 0, is at 19.81 #> (95% CI [9.33, 30.41]). Within this model: #>  #>   - The effect of qsec (Median = 0.91, 95% CI [0.34, 1.48]) has a 99.60% #> probability of being positive (> 0), 98.30% of being significant (> 0.30), and #> 0.00% of being large (> 1.81). The estimation successfully converged (Rhat = #> 0.999) and the indices are reliable (ESS = 1006) #>   - The effect of wt (Median = -5.05, 95% CI [-6.06, -4.13]) has a 100.00% #> probability of being negative (< 0), 100.00% of being significant (< -0.30), #> and 100.00% of being large (< -1.81). The estimation successfully converged #> (Rhat = 1.001) and the indices are reliable (ESS = 1216) #>  #> Following the Sequential Effect eXistence and sIgnificance Testing (SEXIT) #> framework, we report the median of the posterior distribution and its 95% CI #> (Highest Density Interval), along the probability of direction (pd), the #> probability of significance and the probability of being large. The thresholds #> beyond which the effect is considered as significant (i.e., non-negligible) and #> large are |0.30| and |1.81| (corresponding respectively to 0.05 and 0.30 of the #> outcome's SD). Convergence and stability of the Bayesian sampling has been #> assessed using R-hat, which should be below 1.01 (Vehtari et al., 2019), and #> Effective Sample Size (ESS), which should be greater than 1000 (Burkner, 2017). summary(r) #> We fitted a Bayesian linear model to predict mpg with qsec and wt. Priors over #> parameters were all set as normal (mean = 0.00, SD = 8.43; mean = 0.00, SD = #> 15.40) distributions. The model's explanatory power is substantial (R2 = 0.81, #> adj. R2 = 0.79). The model's intercept is at 19.81 (95% CI [9.33, 30.41]). #> Within this model: #>  #>   - The effect of qsec (Median = 0.91, 95% CI [0.34, 1.48]) has 99.60%, 98.30% #> and 0.00% probability of being positive (> 0), significant (> 0.30) and large #> (> 1.81) #>   - The effect of wt (Median = -5.05, 95% CI [-6.06, -4.13]) has 100.00%, 100.00% #> and 100.00% probability of being negative (< 0), significant (< -0.30) and #> large (< -1.81) as.data.frame(r) #> Parameter   | Median |         95% CI |     pd |  Rhat |  ESS #> ------------------------------------------------------------- #> (Intercept) |  19.81 | [ 9.33, 30.41] |   100% | 0.999 |  944 #> qsec        |   0.91 | [ 0.34,  1.48] | 99.60% | 0.999 | 1006 #> wt          |  -5.05 | [-6.06, -4.13] |   100% | 1.001 | 1216 #>             |        |                |        |       |      #> ELPD        |        |                |        |       |      #> LOOIC       |        |                |        |       |      #> WAIC        |        |                |        |       |      #> R2          |        |                |        |       |      #> R2 (adj.)   |        |                |        |       |      #> Sigma       |        |                |        |       |      #>  #> Parameter   |                   Prior |    Fit #> ---------------------------------------------- #> (Intercept) | Normal (20.09 +- 15.07) |        #> qsec        |   Normal (0.00 +- 8.43) |        #> wt          |  Normal (0.00 +- 15.40) |        #>             |                         |        #> ELPD        |                         | -78.97 #> LOOIC       |                         | 157.95 #> WAIC        |                         | 157.65 #> R2          |                         |   0.81 #> R2 (adj.)   |                         |   0.79 #> Sigma       |                         |   2.65 # }"},{"path":"https://easystats.github.io/report/reference/report.test_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting models comparison — report.test_performance","title":"Reporting models comparison — report.test_performance","text":"Create reports model comparison obtained performance::compare_performance() function performance package.","code":""},{"path":"https://easystats.github.io/report/reference/report.test_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting models comparison — report.test_performance","text":"","code":"# S3 method for class 'test_performance' report(x, ...)  # S3 method for class 'test_performance' report_table(x, ...)  # S3 method for class 'test_performance' report_statistics(x, table = NULL, ...)  # S3 method for class 'test_performance' report_parameters(x, table = NULL, ...)  # S3 method for class 'test_performance' report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report.test_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting models comparison — report.test_performance","text":"x Object class NEW OBJECT. ... Arguments passed methods. table Provide output report_table() avoid re-computation.","code":""},{"path":"https://easystats.github.io/report/reference/report.test_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting models comparison — report.test_performance","text":"object class report().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report.test_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting models comparison — report.test_performance","text":"","code":"# \\donttest{ library(report) library(performance)  m1 <- lm(Sepal.Length ~ Petal.Length * Species, data = iris) m2 <- lm(Sepal.Length ~ Petal.Length + Species, data = iris) m3 <- lm(Sepal.Length ~ Petal.Length, data = iris)  x <- performance::test_performance(m1, m2, m3) r <- report(x) r #> We compared three models; lm (BF = 26.52), lm (BF = 4.20e-11) and lm (BF = #> 26.52). summary(r) #> We compared three models; lm (), lm () and lm (). as.data.frame(r) #> Name | Model |      BF | df | df_diff |  Chi2 |      p #> ------------------------------------------------------ #> m1   |    lm |         |  7 |         |       |        #> m2   |    lm |   26.52 |  5 |      -2 |  3.47 | 0.177  #> m3   |    lm | < 0.001 |  3 |      -2 | 57.81 | < .001 #> Models were detected as nested (in terms of fixed parameters) and are compared in sequential order. summary(as.data.frame(r)) #> Name | Model |      BF | df | df_diff |  Chi2 |      p #> ------------------------------------------------------ #> m1   |    lm |         |  7 |         |       |        #> m2   |    lm |   26.52 |  5 |      -2 |  3.47 | 0.177  #> m3   |    lm | < 0.001 |  3 |      -2 | 57.81 | < .001 #> Models were detected as nested (in terms of fixed parameters) and are compared in sequential order.  # Specific reports report_table(x) #> Name | Model |      BF | df | df_diff |  Chi2 |      p #> ------------------------------------------------------ #> m1   |    lm |         |  7 |         |       |        #> m2   |    lm |   26.52 |  5 |      -2 |  3.47 | 0.177  #> m3   |    lm | < 0.001 |  3 |      -2 | 57.81 | < .001 #> Models were detected as nested (in terms of fixed parameters) and are compared in sequential order. report_statistics(x) #> BF = 26.52 #> BF = 4.20e-11 report_parameters(x) #>   - lm (BF = 26.52) #>   - lm (BF = 4.20e-11) #>   - lm (BF = 26.52) # }"},{"path":"https://easystats.github.io/report/reference/report_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Miscellaneous reports — report_date","title":"Miscellaneous reports — report_date","text":"convenient totally useless reports.","code":""},{"path":"https://easystats.github.io/report/reference/report_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Miscellaneous reports — report_date","text":"","code":"report_date(...)  report_story(...)"},{"path":"https://easystats.github.io/report/reference/report_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Miscellaneous reports — report_date","text":"... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Miscellaneous reports — report_date","text":"Objects class report_text().","code":""},{"path":[]},{"path":"https://easystats.github.io/report/reference/report_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Miscellaneous reports — report_date","text":"","code":"library(report)  report_date() #> It's Thursday, September 18 of the year 2025, at  3pm 50 and 43 seconds summary(report_date()) #> 18/09/25 - 15:50:43 report_story() #> Did you ever hear the tragedy of Darth Plagueis The Wise? I thought not. It's #> not a story the Jedi would tell you. It's a Sith legend. Darth Plagueis was a #> Dark Lord of the Sith, so powerful and so wise he could use the Force to #> influence the midichlorians to create life... He had such a knowledge of the #> dark side that he could even keep the ones he cared about from dying. The dark #> side of the Force is a pathway to many abilities some consider to be unnatural. #> He became so powerful... the only thing he was afraid of was losing his power, #> which eventually, of course, he did. Unfortunately, he taught his apprentice #> everything he knew, then his apprentice killed him in his sleep. Ironic. He #> could save others from death, but not himself."},{"path":"https://easystats.github.io/report/reference/report_effectsize.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the effect size(s) of a model or a test — report_effectsize","title":"Report the effect size(s) of a model or a test — report_effectsize","text":"Computes, interpret formats effect sizes variety models statistical tests (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_effectsize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the effect size(s) of a model or a test — report_effectsize","text":"","code":"report_effectsize(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_effectsize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the effect size(s) of a model or a test — report_effectsize","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_effectsize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the effect size(s) of a model or a test — report_effectsize","text":"object class report_effectsize().","code":""},{"path":"https://easystats.github.io/report/reference/report_effectsize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the effect size(s) of a model or a test — report_effectsize","text":"","code":"library(report)  # h-tests report_effectsize(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> Effect sizes were labelled following Cohen's (1988) recommendations.  #>  #> large (Cohen's d = -4.21, 95% CI [-4.66, -3.76])  # ANOVAs report_effectsize(aov(Sepal.Length ~ Species, data = iris)) #> Effect sizes were labelled following Field's (2013) recommendations.  #>  #> large (Eta2 = 0.62, 95% CI [0.54, 1.00])  # GLMs report_effectsize(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> Effect sizes were labelled following Cohen's (1988) recommendations.  #>  #> small (Std. beta = 0.49, 95% CI [-1.03, 2.01]) #> large (Std. beta = 1.16, 95% CI [-0.01, 2.32]) #> large (Std. beta = -0.88, 95% CI [-2.41, 0.65]) #> large (Std. beta = -1.75, 95% CI [-3.32, -0.18]) #> medium (Std. beta = 0.61, 95% CI [-0.63, 1.85]) #> large (Std. beta = 0.97, 95% CI [-0.26, 2.19]) report_effectsize(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> Effect sizes were labelled following Cohen's (1988) recommendations.  #>  #> small (Std. beta = -0.85, 95% CI [-2.42, 0.27]) #> large (Std. beta = -2.68, 95% CI [-4.90, -1.27])  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_effectsize(model) #> Effect sizes were labelled following Cohen's (1988) recommendations.  #>  #> very small (Std. beta = -1.46e-13, 95% CI [-1.49, 1.49]) #> large (Std. beta = 1.89, 95% CI [1.63, 2.16]) # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_effectsize(model, effectsize_method = \"basic\") #> Effect sizes were labelled following Cohen's (1988) recommendations.  #>  #> very small (Std. beta = 0.00, 95% CI [0.00, 0.00]) #> medium (Std. beta = 0.53, 95% CI [0.42, 0.65]) #> large (Std. beta = 0.90, 95% CI [0.80, 1.03]) # }"},{"path":"https://easystats.github.io/report/reference/report_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Report additional information — report_info","title":"Report additional information — report_info","text":"Reports additional information relevant report (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report additional information — report_info","text":"","code":"report_info(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report additional information — report_info","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report additional information — report_info","text":"object class report_info().","code":""},{"path":"https://easystats.github.io/report/reference/report_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report additional information — report_info","text":"","code":"library(report)  # h-tests report_info(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> Effect sizes were labelled following Cohen's (1988) recommendations.  # ANOVAs report_info(aov(Sepal.Length ~ Species, data = iris)) #> Effect sizes were labelled following Field's (2013) recommendations. # \\donttest{ # GLMs report_info(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> Standardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using a Wald t-distribution approximation. report_info(lm(Sepal.Length ~ Petal.Length * Species, data = iris), include_effectsize = TRUE) #> Standardized parameters were obtained by fitting the model on a standardized version of the dataset and were labelled following Cohen's (1988) recommendations. 95% Confidence Intervals (CIs) and p-values were computed using a Wald t-distribution approximation. report_info(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> Standardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using a Wald z-distribution approximation. # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_info(model) #> Standardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using a Wald t-distribution approximation. # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 300)) report_info(model) #> Following the Sequential Effect eXistence and sIgnificance Testing (SEXIT) framework, we report the median of the posterior distribution and its 95% CI (Highest Density Interval), along the probability of direction (pd), the probability of significance and the probability of being large. The thresholds beyond which the effect is considered as significant (i.e., non-negligible) and large are |0.04| and |0.25| (corresponding respectively to 0.05 and 0.30 of the outcome's SD). Convergence and stability of the Bayesian sampling has been assessed using R-hat, which should be below 1.01 (Vehtari et al., 2019), and Effective Sample Size (ESS), which should be greater than 1000 (Burkner, 2017). # }"},{"path":"https://easystats.github.io/report/reference/report_intercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Report intercept — report_intercept","title":"Report intercept — report_intercept","text":"Reports intercept regression models (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_intercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report intercept — report_intercept","text":"","code":"report_intercept(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_intercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report intercept — report_intercept","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_intercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report intercept — report_intercept","text":"object class report_intercept().","code":""},{"path":"https://easystats.github.io/report/reference/report_intercept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report intercept — report_intercept","text":"","code":"# \\donttest{ library(report)  # GLMs report_intercept(lm(Sepal.Length ~ Species, data = iris)) #> The model's intercept, corresponding to Species = setosa, is at 5.01 (95% CI [4.86, 5.15], t(147) = 68.76, p < .001). report_intercept(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> The model's intercept, corresponding to disp = 0, is at 4.14 (95% CI [1.81, 7.44], p = 0.003). # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_intercept(model) #> The model's intercept, corresponding to Petal.Length = 0, is at 2.50 (95% CI [1.19, 3.82], t(146) = 3.75, p < .001). # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_intercept(model) #> The model's intercept, corresponding to Species = setosa, is at 5.01 (95% CI [4.86, 5.15]). # }"},{"path":"https://easystats.github.io/report/reference/report_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the model type — report_model","title":"Report the model type — report_model","text":"Reports type different R objects (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the model type — report_model","text":"","code":"report_model(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the model type — report_model","text":"x R object want report (see list supported objects ). table table obtained via report_table(). provided, run . ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the model type — report_model","text":"character string.","code":""},{"path":"https://easystats.github.io/report/reference/report_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the model type — report_model","text":"","code":"# \\donttest{ library(report)  # h-tests report_model(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> Welch Two Sample t-test testing the difference between iris$Sepal.Width and iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84)  # ANOVA report_model(aov(Sepal.Length ~ Species, data = iris)) #> ANOVA (formula: Sepal.Length ~ Species)  # GLMs report_model(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> linear model (estimated using OLS) to predict Sepal.Length with Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species) report_model(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> logistic model (estimated using ML) to predict vs with disp (formula: vs ~ disp) # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_model(model) #> linear mixed model (estimated using REML and nloptwrap optimizer) to predict Sepal.Length with Petal.Length (formula: Sepal.Length ~ Petal.Length). The model included Species as random effect (formula: ~1 | Species) # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_model(model) #> Bayesian linear model (estimated using MCMC sampling with 4 chains of 600 iterations and a warmup of 300) to predict Sepal.Length with Species (formula: Sepal.Length ~ Species). Priors over parameters were all set as normal (mean = 0.00, SD = 4.38; mean = 0.00, SD = 4.38) distributions # }"},{"path":"https://easystats.github.io/report/reference/report_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the parameters of a model — report_parameters","title":"Report the parameters of a model — report_parameters","text":"Creates list containing description parameters R objects (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the parameters of a model — report_parameters","text":"","code":"report_parameters(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the parameters of a model — report_parameters","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the parameters of a model — report_parameters","text":"vector.","code":""},{"path":"https://easystats.github.io/report/reference/report_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the parameters of a model — report_parameters","text":"","code":"# \\donttest{ library(report)  # Miscellaneous r <- report_parameters(sessionInfo()) r #>   - Matrix (version 1.7.4; Bates D et al., 2025) #>   - lme4 (version 1.1.37; Bates D et al., 2015) #>   - brms (version 2.23.0; Bürkner P, 2017) #>   - Rcpp (version 1.1.0; Eddelbuettel D et al., 2025) #>   - rstanarm (version 2.32.1; Goodrich B et al., 2024) #>   - performance (version 0.15.1; Lüdecke D et al., 2021) #>   - bayestestR (version 0.17.0.1; Makowski D et al., 2019) #>   - modelbased (version 0.13.0; Makowski D et al., 2025) #>   - report (version 0.6.1.5; Makowski D et al., 2023) #>   - BayesFactor (version 0.9.12.4.7; Morey R, Rouder J, 2024) #>   - coda (version 0.19.4.1; Plummer M et al., 2006) #>   - R (version 4.5.1; R Core Team, 2025) #>   - lavaan (version 0.6.19; Rosseel Y, 2012) #>   - dplyr (version 1.1.4; Wickham H et al., 2023) summary(r) #>   - Matrix (v1.7.4) #>   - lme4 (v1.1.37) #>   - brms (v2.23.0) #>   - Rcpp (v1.1.0) #>   - rstanarm (v2.32.1) #>   - performance (v0.15.1) #>   - bayestestR (v0.17.0.1) #>   - modelbased (v0.13.0) #>   - report (v0.6.1.5) #>   - BayesFactor (v0.9.12.4.7) #>   - coda (v0.19.4.1) #>   - R (v4.5.1) #>   - lavaan (v0.6.19) #>   - dplyr (v1.1.4)  # Data report_parameters(iris$Sepal.Length) #>   - n = 150 #>   - Mean = 5.84 #>   - SD = 0.83 #>   - Median = 5.80 #>   - MAD = 1.04 #>   - range: [4.30, 7.90] #>   - Skewness = 0.31 #>   - Kurtosis = -0.55 #>   - 0% missing report_parameters(as.character(round(iris$Sepal.Length, 1))) #>   - 5 (6.67%) #>   - 5.1 (6.00%) #>   - 6.3 (6.00%) #>   - 5.7 (5.33%) #>   - 6.7 (5.33%) #>   - 5.5 (4.67%) #>   - 5.8 (4.67%) #>   - 6.4 (4.67%) #>   - 4.9 (4.00%) #>   - 5.4 (4.00%) #>   - 5.6 (4.00%) #>   - 6 (4.00%) #>   - 6.1 (4.00%) #>   - 4.8 (3.33%) #>   - 6.5 (3.33%) #>   - 4.6 (2.67%) #>   - 5.2 (2.67%) #>   - 6.2 (2.67%) #>   - 6.9 (2.67%) #>   - 7.7 (2.67%) #>   - 4.4 (2.00%) #>   - 5.9 (2.00%) #>   - 6.8 (2.00%) #>   - 7.2 (2.00%) #>   - 4.7 (1.33%) #>   - 6.6 (1.33%) #>   - 4.3 (0.67%) #>   - 4.5 (0.67%) #>   - 5.3 (0.67%) #>   - 7 (0.67%) #>   - 7.1 (0.67%) #>   - 7.3 (0.67%) #>   - 7.4 (0.67%) #>   - 7.6 (0.67%) #>   - 7.9 (0.67%) report_parameters(iris$Species) #>   - setosa (n = 50, 33.33%) #>   - versicolor (n = 50, 33.33%) #>   - virginica (n = 50, 33.33%) report_parameters(iris) #>   - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing #>   - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44, range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing #>   - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85, range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing #>   - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04, range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing #>   - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50, 33.33%) and virginica (n = 50, 33.33%)  # h-tests report_parameters(t.test(iris$Sepal.Width, iris$Sepal.Length)) #>   - negative, statistically significant, and large (difference = -2.79, 95% CI [-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66, -3.76])  # ANOVA report_parameters(aov(Sepal.Length ~ Species, data = iris)) #>   - The main effect of Species is statistically significant and large (F(2, 147) = 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00])  # GLMs report_parameters(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #>   - The intercept is statistically significant and positive (beta = 4.21, 95% CI [3.41, 5.02], t(144) = 10.34, p < .001; Std. beta = 0.49, 95% CI [-1.03, 2.01]) #>   - The effect of Petal Length is statistically non-significant and positive (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta = 1.16, 95% CI [-0.01, 2.32]) #>   - The effect of Species [versicolor] is statistically significant and negative (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta = -0.88, 95% CI [-2.41, 0.65]) #>   - The effect of Species [virginica] is statistically significant and negative (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta = -1.75, 95% CI [-3.32, -0.18]) #>   - The effect of Petal Length × Species [versicolor] is statistically non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85]) #>   - The effect of Petal Length × Species [virginica] is statistically non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19]) report_parameters(lm(Petal.Width ~ Species, data = iris), include_intercept = FALSE) #>   - The effect of Species [versicolor] is statistically significant and positive (beta = 1.08, 95% CI [1.00, 1.16], t(147) = 26.39, p < .001; Std. beta = 1.42, 95% CI [1.31, 1.52]) #>   - The effect of Species [virginica] is statistically significant and positive (beta = 1.78, 95% CI [1.70, 1.86], t(147) = 43.49, p < .001; Std. beta = 2.34, 95% CI [2.23, 2.44]) report_parameters(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #>   - The intercept is statistically significant and positive (beta = 4.14, 95% CI [1.81, 7.44], p = 0.003; Std. beta = -0.85, 95% CI [-2.42, 0.27]) #>   - The effect of disp is statistically significant and negative (beta = -0.02, 95% CI [-0.04, -0.01], p = 0.002; Std. beta = -2.68, 95% CI [-4.90, -1.27]) # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_parameters(model) #>   - The intercept is statistically significant and positive (beta = 2.50, 95% CI [1.19, 3.82], t(146) = 3.75, p < .001; Std. beta = -1.46e-13, 95% CI [-1.49, 1.49]) #>   - The effect of Petal Length is statistically significant and positive (beta = 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001; Std. beta = 1.89, 95% CI [1.63, 2.16]) # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_parameters(model) #>   - The intercept (Median = 5.00, 95% CI [4.88, 5.16]) has a 100.00% probability of being positive (> 0), 100.00% of being significant (> 0.04), and 100.00% of being large (> 0.25). The estimation successfully converged (Rhat = 0.999) but the indices are unreliable (ESS = 886) #>   - The effect of Species [versicolor] (Median = 0.93, 95% CI [0.73, 1.13]) has a 100.00% probability of being positive (> 0), 100.00% of being significant (> 0.04), and 100.00% of being large (> 0.25). The estimation successfully converged (Rhat = 0.998) but the indices are unreliable (ESS = 907) #>   - The effect of Species [virginica] (Median = 1.58, 95% CI [1.38, 1.77]) has a 100.00% probability of being positive (> 0), 100.00% of being significant (> 0.04), and 100.00% of being large (> 0.25). The estimation successfully converged (Rhat = 0.999) and the indices are reliable (ESS = 1043) # }"},{"path":"https://easystats.github.io/report/reference/report_participants.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting the participant data — report_participants","title":"Reporting the participant data — report_participants","text":"helper function help format participants data (age, sex, ...) participants section.","code":""},{"path":"https://easystats.github.io/report/reference/report_participants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting the participant data — report_participants","text":"","code":"report_participants(   data,   age = NULL,   sex = NULL,   gender = NULL,   education = NULL,   country = NULL,   race = NULL,   participants = NULL,   by = NULL,   spell_n = FALSE,   digits = 1,   threshold = 10,   group = NULL,   ... )"},{"path":"https://easystats.github.io/report/reference/report_participants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting the participant data — report_participants","text":"data data frame. age name column containing age participant. sex name column containing sex participant. classes one c(\"Male\", \"M\", \"Female\", \"F\"). Note can specify characters well (e.g., \"Intersex\"), function group individuals groups \"\". gender name column containing gender classes one c(\"Man\", \"M\", \"Male\", Woman\", \"W\", \"F\", \"Female\", Non-Binary\", \"N\"). Note can specify characters well (e.g., \"Gender Fluid\"), function group individuals groups \"Non-Binary\". education name column containing education information. country name column containing country information. race name column containing race/ethnicity information. participants name participants' identifier column (instance case repeated measures). character vector indicating name(s) column(s) used stratified description. spell_n Logical, fully spell sample size (\"Three participants\" instead \"3 participants\"). digits Number significant digits. threshold Percentage combine, e.g., countries (default 10%, countries represent less 10% combined \"\" category). group Deprecated. Use instead. ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_participants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting the participant data — report_participants","text":"character vector description \"participants\", based information provided data.","code":""},{"path":"https://easystats.github.io/report/reference/report_participants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting the participant data — report_participants","text":"","code":"library(report) data <- data.frame(   \"Age\" = c(22, 23, 54, 21, 8, 42),   \"Sex\" = c(\"Intersex\", \"F\", \"M\", \"M\", \"NA\", NA),   \"Gender\" = c(\"N\", \"W\", \"W\", \"M\", \"NA\", NA) ) report_participants(data, age = \"Age\", sex = \"Sex\") #> [1] \"6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing)\"  # Years of education (relative to high school graduation) data$Education <- c(0, 8, -3, -5, 3, 5) report_participants(data,   age = \"Age\", sex = \"Sex\", gender = \"Gender\",   education = \"Education\" ) #> [1] \"6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Mean education = 1.3, SD = 4.9, range: [-5, 8])\"  # Education as factor data$Education2 <- c(   \"Bachelor\", \"PhD\", \"Highschool\",   \"Highschool\", \"Bachelor\", \"Bachelor\" ) report_participants(data, age = \"Age\", sex = \"Sex\", gender = \"Gender\", education = \"Education2\") #> [1] \"6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Education: Bachelor, 50.00%; Highschool, 33.33%; PhD, 16.67%)\"  # Country data <- data.frame(   \"Age\" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),   \"Sex\" = c(\"Intersex\", \"F\", \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\"),   \"Gender\" = c(\"N\", \"W\", \"W\", \"M\", \"M\", \"M\", \"W\", \"W\", \"W\", \"W\", \"W\"),   \"Country\" = c(     \"USA\", NA, \"Canada\", \"Canada\", \"India\", \"Germany\",     \"USA\", \"USA\", \"USA\", \"USA\", \"Canada\"   ) ) report_participants(data) #> [1] \"11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 27.27% other)\"  # Country, control presentation treshold report_participants(data, threshold = 5) #> [1] \"11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 9.09% Germany, 9.09% India, 9.09% missing)\"  # Race/ethnicity data <- data.frame(   \"Age\" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),   \"Sex\" = c(\"Intersex\", \"F\", \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\"),   \"Gender\" = c(\"N\", \"W\", \"W\", \"M\", \"M\", \"M\", \"W\", \"W\", \"W\", \"W\", \"W\"),   \"Race\" = c(     \"Black\", NA, \"White\", \"Asian\", \"Black\", \"Arab\", \"Black\",     \"White\", \"Asian\", \"Southeast Asian\", \"Mixed\"   ) ) report_participants(data) #> [1] \"11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 36.36% other)\"  # Race/ethnicity, control presentation treshold report_participants(data, threshold = 5) #> [1] \"11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 9.09% Arab, 9.09% Mixed, 9.09% Southeast Asian, 9.09% missing)\"  # Repeated measures data data <- data.frame(   \"Age\" = c(22, 22, 54, 54, 8, 8),   \"Sex\" = c(\"I\", \"F\", \"M\", \"M\", \"F\", \"F\"),   \"Gender\" = c(\"N\", \"W\", \"W\", \"M\", \"M\", \"M\"),   \"Participant\" = c(\"S1\", \"S1\", \"s2\", \"s2\", \"s3\", \"s3\") ) report_participants(data, age = \"Age\", sex = \"Sex\", gender = \"Gender\", participants = \"Participant\") #> [1] \"3 participants (Mean age = 28.0, SD = 23.6, range: [8, 54]; Sex: 33.3% females, 33.3% males, 33.3% other; Gender: 33.3% women, 33.3% men, 33.33% non-binary)\"  # Grouped data data <- data.frame(   \"Age\" = c(22, 22, 54, 54, 8, 8, 42, 42),   \"Sex\" = c(\"I\", \"I\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\"),   \"Gender\" = c(\"N\", \"N\", \"W\", \"M\", \"M\", \"M\", \"Non-Binary\", \"Non-Binary\"),   \"Participant\" = c(\"S1\", \"S1\", \"s2\", \"s2\", \"s3\", \"s3\", \"s4\", \"s4\"),   \"Condition\" = c(\"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"B\") )  report_participants(data,   age = \"Age\",   sex = \"Sex\",   gender = \"Gender\",   participants = \"Participant\",   by = \"Condition\" ) #> [1] \"For the 'Condition - A' group: 2 participants (Mean age = 38.0, SD = 22.6, range: [22, 54]; Sex: 0.0% females, 50.0% males, 50.0% other; Gender: 50.0% women, 0.0% men, 50.00% non-binary) and for the 'Condition - B' group: 2 participants (Mean age = 25.0, SD = 24.0, range: [8, 42]; Sex: 100.0% females, 0.0% males, 0.0% other; Gender: 0.0% women, 50.0% men, 50.00% non-binary)\"  # Spell sample size paste(   report_participants(data, participants = \"Participant\", spell_n = TRUE),   \"were recruited in the study by means of torture and coercion.\" ) #> [1] \"Four participants (Mean age = 31.5, SD = 20.5, range: [8, 54]; Sex: 50.0% females, 25.0% males, 25.0% other; Gender: 25.0% women, 25.0% men, 50.00% non-binary) were recruited in the study by means of torture and coercion.\""},{"path":"https://easystats.github.io/report/reference/report_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the model's quality and fit indices — report_performance","title":"Report the model's quality and fit indices — report_performance","text":"Investigating fit statistical models data often involves selecting best fitting model amongst many competing models. function helps report indices model fit various models.  Reports type different R objects . list supported objects, see report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the model's quality and fit indices — report_performance","text":"","code":"report_performance(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the model's quality and fit indices — report_performance","text":"x R object want report (see list supported objects ). table table obtained via report_table(). provided, run . ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the model's quality and fit indices — report_performance","text":"object class report_performance().","code":""},{"path":"https://easystats.github.io/report/reference/report_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the model's quality and fit indices — report_performance","text":"","code":"# \\donttest{ # GLMs report_performance(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> The model explains a statistically significant and substantial proportion of #> variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83) report_performance(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> The model's explanatory power is substantial (Tjur's R2 = 0.53) # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_performance(model) #> The model's total explanatory power is substantial (conditional R2 = 0.97) and #> the part related to the fixed effects alone (marginal R2) is of 0.66 # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_performance(model) #> The model's explanatory power is substantial (R2 = 0.61, 95% CI [0.53, 0.69], #> adj. R2 = 0.61) # } # \\donttest{ # Structural Equation Models (SEM) library(lavaan) structure <- \"ind60 =~ x1 + x2 + x3               dem60 =~ y1 + y2 + y3               dem60 ~ ind60 \" model <- lavaan::sem(structure, data = PoliticalDemocracy) suppressWarnings(report_performance(model)) #> The model is not significantly different from a baseline model (Chi2(8) = 7.98, #> p = 0.435). The GFI (.97 > .95) suggest a satisfactory fit., The model is not #> significantly different from a baseline model (Chi2(8) = 7.98, p = 0.435). The #> AGFI (.91 > .90) suggest a satisfactory fit., The model is not significantly #> different from a baseline model (Chi2(8) = 7.98, p = 0.435). The NFI (.97 > #> .90) suggest a satisfactory fit., The model is not significantly different from #> a baseline model (Chi2(8) = 7.98, p = 0.435). The NNFI (.00 > .90) suggest a #> satisfactory fit., The model is not significantly different from a baseline #> model (Chi2(8) = 7.98, p = 0.435). The CFI (.00 > .90) suggest a satisfactory #> fit., The model is not significantly different from a baseline model (Chi2(8) = #> 7.98, p = 0.435). The RMSEA (.00 < .05) suggest a satisfactory fit., The model #> is not significantly different from a baseline model (Chi2(8) = 7.98, p = #> 0.435). The SRMR (.03 < .08) suggest a satisfactory fit., The model is not #> significantly different from a baseline model (Chi2(8) = 7.98, p = 0.435). The #> RFI (.95 > .90) suggest a satisfactory fit., The model is not significantly #> different from a baseline model (Chi2(8) = 7.98, p = 0.435). The PNFI (.52 > #> .50) suggest a satisfactory fit. and The model is not significantly different #> from a baseline model (Chi2(8) = 7.98, p = 0.435). The IFI (.00 > .90) suggest #> a satisfactory fit. # }"},{"path":"https://easystats.github.io/report/reference/report_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Report priors of Bayesian models — report_priors","title":"Report priors of Bayesian models — report_priors","text":"Reports priors Bayesian models (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report priors of Bayesian models — report_priors","text":"","code":"report_priors(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report priors of Bayesian models — report_priors","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report priors of Bayesian models — report_priors","text":"object class report_priors().","code":""},{"path":"https://easystats.github.io/report/reference/report_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report priors of Bayesian models — report_priors","text":"","code":"# \\donttest{ # Bayesian models library(rstanarm) model <- stan_glm(mpg ~ disp, data = mtcars, refresh = 0, iter = 1000) r <- report_priors(model) r #> Priors over parameters were set as normal (mean = 0.00, SD = 0.12) distributions summary(r) #> Priors over parameters were set as normal (mean = 0.00, SD = 0.12) distributions # }"},{"path":"https://easystats.github.io/report/reference/report_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Report random effects and factors — report_random","title":"Report random effects and factors — report_random","text":"Reports random effects mixed models (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report random effects and factors — report_random","text":"","code":"report_random(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report random effects and factors — report_random","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report random effects and factors — report_random","text":"object class report_random().","code":""},{"path":"https://easystats.github.io/report/reference/report_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report random effects and factors — report_random","text":"","code":"# \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) r <- report_random(model) r #> The model included Species as random effect (formula: ~1 | Species) summary(r) #> [1] \"The model included Species as random effect\" # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_lmer(   mpg ~ disp + (1 | cyl),   data = mtcars, refresh = 0, iter = 1000 )) r <- report_random(model) r #> The model included cyl as random effect (formula: ~1 | cyl) summary(r) #> [1] \"The model included cyl as random effect\" # } # \\donttest{ library(brms) model <- suppressWarnings(brm(mpg ~ disp + (1 | cyl), data = mtcars, refresh = 0, iter = 1000)) #> Compiling Stan program... #> Start sampling r <- report_random(model) r #> The model included cyl as random effect (formula: ~1 | cyl) summary(r) #> [1] \"The model included cyl as random effect\" # }"},{"path":"https://easystats.github.io/report/reference/report_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Report S- and p-values in easy language. — report_s","title":"Report S- and p-values in easy language. — report_s","text":"Reports interpretation S- p-values easy language.","code":""},{"path":"https://easystats.github.io/report/reference/report_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report S- and p-values in easy language. — report_s","text":"","code":"report_s(s = NULL, p = NULL, test_value = 0, test_parameter = \"parameter\")"},{"path":"https://easystats.github.io/report/reference/report_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report S- and p-values in easy language. — report_s","text":"s S-value. Either s p must provided. p p-value. Either s p must provided. test_value value test parameter null hypothesis. test_parameter name test parameter null hypothesis.","code":""},{"path":"https://easystats.github.io/report/reference/report_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report S- and p-values in easy language. — report_s","text":"string interpretation S- p-value.","code":""},{"path":"https://easystats.github.io/report/reference/report_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report S- and p-values in easy language. — report_s","text":"","code":"report_s(s = 1.5) #> If the test hypothesis (parameter = 0) and all model assumptions were #>   true, there is a 35% chance of observing this outcome. How weird is #>   that? It's hardly more surprising than getting 2 heads in a row with #>   fair coin tosses. report_s(p = 0.05) #> If the test hypothesis (parameter = 0) and all model assumptions were #>   true, there is a 5% chance of observing this outcome. How weird is that? #>   It's hardly more surprising than getting 4 heads in a row with fair coin #>   tosses."},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Description — report_sample","title":"Sample Description — report_sample","text":"Create sample description table (also referred \"Table 1\").","code":""},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Description — report_sample","text":"","code":"report_sample(   data,   by = NULL,   centrality = \"mean\",   ci = NULL,   ci_method = \"wilson\",   ci_correct = FALSE,   select = NULL,   exclude = NULL,   weights = NULL,   total = TRUE,   digits = 2,   n = FALSE,   group_by = NULL,   ... )"},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Description — report_sample","text":"data data frame descriptive statistics created. Character vector, indicating column(s) possible grouping descriptive table. Note weighting (see weights) work one grouping column. centrality Character, indicates statistics calculated numeric variables. May \"mean\" (mean standard deviation) \"median\" (median median absolute deviation) summary. ci Level confidence interval relative frequencies (proportions). NULL, confidence intervals shown proportions factor levels. ci_method Character, indicating method calculate confidence intervals proportions. Currently implemented methods \"wald\" \"wilson\". Note \"wald\" can produce intervals outside plausible range [0, 1], thus recommended prefer \"wilson\" method. formulae confidence intervals : \"wald\": $$p \\pm z \\sqrt{\\frac{p (1 - p)}{n}}$$ \"wilson\": $$\\frac{2np + z^2 \\pm z \\sqrt{z^2 + 4npq}}{2(n + z^2)}$$ p proportion (factor level), q 1-p, z critical z-score based interval level n length vector (cf. Newcombe 1998, Wilson 1927). ci_correct Logical, TRUE, applies continuity correction. See Newcombe 1998 different correction-methods based chosen ci_method. select Character vector, column names included descriptive table. exclude Character vector, column names excluded descriptive table. weights Character vector, indicating name potential weight-variable. Reported descriptive statistics weighted weight. total Add Total column. digits Number decimals. n Logical, actual sample size used calculation reported descriptive statistics (.e., without missing values). group_by Deprecated. Use instead. ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Description — report_sample","text":"data frame class report_sample variable names related summary statistics.","code":""},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample Description — report_sample","text":"Newcombe, R. G. (1998). Two-sided confidence intervals single proportion: comparison seven methods. Statistics Medicine. 17 (8): 857–872 Wilson, E. B. (1927). Probable inference, law succession, statistical inference. Journal American Statistical Association. 22 (158): 209–212","code":""},{"path":"https://easystats.github.io/report/reference/report_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Description — report_sample","text":"","code":"library(report)  report_sample(iris[, 1:4]) #> # Descriptive Statistics #>  #> Variable               |     Summary #> ------------------------------------ #> Mean Sepal.Length (SD) | 5.84 (0.83) #> Mean Sepal.Width (SD)  | 3.06 (0.44) #> Mean Petal.Length (SD) | 3.76 (1.77) #> Mean Petal.Width (SD)  | 1.20 (0.76) report_sample(iris, select = c(\"Sepal.Length\", \"Petal.Length\", \"Species\")) #> # Descriptive Statistics #>  #> Variable                |     Summary #> ------------------------------------- #> Mean Sepal.Length (SD)  | 5.84 (0.83) #> Mean Petal.Length (SD)  | 3.76 (1.77) #> Species [setosa], %     |        33.3 #> Species [versicolor], % |        33.3 #> Species [virginica], %  |        33.3 report_sample(iris, by = \"Species\") #> # Descriptive Statistics #>  #> Variable               | setosa (n=50) | versicolor (n=50) | virginica (n=50) | Total (n=150) #> --------------------------------------------------------------------------------------------- #> Mean Sepal.Length (SD) |   5.01 (0.35) |       5.94 (0.52) |      6.59 (0.64) |   5.84 (0.83) #> Mean Sepal.Width (SD)  |   3.43 (0.38) |       2.77 (0.31) |      2.97 (0.32) |   3.06 (0.44) #> Mean Petal.Length (SD) |   1.46 (0.17) |       4.26 (0.47) |      5.55 (0.55) |   3.76 (1.77) #> Mean Petal.Width (SD)  |   0.25 (0.11) |       1.33 (0.20) |      2.03 (0.27) |   1.20 (0.76) report_sample(airquality, by = \"Month\", n = TRUE, total = FALSE) #> # Descriptive Statistics #>  #> Variable             |            5 (n=31) |           6 (n=30) #> --------------------------------------------------------------- #> Mean Ozone (SD), n   |   23.62 (22.22), 26 |   29.44 (18.21), 9 #> Mean Solar.R (SD), n | 181.30 (115.08), 27 | 190.17 (92.88), 30 #> Mean Wind (SD), n    |    11.62 (3.53), 31 |   10.27 (3.77), 30 #> Mean Temp (SD), n    |    65.55 (6.85), 31 |   79.10 (6.60), 30 #> Mean Day (SD), n     |    16.00 (9.09), 31 |   15.50 (8.80), 30 #>  #> Variable             |           7 (n=31) |           8 (n=31) |   9 (n=30) (n=153) #> ----------------------------------------------------------------------------------- #> Mean Ozone (SD), n   |  59.12 (31.64), 26 |  59.96 (39.68), 26 |  31.45 (24.14), 29 #> Mean Solar.R (SD), n | 216.48 (80.57), 31 | 171.86 (76.83), 28 | 167.43 (79.12), 30 #> Mean Wind (SD), n    |    8.94 (3.04), 31 |    8.79 (3.23), 31 |   10.18 (3.46), 30 #> Mean Temp (SD), n    |   83.90 (4.32), 31 |   83.97 (6.59), 31 |   76.90 (8.36), 30 #> Mean Day (SD), n     |   16.00 (9.09), 31 |   16.00 (9.09), 31 |   15.50 (8.80), 30  # confidence intervals for proportions set.seed(123) d <- data.frame(x = factor(sample(letters[1:3], 100, TRUE, c(0.01, 0.39, 0.6)))) report_sample(d, ci = 0.95, ci_method = \"wald\") # ups, negative CI #> # Descriptive Statistics #>  #> Variable |           Summary #> ---------------------------- #> x [a], % |   1.0 [-1.0, 3.0] #> x [b], % | 39.0 [29.4, 48.6] #> x [c], % | 60.0 [50.4, 69.6] report_sample(d, ci = 0.95, ci_method = \"wilson\") # negative CI fixed #> # Descriptive Statistics #>  #> Variable |           Summary #> ---------------------------- #> x [a], % |    1.0 [0.2, 5.4] #> x [b], % | 39.0 [30.0, 48.8] #> x [c], % | 60.0 [50.2, 69.1] report_sample(d, ci = 0.95, ci_correct = TRUE) # continuity correction #> # Descriptive Statistics #>  #> Variable |           Summary #> ---------------------------- #> x [a], % |    1.0 [0.1, 6.2] #> x [b], % | 39.0 [29.6, 49.3] #> x [c], % | 60.0 [49.7, 69.5]"},{"path":"https://easystats.github.io/report/reference/report_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the statistics of a model — report_statistics","title":"Report the statistics of a model — report_statistics","text":"Creates list containing description parameters' values R objects (see list supported objects report()). Useful insert parentheses plots reports.","code":""},{"path":"https://easystats.github.io/report/reference/report_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the statistics of a model — report_statistics","text":"","code":"report_statistics(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the statistics of a model — report_statistics","text":"x R object want report (see list supported objects ). table table obtained via report_table(). provided, run . ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the statistics of a model — report_statistics","text":"object class report_statistics().","code":""},{"path":"https://easystats.github.io/report/reference/report_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the statistics of a model — report_statistics","text":"","code":"# \\donttest{ library(report)  # Data report_statistics(iris$Sepal.Length) #> n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing report_statistics(as.character(round(iris$Sepal.Length, 1))) #> 5, 6.67%%; 5.1, 6.00%%; 6.3, 6.00%%; 5.7, 5.33%%; 6.7, 5.33%%; 5.5, 4.67%%; 5.8, 4.67%%; 6.4, 4.67%%; 4.9, 4.00%%; 5.4, 4.00%%; 5.6, 4.00%%; 6, 4.00%%; 6.1, 4.00%%; 4.8, 3.33%%; 6.5, 3.33%%; 4.6, 2.67%%; 5.2, 2.67%%; 6.2, 2.67%%; 6.9, 2.67%%; 7.7, 2.67%%; 4.4, 2.00%%; 5.9, 2.00%%; 6.8, 2.00%%; 7.2, 2.00%%; 4.7, 1.33%%; 6.6, 1.33%%; 4.3, 0.67%%; 4.5, 0.67%%; 5.3, 0.67%%; 7, 0.67%%; 7.1, 0.67%%; 7.3, 0.67%%; 7.4, 0.67%%; 7.6, 0.67%%; 7.9, 0.67%% report_statistics(iris$Species) #> setosa, n = 50, 33.33%; versicolor, n = 50, 33.33%; virginica, n = 50, 33.33% report_statistics(iris) #> n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing #> n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44, range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing #> n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85, range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing #> n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04, range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing #> setosa, n = 50, 33.33%; versicolor, n = 50, 33.33%; virginica, n = 50, 33.33%  # h-tests report_statistics(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> difference = -2.79, 95% CI [-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66, -3.76]  # ANOVA report_statistics(aov(Sepal.Length ~ Species, data = iris)) #> F(2, 147) = 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00]  # GLMs report_statistics(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> beta = 4.21, 95% CI [3.41, 5.02], t(144) = 10.34, p < .001; Std. beta = 0.49, 95% CI [-1.03, 2.01] #> beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta = 1.16, 95% CI [-0.01, 2.32] #> beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta = -0.88, 95% CI [-2.41, 0.65] #> beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta = -1.75, 95% CI [-3.32, -0.18] #> beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85] #> beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19] report_statistics(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> beta = 4.14, 95% CI [1.81, 7.44], p = 0.003; Std. beta = -0.85, 95% CI [-2.42, 0.27] #> beta = -0.02, 95% CI [-0.04, -0.01], p = 0.002; Std. beta = -2.68, 95% CI [-4.90, -1.27] # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_statistics(model) #> beta = 2.50, 95% CI [1.19, 3.82], t(146) = 3.75, p < .001; Std. beta = -1.46e-13, 95% CI [-1.49, 1.49] #> beta = 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001; Std. beta = 1.89, 95% CI [1.63, 2.16] # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_statistics(model) #> Median = 5.01, 95% CI [4.85, 5.14], pd = 100%; Std. beta = -1.02, 95% CI [-1.20, -0.84]; Rhat = 1.00, ESS = 859.76 #> Median = 0.93, 95% CI [0.72, 1.14], pd = 100%; Std. beta = 1.13, 95% CI [0.87, 1.39]; Rhat = 1.00, ESS = 798.71 #> Median = 1.58, 95% CI [1.37, 1.80], pd = 100%; Std. beta = 1.91, 95% CI [1.67, 2.17]; Rhat = 1.00, ESS = 911.74 # }"},{"path":"https://easystats.github.io/report/reference/report_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Report a descriptive table — report_table","title":"Report a descriptive table — report_table","text":"Creates tables describe different objects (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report a descriptive table — report_table","text":"","code":"report_table(x, ...)"},{"path":"https://easystats.github.io/report/reference/report_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report a descriptive table — report_table","text":"x R object want report (see list supported objects ). ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report a descriptive table — report_table","text":"object class report_table().","code":""},{"path":"https://easystats.github.io/report/reference/report_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report a descriptive table — report_table","text":"","code":"# \\donttest{ # Miscellaneous r <- report_table(sessionInfo()) r #> Package     |    Version |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ReferenceayesFactor | 0.9.12.4.7 |orey R, Rouder J (2024). _BayesFactor: Computation of Bayes Factors for Common Designs_. R package version 0.9.12-4.7, <https://richarddmorey.github.io/BayesFactor/>. #> Matrix      |      1.7.4 |ates D, Maechler M, Jagan M (2025). _Matrix: Sparse and Dense Matrix Classes and Methods_. R package version 1.7-4, <https://Matrix.R-forge.R-project.org>. #> R           |      4.5.1 |ore Team (2025). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>. #> Rcpp        |      1.1.0 | Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, Bates D, Chambers J (2025). _Rcpp: Seamless R and C++ Integration_. R package version 1.1.0, <https://www.rcpp.org>. Eddelbuettel D, François R (2011). “Rcpp: Seamless R and C++ Integration.” _Journal of Statistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08 <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. Eddelbuettel D, Balamuta J (2018). “Extending R with C++: A Brief Introduction to Rcpp.” _The American Statistician_, *72*(1), 28-36. doi:10.1080/00031305.2017.1375990 <https://doi.org/10.1080/00031305.2017.1375990>. #> bayestestR  |   0.17.0.1 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Makowski D, Ben-Shachar M, Lüdecke D (2019). “bayestestR: Describing Effects and their Uncertainty, Existence and Significance within the Bayesian Framework.” _Journal of Open Source Software_, *4*(40), 1541. doi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>, <https://joss.theoj.org/papers/10.21105/joss.01541>. #> brms        |     2.23.0 |                                                                                                                                                                                                                  Bürkner P (2017). “brms: An R Package for Bayesian Multilevel Models Using Stan.” _Journal of Statistical Software_, *80*(1), 1-28. doi:10.18637/jss.v080.i01 <https://doi.org/10.18637/jss.v080.i01>. Bürkner P (2018). “Advanced Bayesian Multilevel Modeling with the R Package brms.” _The R Journal_, *10*(1), 395-411. doi:10.32614/RJ-2018-017 <https://doi.org/10.32614/RJ-2018-017>. Bürkner P (2021). “Bayesian Item Response Modeling in R with brms and Stan.” _Journal of Statistical Software_, *100*(5), 1-54. doi:10.18637/jss.v100.i05 <https://doi.org/10.18637/jss.v100.i05>. #> coda        |   0.19.4.1 |lummer M, Best N, Cowles K, Vines K (2006). “CODA: Convergence Diagnosis and Output Analysis for MCMC.” _R News_, *6*(1), 7-11. <https://journal.r-project.org/archive/>. #> dplyr       |      1.1.4 |ickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://dplyr.tidyverse.org>. #> lavaan      |     0.6.19 |osseel Y (2012). “lavaan: An R Package for Structural Equation Modeling.” _Journal of Statistical Software_, *48*(2), 1-36. doi:10.18637/jss.v048.i02 <https://doi.org/10.18637/jss.v048.i02>. #> lme4        |     1.1.37 |ates D, Mächler M, Bolker B, Walker S (2015). “Fitting Linear Mixed-Effects Models Using lme4.” _Journal of Statistical Software_, *67*(1), 1-48. doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #> modelbased  |     0.13.0 |                                                                                                                                                                                                                                                                                                                                                                                                                 Makowski D, Ben-Shachar M, Wiernik B, Patil I, Thériault R, Lüdecke D (2025). “modelbased: An R package to make the most out of your statistical models through marginal means, marginal effects, and model predictions.” _Journal of Open Source Software_, *10*(109), 7969. doi:10.21105/joss.07969 <https://doi.org/10.21105/joss.07969>, <https://joss.theoj.org/papers/10.21105/joss.07969>. #> performance |     0.15.1 |üdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). “performance: An R Package for Assessment, Comparison and Testing of Statistical Models.” _Journal of Open Source Software_, *6*(60), 3139. doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>. #> report      |    0.6.1.5 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption.” _CRAN_. doi:10.32614/CRAN.package.report <https://doi.org/10.32614/CRAN.package.report>, <https://easystats.github.io/report/>. #> rstanarm    |     2.32.1 |                                                                                                                                                                                                                                                                                                                                                                                                     Goodrich B, Gabry J, Ali I, Brilleman S (2024). “rstanarm: Bayesian applied regression modeling via Stan.” R package version 2.32.1, <https://mc-stan.org/rstanarm/>. Brilleman S, Crowther M, Moreno-Betancur M, Buros Novik J, Wolfe R (2018). “Joint longitudinal and time-to-event models via Stan.” StanCon 2018. 10-12 Jan 2018. Pacific Grove, CA, USA., <https://github.com/stan-dev/stancon_talks/>. summary(r) #> Package     |    Version #> ------------------------ #> BayesFactor | 0.9.12.4.7 #> Matrix      |      1.7.4 #> R           |      4.5.1 #> Rcpp        |      1.1.0 #> bayestestR  |   0.17.0.1 #> brms        |     2.23.0 #> coda        |   0.19.4.1 #> dplyr       |      1.1.4 #> lavaan      |     0.6.19 #> lme4        |     1.1.37 #> modelbased  |     0.13.0 #> performance |     0.15.1 #> report      |    0.6.1.5 #> rstanarm    |     2.32.1  # Data report_table(iris$Sepal.Length) #> Mean |   SD | Median |  MAD |  Min |  Max | n_Obs | Skewness | Kurtosis | percentage_Missing #> -------------------------------------------------------------------------------------------- #> 5.84 | 0.83 |   5.80 | 1.04 | 4.30 | 7.90 |   150 |     0.31 |    -0.55 |                  0 report_table(as.character(round(iris$Sepal.Length, 1))) #> n_Entries | n_Obs | n_Missing | percentage_Missing #> -------------------------------------------------- #> 35        |   150 |         0 |                  0 report_table(iris$Species) #> Level      | n_Obs | percentage_Obs #> ----------------------------------- #> setosa     |    50 |          33.33 #> versicolor |    50 |          33.33 #> virginica  |    50 |          33.33 report_table(iris) #> Variable     |      Level | n_Obs | percentage_Obs | Mean |   SD | Median #> ------------------------------------------------------------------------- #> Sepal.Length |            |   150 |                | 5.84 | 0.83 |   5.80 #> Sepal.Width  |            |   150 |                | 3.06 | 0.44 |   3.00 #> Petal.Length |            |   150 |                | 3.76 | 1.77 |   4.35 #> Petal.Width  |            |   150 |                | 1.20 | 0.76 |   1.30 #> Species      |     setosa |    50 |          33.33 |      |      |        #> Species      | versicolor |    50 |          33.33 |      |      |        #> Species      |  virginica |    50 |          33.33 |      |      |        #>  #> Variable     |  MAD |  Min |  Max | Skewness | Kurtosis | percentage_Missing #> ---------------------------------------------------------------------------- #> Sepal.Length | 1.04 | 4.30 | 7.90 |     0.31 |    -0.55 |                  0 #> Sepal.Width  | 0.44 | 2.00 | 4.40 |     0.32 |     0.23 |                  0 #> Petal.Length | 1.85 | 1.00 | 6.90 |    -0.27 |    -1.40 |                  0 #> Petal.Width  | 1.04 | 0.10 | 2.50 |    -0.10 |    -1.34 |                  0 #> Species      |      |      |      |          |          |                    #> Species      |      |      |      |          |          |                    #> Species      |      |      |      |          |          |                     # h-tests report_table(t.test(mtcars$mpg ~ mtcars$am)) #> Welch Two Sample t-test #>  #> Parameter  |     Group | Mean_Group1 | Mean_Group2 | Difference #> --------------------------------------------------------------- #> mtcars$mpg | mtcars$am |       17.15 |       24.39 |      -7.24 #>  #> Parameter  |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI #> ---------------------------------------------------------------------------- #> mtcars$mpg | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53] #>  #> Alternative hypothesis: two.sided  # ANOVAs report_table(aov(Sepal.Length ~ Species, data = iris)) #> Parameter | Sum_Squares |  df | Mean_Square |      F |      p | Eta2 |  Eta2 95% CI #> ----------------------------------------------------------------------------------- #> Species   |       63.21 |   2 |       31.61 | 119.26 | < .001 | 0.62 | [0.54, 1.00] #> Residuals |       38.96 | 147 |        0.27 |        |        |      |               # GLMs report_table(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) #> Parameter                           | Coefficient |         95% CI | t(144) #> --------------------------------------------------------------------------- #> (Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 #> Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 #> Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 #> Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 #> Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 #> Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 #>                                     |             |                |        #> AIC                                 |             |                |        #> AICc                                |             |                |        #> BIC                                 |             |                |        #> R2                                  |             |                |        #> R2 (adj.)                           |             |                |        #> Sigma                               |             |                |        #>  #> Parameter                           |      p | Std. Coef. | Std. Coef. 95% CI |    Fit #> -------------------------------------------------------------------------------------- #> (Intercept)                         | < .001 |       0.49 |    [-1.03,  2.01] |        #> Petal Length                        | 0.052  |       1.16 |    [-0.01,  2.32] |        #> Species [versicolor]                | 0.003  |      -0.88 |    [-2.41,  0.65] |        #> Species [virginica]                 | < .001 |      -1.75 |    [-3.32, -0.18] |        #> Petal Length × Species [versicolor] | 0.334  |       0.61 |    [-0.63,  1.85] |        #> Petal Length × Species [virginica]  | 0.120  |       0.97 |    [-0.26,  2.19] |        #>                                     |        |            |                   |        #> AIC                                 |        |            |                   | 106.77 #> AICc                                |        |            |                   | 107.56 #> BIC                                 |        |            |                   | 127.84 #> R2                                  |        |            |                   |   0.84 #> R2 (adj.)                           |        |            |                   |   0.83 #> Sigma                               |        |            |                   |   0.34 report_table(glm(vs ~ disp, data = mtcars, family = \"binomial\")) #> Parameter   | Coefficient |         95% CI |     z |     p | Std. Coef. #> ----------------------------------------------------------------------- #> (Intercept) |        4.14 | [ 1.81,  7.44] |  2.98 | 0.003 |      -0.85 #> disp        |       -0.02 | [-0.04, -0.01] | -3.03 | 0.002 |      -2.68 #>             |             |                |       |       |            #> AIC         |             |                |       |       |            #> AICc        |             |                |       |       |            #> BIC         |             |                |       |       |            #> Tjur's R2   |             |                |       |       |            #> Sigma       |             |                |       |       |            #> Log_loss    |             |                |       |       |            #>  #> Parameter   | Std. Coef. 95% CI |   Fit #> --------------------------------------- #> (Intercept) |    [-2.42,  0.27] |       #> disp        |    [-4.90, -1.27] |       #>             |                   |       #> AIC         |                   | 26.70 #> AICc        |                   | 27.11 #> BIC         |                   | 29.63 #> Tjur's R2   |                   |  0.53 #> Sigma       |                   |  1.00 #> Log_loss    |                   |  0.35 # }  # \\donttest{ # Mixed models library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) report_table(model) #> Parameter        | Coefficient |       95% CI | t(146) |      p | Effects #> ------------------------------------------------------------------------- #> (Intercept)      |        2.50 | [1.19, 3.82] |   3.75 | < .001 |   fixed #> Petal Length     |        0.89 | [0.76, 1.01] |  13.93 | < .001 |   fixed #>                  |        1.08 |              |        |        |  random #>                  |        0.34 |              |        |        |  random #>                  |             |              |        |        |         #> AIC              |             |              |        |        |         #> AICc             |             |              |        |        |         #> BIC              |             |              |        |        |         #> R2 (conditional) |             |              |        |        |         #> R2 (marginal)    |             |              |        |        |         #> Sigma            |             |              |        |        |         #>  #> Parameter        |    Group | Std. Coef. | Std. Coef. 95% CI |    Fit #> --------------------------------------------------------------------- #> (Intercept)      |          |  -1.46e-13 |     [-1.49, 1.49] |        #> Petal Length     |          |       1.89 |     [ 1.63, 2.16] |        #>                  |  Species |            |                   |        #>                  | Residual |            |                   |        #>                  |          |            |                   |        #> AIC              |          |            |                   | 127.79 #> AICc             |          |            |                   | 128.07 #> BIC              |          |            |                   | 139.84 #> R2 (conditional) |          |            |                   |   0.97 #> R2 (marginal)    |          |            |                   |   0.66 #> Sigma            |          |            |                   |   0.34 # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(Sepal.Length ~ Species, data = iris, refresh = 0, iter = 600)) report_table(model, effectsize_method = \"basic\") #> Parameter         | Median |       95% CI |   pd |  Rhat |  ESS #> --------------------------------------------------------------- #> (Intercept)       |   5.01 | [4.86, 5.15] | 100% | 0.998 |  980 #> Speciesversicolor |   0.93 | [0.72, 1.13] | 100% | 0.999 |  911 #> Speciesvirginica  |   1.58 | [1.37, 1.78] | 100% | 0.998 | 1119 #>                   |        |              |      |       |      #> ELPD              |        |              |      |       |      #> LOOIC             |        |              |      |       |      #> WAIC              |        |              |      |       |      #> R2                |        |              |      |       |      #> R2 (adj.)         |        |              |      |       |      #> Sigma             |        |              |      |       |      #>  #> Parameter         |                 Prior | Std. Median | Std_Median 95% CI |     Fit #> ------------------------------------------------------------------------------------- #> (Intercept)       | Normal (5.84 +- 2.07) |        0.00 |      [0.00, 0.00] |         #> Speciesversicolor | Normal (0.00 +- 4.38) |        0.53 |      [0.41, 0.65] |         #> Speciesvirginica  | Normal (0.00 +- 4.38) |        0.90 |      [0.78, 1.02] |         #>                   |                       |             |                   |         #> ELPD              |                       |             |                   | -115.96 #> LOOIC             |                       |             |                   |  231.92 #> WAIC              |                       |             |                   |  231.88 #> R2                |                       |             |                   |    0.62 #> R2 (adj.)         |                       |             |                   |    0.61 #> Sigma             |                       |             |                   |    0.52 # } # \\donttest{ # Structural Equation Models (SEM) library(lavaan) structure <- \"ind60 =~ x1 + x2 + x3               dem60 =~ y1 + y2 + y3               dem60 ~ ind60\" model <- lavaan::sem(structure, data = PoliticalDemocracy) suppressWarnings(report_table(model)) #> Parameter     | Coefficient |       95% CI |     z |      p |  Component |     Fit #> ---------------------------------------------------------------------------------- #> ind60 =~ x1   |        1.00 | [1.00, 1.00] |       | < .001 |    Loading |         #> ind60 =~ x2   |        2.18 | [1.91, 2.45] | 15.59 | < .001 |    Loading |         #> ind60 =~ x3   |        1.82 | [1.52, 2.12] | 11.96 | < .001 |    Loading |         #> dem60 =~ y1   |        1.00 | [1.00, 1.00] |       | < .001 |    Loading |         #> dem60 =~ y2   |        1.04 | [0.66, 1.43] |  5.33 | < .001 |    Loading |         #> dem60 =~ y3   |        0.98 | [0.65, 1.30] |  5.89 | < .001 |    Loading |         #> dem60 ~ ind60 |        1.37 | [0.53, 2.21] |  3.20 | 0.001  | Regression |         #>               |             |              |       |        |            |         #> Chi2          |             |              |       |        |            |    7.98 #> Chi2_df       |             |              |       |        |            |    8.00 #> p_Chi2        |             |              |       |        |            |    0.44 #> p_Baseline    |             |              |       |        |            |    0.00 #> GFI           |             |              |       |        |            |    0.97 #> AGFI          |             |              |       |        |            |    0.91 #> NFI           |             |              |       |        |            |    0.97 #> NNFI          |             |              |       |        |            |    1.00 #> CFI           |             |              |       |        |            |    1.00 #> RMSEA         |             |              |       |        |            |    0.00 #> RMSEA_CI_low  |             |              |       |        |            |    0.00 #> RMSEA_CI_high |             |              |       |        |            |    0.14 #> p_RMSEA       |             |              |       |        |            |    0.57 #> RMR           |             |              |       |        |            |    0.10 #> SRMR          |             |              |       |        |            |    0.03 #> RFI           |             |              |       |        |            |    0.95 #> PNFI          |             |              |       |        |            |    0.52 #> IFI           |             |              |       |        |            |    1.00 #> RNI           |             |              |       |        |            |    1.00 #> Loglikelihood |             |              |       |        |            | -778.27 #> AIC           |             |              |       |        |            | 1582.54 #> BIC           |             |              |       |        |            | 1612.67 #> BIC (adj.)    |             |              |       |        |            | 1571.69 # }"},{"path":"https://easystats.github.io/report/reference/report_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Report a textual description of an object — report_text","title":"Report a textual description of an object — report_text","text":"Creates text containing description parameters R objects (see list supported objects report()).","code":""},{"path":"https://easystats.github.io/report/reference/report_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report a textual description of an object — report_text","text":"","code":"report_text(x, table = NULL, ...)"},{"path":"https://easystats.github.io/report/reference/report_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report a textual description of an object — report_text","text":"x R object want report (see list supported objects ). table table obtained via report_table(). provided, run . ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/report/reference/report_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report a textual description of an object — report_text","text":"object class report_text().","code":""},{"path":"https://easystats.github.io/report/reference/report_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report a textual description of an object — report_text","text":"","code":"library(report)  # Miscellaneous r <- report_text(sessionInfo()) r #> Analyses were conducted using the R Statistical language (version 4.5.1; R Core #> Team, 2025) on Ubuntu 24.04.3 LTS, using the packages Matrix (version 1.7.4; #> Bates D et al., 2025), lme4 (version 1.1.37; Bates D et al., 2015), brms #> (version 2.23.0; Bürkner P, 2017), Rcpp (version 1.1.0; Eddelbuettel D et al., #> 2025), rstanarm (version 2.32.1; Goodrich B et al., 2024), performance (version #> 0.15.1; Lüdecke D et al., 2021), bayestestR (version 0.17.0.1; Makowski D et #> al., 2019), modelbased (version 0.13.0; Makowski D et al., 2025), report #> (version 0.6.1.5; Makowski D et al., 2023), BayesFactor (version 0.9.12.4.7; #> Morey R, Rouder J, 2024), coda (version 0.19.4.1; Plummer M et al., 2006), #> lavaan (version 0.6.19; Rosseel Y, 2012) and dplyr (version 1.1.4; Wickham H et #> al., 2023). #>  #> References #> ---------- #>   - Bates D, Maechler M, Jagan M (2025). _Matrix: Sparse and Dense Matrix Classes #> and Methods_. R package version 1.7-4, <https://Matrix.R-forge.R-project.org>. #>   - Bates D, Mächler M, Bolker B, Walker S (2015). “Fitting Linear Mixed-Effects #> Models Using lme4.” _Journal of Statistical Software_, *67*(1), 1-48. #> doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>. #>   - Bürkner P (2017). “brms: An R Package for Bayesian Multilevel Models Using #> Stan.” _Journal of Statistical Software_, *80*(1), 1-28. #> doi:10.18637/jss.v080.i01 <https://doi.org/10.18637/jss.v080.i01>. Bürkner P #> (2018). “Advanced Bayesian Multilevel Modeling with the R Package brms.” _The R #> Journal_, *10*(1), 395-411. doi:10.32614/RJ-2018-017 #> <https://doi.org/10.32614/RJ-2018-017>. Bürkner P (2021). “Bayesian Item #> Response Modeling in R with brms and Stan.” _Journal of Statistical Software_, #> *100*(5), 1-54. doi:10.18637/jss.v100.i05 #> <https://doi.org/10.18637/jss.v100.i05>. #>   - Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, #> Bates D, Chambers J (2025). _Rcpp: Seamless R and C++ Integration_. R package #> version 1.1.0, <https://www.rcpp.org>. Eddelbuettel D, François R (2011). #> “Rcpp: Seamless R and C++ Integration.” _Journal of Statistical Software_, #> *40*(8), 1-18. doi:10.18637/jss.v040.i08 #> <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and #> C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 #> <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. #> Eddelbuettel D, Balamuta J (2018). “Extending R with C++: A Brief Introduction #> to Rcpp.” _The American Statistician_, *72*(1), 28-36. #> doi:10.1080/00031305.2017.1375990 #> <https://doi.org/10.1080/00031305.2017.1375990>. #>   - Goodrich B, Gabry J, Ali I, Brilleman S (2024). “rstanarm: Bayesian applied #> regression modeling via Stan.” R package version 2.32.1, #> <https://mc-stan.org/rstanarm/>. Brilleman S, Crowther M, Moreno-Betancur M, #> Buros Novik J, Wolfe R (2018). “Joint longitudinal and time-to-event models via #> Stan.” StanCon 2018. 10-12 Jan 2018. Pacific Grove, CA, USA., #> <https://github.com/stan-dev/stancon_talks/>. #>   - Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). #> “performance: An R Package for Assessment, Comparison and Testing of #> Statistical Models.” _Journal of Open Source Software_, *6*(60), 3139. #> doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>. #>   - Makowski D, Ben-Shachar M, Lüdecke D (2019). “bayestestR: Describing Effects #> and their Uncertainty, Existence and Significance within the Bayesian #> Framework.” _Journal of Open Source Software_, *4*(40), 1541. #> doi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>, #> <https://joss.theoj.org/papers/10.21105/joss.01541>. #>   - Makowski D, Ben-Shachar M, Wiernik B, Patil I, Thériault R, Lüdecke D (2025). #> “modelbased: An R package to make the most out of your statistical models #> through marginal means, marginal effects, and model predictions.” _Journal of #> Open Source Software_, *10*(109), 7969. doi:10.21105/joss.07969 #> <https://doi.org/10.21105/joss.07969>, #> <https://joss.theoj.org/papers/10.21105/joss.07969>. #>   - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). #> “Automated Results Reporting as a Practical Tool to Improve Reproducibility and #> Methodological Best Practices Adoption.” _CRAN_. #> doi:10.32614/CRAN.package.report #> <https://doi.org/10.32614/CRAN.package.report>, #> <https://easystats.github.io/report/>. #>   - Morey R, Rouder J (2024). _BayesFactor: Computation of Bayes Factors for #> Common Designs_. R package version 0.9.12-4.7, #> <https://richarddmorey.github.io/BayesFactor/>. #>   - Plummer M, Best N, Cowles K, Vines K (2006). “CODA: Convergence Diagnosis and #> Output Analysis for MCMC.” _R News_, *6*(1), 7-11. #> <https://journal.r-project.org/archive/>. #>   - R Core Team (2025). _R: A Language and Environment for Statistical #> Computing_. R Foundation for Statistical Computing, Vienna, Austria. #> <https://www.R-project.org/>. #>   - Rosseel Y (2012). “lavaan: An R Package for Structural Equation Modeling.” #> _Journal of Statistical Software_, *48*(2), 1-36. doi:10.18637/jss.v048.i02 #> <https://doi.org/10.18637/jss.v048.i02>. #>   - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar #> of Data Manipulation_. R package version 1.1.4, <https://dplyr.tidyverse.org>. summary(r) #> The analysis was done using the R Statistical language (v4.5.1; R Core Team, #> 2025) on Ubuntu 24.04.3 LTS, using the packages Matrix (v1.7.4), lme4 #> (v1.1.37), brms (v2.23.0), Rcpp (v1.1.0), rstanarm (v2.32.1), performance #> (v0.15.1), bayestestR (v0.17.0.1), modelbased (v0.13.0), report (v0.6.1.5), #> BayesFactor (v0.9.12.4.7), coda (v0.19.4.1), lavaan (v0.6.19) and dplyr #> (v1.1.4).  # Data report_text(iris$Sepal.Length) #> iris$Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, #> range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing report_text(as.character(round(iris$Sepal.Length, 1))) #> as.character(round(iris$Sepal.Length, 1)): 35 entries, such as 5 (6.67%); 5.1 #> (6.00%); 6.3 (6.00%) and 32 others (0 missing) report_text(iris$Species) #> iris$Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50, #> 33.33%) and virginica (n = 50, 33.33%) report_text(iris) #> The data contains 150 observations of the following 5 variables: #>  #>   - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04, #> range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing #>   - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44, #> range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing #>   - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85, #> range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing #>   - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04, #> range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing #>   - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50, #> 33.33%) and virginica (n = 50, 33.33%)  # h-tests report_text(t.test(iris$Sepal.Width, iris$Sepal.Length)) #> Effect sizes were labelled following Cohen's (1988) recommendations. #>  #> The Welch Two Sample t-test testing the difference between iris$Sepal.Width and #> iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect #> is negative, statistically significant, and large (difference = -2.79, 95% CI #> [-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66, #> -3.76])  # ANOVA r <- report_text(aov(Sepal.Length ~ Species, data = iris)) r #> The ANOVA (formula: Sepal.Length ~ Species) suggests that: #>  #>   - The main effect of Species is statistically significant and large (F(2, 147) #> = 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00]) #>  #> Effect sizes were labelled following Field's (2013) recommendations. summary(r) #> The ANOVA suggests that: #>  #>   - The main effect of Species is statistically significant and large (F(2, 147) #> = 119.26, p < .001, Eta2 = 0.62)  # GLMs r <- report_text(lm(Sepal.Length ~ Petal.Length * Species, data = iris)) r #> We fitted a linear model (estimated using OLS) to predict Sepal.Length with #> Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species). The #> model explains a statistically significant and substantial proportion of #> variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's #> intercept, corresponding to Petal.Length = 0 and Species = setosa, is at 4.21 #> (95% CI [3.41, 5.02], t(144) = 10.34, p < .001). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta = #> 1.16, 95% CI [-0.01, 2.32]) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta = #> -0.88, 95% CI [-2.41, 0.65]) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta = #> -1.75, 95% CI [-3.32, -0.18]) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85]) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald t-distribution approximation. summary(r) #> We fitted a linear model to predict Sepal.Length with Petal.Length and Species. #> The model's explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The #> model's intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model: #>  #>   - The effect of Petal Length is statistically non-significant and positive #> (beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta = #> 1.16) #>   - The effect of Species [versicolor] is statistically significant and negative #> (beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta = #> -0.88) #>   - The effect of Species [virginica] is statistically significant and negative #> (beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta = #> -1.75) #>   - The effect of Petal Length × Species [versicolor] is statistically #> non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97, #> p = 0.334, Std. beta = 0.61) #>   - The effect of Petal Length × Species [virginica] is statistically #> non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56, #> p = 0.120, Std. beta = 0.97)  # \\donttest{ library(lme4) model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) r <- report_text(model) r #> We fitted a linear mixed model (estimated using REML and nloptwrap optimizer) #> to predict Sepal.Length with Petal.Length (formula: Sepal.Length ~ #> Petal.Length). The model included Species as random effect (formula: ~1 | #> Species). The model's total explanatory power is substantial (conditional R2 = #> 0.97) and the part related to the fixed effects alone (marginal R2) is of 0.66. #> The model's intercept, corresponding to Petal.Length = 0, is at 2.50 (95% CI #> [1.19, 3.82], t(146) = 3.75, p < .001). Within this model: #>  #>   - The effect of Petal Length is statistically significant and positive (beta = #> 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001; Std. beta = 1.89, 95% CI #> [1.63, 2.16]) #>  #> Standardized parameters were obtained by fitting the model on a standardized #> version of the dataset. 95% Confidence Intervals (CIs) and p-values were #> computed using a Wald t-distribution approximation. summary(r) #> We fitted a linear mixed model to predict Sepal.Length with Petal.Length. The #> model included Species as random effect. The model's total explanatory power is #> substantial (conditional R2 = 0.97) and the part related to the fixed effects #> alone (marginal R2) is of 0.66. The model's intercept is at 2.50 (95% CI [1.19, #> 3.82]). Within this model: #>  #>   - The effect of Petal Length is statistically significant and positive (beta = #> 0.89, 95% CI [0.76, 1.01], t(146) = 13.93, p < .001, Std. beta = 1.89) # } # \\donttest{ # Bayesian models library(rstanarm) model <- suppressWarnings(stan_glm(mpg ~ cyl + wt, data = mtcars, refresh = 0, iter = 600)) r <- report_text(model) r #> We fitted a Bayesian linear model (estimated using MCMC sampling with 4 chains #> of 600 iterations and a warmup of 300) to predict mpg with cyl and wt (formula: #> mpg ~ cyl + wt). Priors over parameters were all set as normal (mean = 0.00, SD #> = 8.44; mean = 0.00, SD = 15.40) distributions. The model's explanatory power #> is substantial (R2 = 0.81, 95% CI [0.71, 0.89], adj. R2 = 0.80). The model's #> intercept, corresponding to cyl = 0 and wt = 0, is at 39.70 (95% CI [36.11, #> 43.29]). Within this model: #>  #>   - The effect of cyl (Median = -1.49, 95% CI [-2.28, -0.67]) has a 100.00% #> probability of being negative (< 0), 99.83% of being significant (< -0.30), and #> 21.33% of being large (< -1.81). The estimation successfully converged (Rhat = #> 1.002) but the indices are unreliable (ESS = 743) #>   - The effect of wt (Median = -3.22, 95% CI [-4.67, -1.80]) has a 100.00% #> probability of being negative (< 0), 100.00% of being significant (< -0.30), #> and 97.33% of being large (< -1.81). The estimation successfully converged #> (Rhat = 0.999) but the indices are unreliable (ESS = 668) #>  #> Following the Sequential Effect eXistence and sIgnificance Testing (SEXIT) #> framework, we report the median of the posterior distribution and its 95% CI #> (Highest Density Interval), along the probability of direction (pd), the #> probability of significance and the probability of being large. The thresholds #> beyond which the effect is considered as significant (i.e., non-negligible) and #> large are |0.30| and |1.81| (corresponding respectively to 0.05 and 0.30 of the #> outcome's SD). Convergence and stability of the Bayesian sampling has been #> assessed using R-hat, which should be below 1.01 (Vehtari et al., 2019), and #> Effective Sample Size (ESS), which should be greater than 1000 (Burkner, 2017). summary(r) #> We fitted a Bayesian linear model to predict mpg with cyl and wt. Priors over #> parameters were all set as normal (mean = 0.00, SD = 8.44; mean = 0.00, SD = #> 15.40) distributions. The model's explanatory power is substantial (R2 = 0.81, #> adj. R2 = 0.80). The model's intercept is at 39.70 (95% CI [36.11, 43.29]). #> Within this model: #>  #>   - The effect of cyl (Median = -1.49, 95% CI [-2.28, -0.67]) has 100.00%, 99.83% #> and 21.33% probability of being negative (< 0), significant (< -0.30) and large #> (< -1.81). The estimation successfully converged (Rhat = 1.002) but the indices #> are unreliable (ESS = 743) #>   - The effect of wt (Median = -3.22, 95% CI [-4.67, -1.80]) has 100.00%, 100.00% #> and 97.33% probability of being negative (< 0), significant (< -0.30) and large #> (< -1.81). The estimation successfully converged (Rhat = 0.999) but the indices #> are unreliable (ESS = 668) # }"},{"path":"https://easystats.github.io/report/news/index.html","id":"report-06x","dir":"Changelog","previous_headings":"","what":"report 0.6.x","title":"report 0.6.x","text":"Bug fixes report.brmsfit(): significantly improved performance using faster method = \"basic\" instead method = \"refit\" effect size calculation, reducing execution time hours minutes large Bayesian models (#568) report.brmsfit(): fix issue report text printed multiple times different parameters different priors (#543) Fixed duplicated text output report() glmmTMB objects addressing regex pattern redundant CI information concatenation report_info.lm() (#481) Fixed issue missing effect size Intercept term type 3 anova tables (#451) Minor changes * Fixed lot linting issues across package.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-062","dir":"Changelog","previous_headings":"","what":"report 0.6.2","title":"report 0.6.2","text":"Bug fixes Fixed lot linting issues across package. Fixed duplicated text output report() glmmTMB objects addressing regex pattern redundant CI information concatenation report_info.lm() (#481) Fixed issue missing effect size Intercept term type 3 anova tables (#451)","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-061","dir":"Changelog","previous_headings":"","what":"report 0.6.1","title":"report 0.6.1","text":"CRAN release: 2025-02-07 Bug fixes Fixed CRAN check failures.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-060","dir":"Changelog","previous_headings":"","what":"report 0.6.0","title":"report 0.6.0","text":"CRAN release: 2025-01-26 Minor changes * report_htest_chi2 stops supporting rule “chen2010” (following change effectsize).","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-059","dir":"Changelog","previous_headings":"","what":"report 0.5.9","title":"report 0.5.9","text":"CRAN release: 2024-07-10 Breaking Arguments named group, group_by deprecated future releases. easystats packages. Please use instead. affects following functions report: report_participants() report_sample() Minor changes report now supports reporting Bayesian model comparison variables class brms::loo_compare. report now supports reporting BayesFactor objects variables class BFBayesFactor. report_sample() now suggests valid column names misspelled columns select, , weights exclude arguments. Bug fixes Fixed issues incorrectly passing additional arguments downstream functions report() htest objects.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-058","dir":"Changelog","previous_headings":"","what":"report 0.5.8","title":"report 0.5.8","text":"CRAN release: 2023-12-07 New features report_s() report interpretation S- p-values easy--understand language. Major Changes release changes licensing model report MIT license. Minor changes report now supports variables class htest Chi2, Friedman test, Fisher’s exact test, Kruskal-Wallis. report now supports variables class Date, treating like factors. report now supports objects class estimate_contrasts, easystats’ modelbased::estimate_contrasts, outputting either results text form, table. report_sample now reports weighted number observations data grouped weighted. gains ci, ci_method ci_adjust arguments, compute confidence intervals proportions factor levels. Currently, two different methods (Wald Wilson) available. now works grouped data frame, using defined groups values group_by argument. can now summarize data based one grouping variable (.e. group_by allowed longer 1). print method report_sample gains layout argument, print tables either \"horizontal\" \"vertical\" layout. Bug fixes Fixed issue report_participants, print \"gender\" category grouped output argument written lower-case. Gender now also supports alternate spellings, age converts respective column numeric. Fixed printing issue intercept-models.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-057","dir":"Changelog","previous_headings":"","what":"report 0.5.7","title":"report 0.5.7","text":"CRAN release: 2023-03-22 Hotfix CRAN reverse dependency compatibility.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-056","dir":"Changelog","previous_headings":"","what":"report 0.5.6","title":"report 0.5.6","text":"CRAN release: 2023-02-05 Breaking Changes minimum needed R version bumped 3.6. Minor changes Gains n argument also optionally include sample size. Fixes bug whereas total parameter respected. t.test (htest) objects, now support type (one c(\"d\", \"g\")) rules (one c\"cohen1988\", \"sawilowsky2009\", \"gignac2016\")) arguments.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-055","dir":"Changelog","previous_headings":"","what":"report 0.5.5","title":"report 0.5.5","text":"CRAN release: 2022-08-22 BREAKING CHANGES minimum needed R version now bumped 3.5. Minor changes report_participants improvement (@rempsyc, #260) Now correctly reports NA values % missing Adds support country race demographic information BUG FIXES Fixed bug truncated output confidence interval distribution report().","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-051","dir":"Changelog","previous_headings":"","what":"report 0.5.1","title":"report 0.5.1","text":"CRAN release: 2022-02-22 Hotfix release fix failing tests unarchive package CRAN.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-050","dir":"Changelog","previous_headings":"","what":"report 0.5.0","title":"report 0.5.0","text":"CRAN release: 2022-01-30 BREAKING CHANGES following functions removed report now live {datawizard} package: Data wrangling helpers: data_addprefix() data_addsuffix() data_findcols() data_remove() data_rename() data_reorder() Text formatting helpers: format_text() text_fullstop() text_lastchar() text_concatenate() text_paste() text_remove() text_wrap() MAJOR CHANGES Reporting participant’s sex/gender information improved (thanks @drfeinberg, #212) Separated sex gender different searches/columns Sex reported % female, % male, % , % missing cases missing Gender reported % Women, % Men, % Non-Binary, % missing cases missing Age reports % missing cases missing.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-040","dir":"Changelog","previous_headings":"","what":"report 0.4.0","title":"report 0.4.0","text":"CRAN release: 2021-09-30 Maintenance release.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-035","dir":"Changelog","previous_headings":"","what":"report 0.3.5","title":"report 0.3.5","text":"CRAN release: 2021-06-10 Fixed issue possibly wrong numbers total column report_sample(), grouping variable contained missing values.","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-031","dir":"Changelog","previous_headings":"","what":"report 0.3.1","title":"report 0.3.1","text":"Added support models class ivreg (ivreg).","code":""},{"path":"https://easystats.github.io/report/news/index.html","id":"report-030","dir":"Changelog","previous_headings":"","what":"report 0.3.0","title":"report 0.3.0","text":"CRAN release: 2021-04-15 Initial release package.","code":""}]
