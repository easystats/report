
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "report"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('report')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cite_easystats")
> ### * cite_easystats
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cite_easystats
> ### Title: Cite the easystats ecosystem
> ### Aliases: cite_easystats summary.cite_easystats print.cite_easystats
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("format_citation")
> ### * format_citation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_citation
> ### Title: Citation formatting
> ### Aliases: format_citation cite_citation clean_citation
> 
> ### ** Examples
> 
> library(report)
> 
> citation <- "Makowski, D., Ben-Shachar, M. S., Patil, I., & Ludecke, D. (2020).
+ Methods and Algorithms for Correlation Analysis in R. Journal of Open Source
+ Software, 5(51), 2306."
> 
> format_citation(citation, authorsdate = TRUE)
[1] "Makowski, Ben-Shachar, Patil, & Ludecke (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE)
[1] "Makowski et al. (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE, intext = TRUE)
[1] "Makowski et al., 2020"
> 
> cite_citation(citation)
[1] "(Makowski et al., 2020)"
> clean_citation(citation())
[1] "R Core Team (2024). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>."
> 
> 
> 
> cleanEx()
> nameEx("format_formula")
> ### * format_formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_algorithm
> ### Title: Convenient formatting of text components
> ### Aliases: format_algorithm format_formula format_model
> 
> ### ** Examples
> 
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_algorithm(model)
[1] "OLS"
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Mixed models
+ library(lme4)
+ model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+ format_algorithm(model)
+ ## Don't show: 
+ }) # examplesIf
> library(lme4)
Loading required package: Matrix
> model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
> format_algorithm(model)
[1] "REML and nloptwrap optimizer"
> ## End(Don't show)
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_formula(model)
[1] "formula: Sepal.Length ~ Species"
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Mixed models
+ library(lme4)
+ model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+ format_formula(model)
+ format_formula(model, "random")
+ ## Don't show: 
+ }) # examplesIf
> library(lme4)
> model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
> format_formula(model)
[1] "formula: Sepal.Length ~ Sepal.Width"
> format_formula(model, "random")
[1] "formula: ~1 | Species"
> ## End(Don't show)
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_model(model)
[1] "linear model"
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # Mixed models
+ library(lme4)
+ model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+ format_model(model)
+ ## Don't show: 
+ }) # examplesIf
> library(lme4)
> model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
> format_model(model)
[1] "linear mixed model"
> ## End(Don't show)
> 
> 
> 
> cleanEx()

detaching ‘package:lme4’, ‘package:Matrix’

> nameEx("report.BFBayesFactor")
> ### * report.BFBayesFactor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.BFBayesFactor
> ### Title: Reporting 'BFBayesFactor' objects from the 'BayesFactor' package
> ### Aliases: report.BFBayesFactor report_statistics.BFBayesFactor
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("BayesFactor", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report")
> ### * report
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report
> ### Title: Automatic reporting of R objects
> ### Aliases: report
> 
> ### ** Examples
> 
> 
> library(report)
> 
> model <- t.test(mtcars$mpg ~ mtcars$am)
> r <- report(model)
> 
> # Text
> r
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$am
(mean in group 0 = 17.15, mean in group 1 = 24.39) suggests that the effect is
negative, statistically significant, and large (difference = -7.24, 95% CI
[-11.28, -3.21], t(18.33) = -3.77, p = 0.001; Cohen's d = -1.41, 95% CI [-2.26,
-0.53])
> summary(r)
The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$am
(mean in group 0 = 17.15, mean in group 1 = 24.39) suggests that the effect is
negative, statistically significant, and large (difference = -7.24, 95% CI
[-11.28, -3.21], t(18.33) = -3.77, p = 0.001, Cohen's d = -1.41)
> 
> # Tables
> as.data.frame(r)
Welch Two Sample t-test

Parameter  |     Group | Mean_Group1 | Mean_Group2 | Difference
---------------------------------------------------------------
mtcars$mpg | mtcars$am |       17.15 |       24.39 |      -7.24

Parameter  |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI
----------------------------------------------------------------------------
mtcars$mpg | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53]

Alternative hypothesis: two.sided> summary(as.data.frame(r))
Difference |          95% CI | t(18.33) |     p | Cohen's d |  Cohen's d  CI
----------------------------------------------------------------------------
-7.24      | [-11.28, -3.21] |    -3.77 | 0.001 |     -1.41 | [-2.26, -0.53]

Alternative hypothesis: two.sided> 
> 
> 
> 
> cleanEx()
> nameEx("report.aov")
> ### * report.aov
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.aov
> ### Title: Reporting ANOVAs
> ### Aliases: report.aov report_effectsize.aov report_table.aov
> ###   report_statistics.aov report_parameters.aov report_model.aov
> ###   report_info.aov report_text.aov
> 
> ### ** Examples
> 
> data <- iris
> data$Cat1 <- rep(c("A", "B"), length.out = nrow(data))
> 
> model <- aov(Sepal.Length ~ Species * Cat1, data = data)
> r <- report(model)
> r
The ANOVA (formula: Sepal.Length ~ Species * Cat1) suggests that:

  - The main effect of Species is statistically significant and large (F(2, 144)
= 118.43, p < .001; Eta2 (partial) = 0.62, 95% CI [0.54, 1.00])
  - The main effect of Cat1 is statistically not significant and very small (F(1,
144) = 6.25e-03, p = 0.937; Eta2 (partial) = 4.34e-05, 95% CI [0.00, 1.00])
  - The interaction between Species and Cat1 is statistically not significant and
small (F(2, 144) = 0.98, p = 0.377; Eta2 (partial) = 0.01, 95% CI [0.00, 1.00])

Effect sizes were labelled following Field's (2013) recommendations.
> summary(r)
The ANOVA suggests that:

  - The main effect of Species is statistically significant and large (F(2, 144)
= 118.43, p < .001, Eta2 (partial) = 0.62)
  - The main effect of Cat1 is statistically not significant and very small (F(1,
144) = 6.25e-03, p = 0.937, Eta2 (partial) = 4.34e-05)
  - The interaction between Species and Cat1 is statistically not significant and
small (F(2, 144) = 0.98, p = 0.377, Eta2 (partial) = 0.01)
> as.data.frame(r)
Parameter    | Sum_Squares |  df | Mean_Square |        F |      p
------------------------------------------------------------------
Species      |       63.21 |   2 |       31.61 |   118.43 | < .001
Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937 
Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377 
Residuals    |       38.43 | 144 |        0.27 |          |       

Parameter    | Eta2 (partial) | Eta2_partial 95% CI
---------------------------------------------------
Species      |           0.62 |        [0.54, 1.00]
Cat1         |       4.34e-05 |        [0.00, 1.00]
Species:Cat1 |           0.01 |        [0.00, 1.00]
Residuals    |                |                    
> summary(as.data.frame(r))
Parameter    | Sum_Squares |  df | Mean_Square |        F |      p | Eta2 (partial)
-----------------------------------------------------------------------------------
Species      |       63.21 |   2 |       31.61 |   118.43 | < .001 |           0.62
Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937  |       4.34e-05
Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377  |           0.01
Residuals    |       38.43 | 144 |        0.27 |          |        |               
> 
> 
> 
> cleanEx()
> nameEx("report.bayesfactor_models")
> ### * report.bayesfactor_models
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.bayesfactor_models
> ### Title: Reporting Models' Bayes Factor
> ### Aliases: report.bayesfactor_models report.bayesfactor_inclusion
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("bayestestR", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ library(bayestestR)
+ # Bayes factor - models
+ mo0 <- lm(Sepal.Length ~ 1, data = iris)
+ mo1 <- lm(Sepal.Length ~ Species, data = iris)
+ mo2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris)
+ mo3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)
+ BFmodels <- bayesfactor_models(mo1, mo2, mo3, denominator = mo0)
+ 
+ r <- report(BFmodels)
+ r
+ 
+ # Bayes factor - inclusion
+ inc_bf <- bayesfactor_inclusion(BFmodels, prior_odds = c(1, 2, 3), match_models = TRUE)
+ 
+ r <- report(inc_bf)
+ r
+ as.data.frame(r)
+ ## Don't show: 
+ }) # examplesIf
> library(bayestestR)
> mo0 <- lm(Sepal.Length ~ 1, data = iris)
> mo1 <- lm(Sepal.Length ~ Species, data = iris)
> mo2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris)
> mo3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)
> BFmodels <- bayesfactor_models(mo1, mo2, mo3, denominator = mo0)
> r <- report(BFmodels)
> r
Bayes factors were computed using the BIC approximation, by which BF10 =
exp((BIC0 - BIC1)/2). Compared to the (Intercept only) model (the least
supported model), we found extreme evidence (BF = 1.70e+29) in favour of the
Species model; extreme evidence (BF = 5.84e+55) in favour of the Species +
Petal.Length model (the most supported model); extreme evidence (BF = 2.20e+54)
in favour of the Species * Petal.Length model.
> inc_bf <- bayesfactor_inclusion(BFmodels, prior_odds = c(1, 2, 3), match_models = TRUE)
> r <- report(inc_bf)
> r
Bayesian model averaging (BMA) was used to obtain the average evidence for each
predictor. Since each model has a prior probability (here we used subjective
prior odds of 1, 2, 3), it is possible to sum the prior probability of all
models that include a predictor of interest (the prior inclusion probability),
and of all models that do not include that predictor (the prior exclusion
probability). After the data are observed, we can similarly consider the sums
of the posterior models' probabilities to obtain the posterior inclusion
probability and the posterior exclusion probability. The change from prior to
posterior inclusion odds is the Inclusion Bayes factor. For each predictor,
averaging was done only across models that did not include any interactions
with that predictor; additionally, for each interaction predictor, averaging
was done only across models that contained the main effect from which the
interaction predictor was comprised. This was done to prevent Inclusion Bayes
factors from being contaminated with non-relevant evidence (see Mathot, 2017).
We found extreme evidence (BF = 3.90e+55) in favour of including Species, with
models including Species having an overall posterior probability of 95%;
extreme evidence (BF = 6.89e+26) in favour of including Petal.Length, with
models including Petal.Length having an overall posterior probability of 95%;
strong evidence (BF = 1/26.52) against including Petal.Length:Species, with
models including Petal.Length:Species having an overall posterior probability
of 5%.
> as.data.frame(r)
Terms                | Pr(prior) | Pr(posterior) | Inclusion BF
---------------------------------------------------------------
Species              |      0.43 |          0.95 |       128.00
Petal.Length         |      0.29 |          0.95 |        61.80
Petal.Length:Species |      0.43 |          0.05 |  1/-3.05e-01

Across matched models only.
With custom prior odds of [1, 2, 3].> ## End(Don't show)
> 
> 
> 
> cleanEx()

detaching ‘package:bayestestR’

> nameEx("report.brmsfit")
> ### * report.brmsfit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.brmsfit
> ### Title: Reporting Bayesian Models from brms
> ### Aliases: report.brmsfit
> 
> ### ** Examples
> 
> ## Don't show: 
> if (require("brms", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
Loading 'brms' package (version 2.20.4). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').

Attaching package: ‘brms’

The following object is masked from ‘package:stats’:

    ar

> ## End(Don't show)
> 
> 
> 
> cleanEx()

detaching ‘package:brms’, ‘package:Rcpp’

> nameEx("report.compare.loo")
> ### * report.compare.loo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.compare.loo
> ### Title: Reporting Bayesian Model Comparison
> ### Aliases: report.compare.loo
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("brms", quietly = TRUE) && requireNamespace("RcppEigen", quietly = TRUE) && requireNamespace("BH", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report.compare_performance")
> ### * report.compare_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.compare_performance
> ### Title: Reporting models comparison
> ### Aliases: report.compare_performance report_table.compare_performance
> ###   report_statistics.compare_performance
> ###   report_parameters.compare_performance report_text.compare_performance
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report.data.frame")
> ### * report.data.frame
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.character
> ### Title: Reporting Datasets and Dataframes
> ### Aliases: report.character report.data.frame report.factor
> ###   report.numeric
> 
> ### ** Examples
> 
> r <- report(iris,
+   centrality = "median", dispersion = FALSE,
+   distribution = TRUE, missing_percentage = TRUE
+ )
> r
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
  - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44,
range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing
  - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85,
range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing
  - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04,
range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing
  - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> summary(r)
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: Median = 5.80, range: [4.30, 7.90], Skewness = 0.31, Kurtosis =
-0.55
  - Sepal.Width: Median = 3.00, range: [2, 4.40], Skewness = 0.32, Kurtosis =
0.23
  - Petal.Length: Median = 4.35, range: [1, 6.90], Skewness = -0.27, Kurtosis =
-1.40
  - Petal.Width: Median = 1.30, range: [0.10, 2.50], Skewness = -0.10, Kurtosis =
-1.34
  - Species: 3 levels, namely setosa (n = 50), versicolor (n = 50) and virginica
(n = 50)
> as.data.frame(r)
Variable     |      Level | n_Obs | percentage_Obs | Mean |   SD | Median
-------------------------------------------------------------------------
Sepal.Length |            |   150 |                | 5.84 | 0.83 |   5.80
Sepal.Width  |            |   150 |                | 3.06 | 0.44 |   3.00
Petal.Length |            |   150 |                | 3.76 | 1.77 |   4.35
Petal.Width  |            |   150 |                | 1.20 | 0.76 |   1.30
Species      |     setosa |    50 |          33.33 |      |      |       
Species      | versicolor |    50 |          33.33 |      |      |       
Species      |  virginica |    50 |          33.33 |      |      |       

Variable     |  MAD |  Min |  Max | Skewness | Kurtosis | percentage_Missing
----------------------------------------------------------------------------
Sepal.Length | 1.04 | 4.30 | 7.90 |     0.31 |    -0.55 |                  0
Sepal.Width  | 0.44 | 2.00 | 4.40 |     0.32 |     0.23 |                  0
Petal.Length | 1.85 | 1.00 | 6.90 |    -0.27 |    -1.40 |                  0
Petal.Width  | 1.04 | 0.10 | 2.50 |    -0.10 |    -1.34 |                  0
Species      |      |      |      |          |          |                   
Species      |      |      |      |          |          |                   
Species      |      |      |      |          |          |                   
> summary(as.data.frame(r))
Variable     |      Level | n_Obs | percentage_Obs | Median |  Min |  Max
-------------------------------------------------------------------------
Sepal.Length |            |       |                |   5.80 | 4.30 | 7.90
Sepal.Width  |            |       |                |   3.00 | 2.00 | 4.40
Petal.Length |            |       |                |   4.35 | 1.00 | 6.90
Petal.Width  |            |       |                |   1.30 | 0.10 | 2.50
Species      |     setosa |    50 |          33.33 |        |      |     
Species      | versicolor |    50 |          33.33 |        |      |     
Species      |  virginica |    50 |          33.33 |        |      |     

Variable     | Skewness | Kurtosis | percentage_Missing
-------------------------------------------------------
Sepal.Length |     0.31 |    -0.55 |                  0
Sepal.Width  |     0.32 |     0.23 |                  0
Petal.Length |    -0.27 |    -1.40 |                  0
Petal.Width  |    -0.10 |    -1.34 |                  0
Species      |          |          |                   
Species      |          |          |                   
Species      |          |          |                   
> 
> ## Don't show: 
> if (requireNamespace("dplyr", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # grouped analysis using `{dplyr}` package
+ library(dplyr)
+ r <- iris %>%
+   group_by(Species) %>%
+   report()
+ r
+ summary(r)
+ as.data.frame(r)
+ summary(as.data.frame(r))
+ ## Don't show: 
+ }) # examplesIf
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> r <- iris %>% group_by(Species) %>% report()
> r
The data contains 150 observations, grouped by Species, of the following 5
variables:

- setosa (n = 50):
  - Sepal.Length: n = 50, Mean = 5.01, SD = 0.35, Median = 5.00, MAD = 0.30,
range: [4.30, 5.80], Skewness = 0.12, Kurtosis = -0.25, 0 missing
  - Sepal.Width: n = 50, Mean = 3.43, SD = 0.38, Median = 3.40, MAD = 0.37,
range: [2.30, 4.40], Skewness = 0.04, Kurtosis = 0.95, 0 missing
  - Petal.Length: n = 50, Mean = 1.46, SD = 0.17, Median = 1.50, MAD = 0.15,
range: [1, 1.90], Skewness = 0.11, Kurtosis = 1.02, 0 missing
  - Petal.Width: n = 50, Mean = 0.25, SD = 0.11, Median = 0.20, MAD = 0.00,
range: [0.10, 0.60], Skewness = 1.25, Kurtosis = 1.72, 0 missing

- versicolor (n = 50):
  - Sepal.Length: n = 50, Mean = 5.94, SD = 0.52, Median = 5.90, MAD = 0.52,
range: [4.90, 7], Skewness = 0.11, Kurtosis = -0.53, 0 missing
  - Sepal.Width: n = 50, Mean = 2.77, SD = 0.31, Median = 2.80, MAD = 0.30,
range: [2, 3.40], Skewness = -0.36, Kurtosis = -0.37, 0 missing
  - Petal.Length: n = 50, Mean = 4.26, SD = 0.47, Median = 4.35, MAD = 0.52,
range: [3, 5.10], Skewness = -0.61, Kurtosis = 0.05, 0 missing
  - Petal.Width: n = 50, Mean = 1.33, SD = 0.20, Median = 1.30, MAD = 0.22,
range: [1, 1.80], Skewness = -0.03, Kurtosis = -0.41, 0 missing

- virginica (n = 50):
  - Sepal.Length: n = 50, Mean = 6.59, SD = 0.64, Median = 6.50, MAD = 0.59,
range: [4.90, 7.90], Skewness = 0.12, Kurtosis = 0.03, 0 missing
  - Sepal.Width: n = 50, Mean = 2.97, SD = 0.32, Median = 3.00, MAD = 0.30,
range: [2.20, 3.80], Skewness = 0.37, Kurtosis = 0.71, 0 missing
  - Petal.Length: n = 50, Mean = 5.55, SD = 0.55, Median = 5.55, MAD = 0.67,
range: [4.50, 6.90], Skewness = 0.55, Kurtosis = -0.15, 0 missing
  - Petal.Width: n = 50, Mean = 2.03, SD = 0.27, Median = 2.00, MAD = 0.30,
range: [1.40, 2.50], Skewness = -0.13, Kurtosis = -0.60, 0 missing
> summary(r)
The data contains 150 observations, grouped by Species, of the following 5
variables:

- setosa (n = 50):
  - Sepal.Length: Mean = 5.01, SD = 0.35, range: [4.30, 5.80]
  - Sepal.Width: Mean = 3.43, SD = 0.38, range: [2.30, 4.40]
  - Petal.Length: Mean = 1.46, SD = 0.17, range: [1, 1.90]
  - Petal.Width: Mean = 0.25, SD = 0.11, range: [0.10, 0.60]

- versicolor (n = 50):
  - Sepal.Length: Mean = 5.94, SD = 0.52, range: [4.90, 7]
  - Sepal.Width: Mean = 2.77, SD = 0.31, range: [2, 3.40]
  - Petal.Length: Mean = 4.26, SD = 0.47, range: [3, 5.10]
  - Petal.Width: Mean = 1.33, SD = 0.20, range: [1, 1.80]

- virginica (n = 50):
  - Sepal.Length: Mean = 6.59, SD = 0.64, range: [4.90, 7.90]
  - Sepal.Width: Mean = 2.97, SD = 0.32, range: [2.20, 3.80]
  - Petal.Length: Mean = 5.55, SD = 0.55, range: [4.50, 6.90]
  - Petal.Width: Mean = 2.03, SD = 0.27, range: [1.40, 2.50]
> as.data.frame(r)
Group      |     Variable | n_Obs | Mean |   SD | Median |  MAD |  Min |  Max
-----------------------------------------------------------------------------
setosa     | Sepal.Length |    50 | 5.01 | 0.35 |   5.00 | 0.30 | 4.30 | 5.80
setosa     |  Sepal.Width |    50 | 3.43 | 0.38 |   3.40 | 0.37 | 2.30 | 4.40
setosa     | Petal.Length |    50 | 1.46 | 0.17 |   1.50 | 0.15 | 1.00 | 1.90
setosa     |  Petal.Width |    50 | 0.25 | 0.11 |   0.20 | 0.00 | 0.10 | 0.60
versicolor | Sepal.Length |    50 | 5.94 | 0.52 |   5.90 | 0.52 | 4.90 | 7.00
versicolor |  Sepal.Width |    50 | 2.77 | 0.31 |   2.80 | 0.30 | 2.00 | 3.40
versicolor | Petal.Length |    50 | 4.26 | 0.47 |   4.35 | 0.52 | 3.00 | 5.10
versicolor |  Petal.Width |    50 | 1.33 | 0.20 |   1.30 | 0.22 | 1.00 | 1.80
virginica  | Sepal.Length |    50 | 6.59 | 0.64 |   6.50 | 0.59 | 4.90 | 7.90
virginica  |  Sepal.Width |    50 | 2.97 | 0.32 |   3.00 | 0.30 | 2.20 | 3.80
virginica  | Petal.Length |    50 | 5.55 | 0.55 |   5.55 | 0.67 | 4.50 | 6.90
virginica  |  Petal.Width |    50 | 2.03 | 0.27 |   2.00 | 0.30 | 1.40 | 2.50

Group      | Skewness | Kurtosis | n_Missing
--------------------------------------------
setosa     |     0.12 |    -0.25 |         0
setosa     |     0.04 |     0.95 |         0
setosa     |     0.11 |     1.02 |         0
setosa     |     1.25 |     1.72 |         0
versicolor |     0.11 |    -0.53 |         0
versicolor |    -0.36 |    -0.37 |         0
versicolor |    -0.61 |     0.05 |         0
versicolor |    -0.03 |    -0.41 |         0
virginica  |     0.12 |     0.03 |         0
virginica  |     0.37 |     0.71 |         0
virginica  |     0.55 |    -0.15 |         0
virginica  |    -0.13 |    -0.60 |         0
> summary(as.data.frame(r))
Group      |     Variable | Mean |   SD |  Min |  Max | n_Missing
-----------------------------------------------------------------
setosa     | Sepal.Length | 5.01 | 0.35 | 4.30 | 5.80 |         0
setosa     |  Sepal.Width | 3.43 | 0.38 | 2.30 | 4.40 |         0
setosa     | Petal.Length | 1.46 | 0.17 | 1.00 | 1.90 |         0
setosa     |  Petal.Width | 0.25 | 0.11 | 0.10 | 0.60 |         0
versicolor | Sepal.Length | 5.94 | 0.52 | 4.90 | 7.00 |         0
versicolor |  Sepal.Width | 2.77 | 0.31 | 2.00 | 3.40 |         0
versicolor | Petal.Length | 4.26 | 0.47 | 3.00 | 5.10 |         0
versicolor |  Petal.Width | 1.33 | 0.20 | 1.00 | 1.80 |         0
virginica  | Sepal.Length | 6.59 | 0.64 | 4.90 | 7.90 |         0
virginica  |  Sepal.Width | 2.97 | 0.32 | 2.20 | 3.80 |         0
virginica  | Petal.Length | 5.55 | 0.55 | 4.50 | 6.90 |         0
virginica  |  Petal.Width | 2.03 | 0.27 | 1.40 | 2.50 |         0
> ## End(Don't show)
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("report.default")
> ### * report.default
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.default
> ### Title: Template to add report support for new objects
> ### Aliases: report.default report_effectsize.default report_table.default
> ###   report_statistics.default report_parameters.default
> ###   report_intercept.default report_model.default report_random.default
> ###   report_priors.default report_performance.default report_info.default
> ###   report_text.default
> 
> ### ** Examples
> 
> library(report)
> 
> # Add a reproducible example instead of the following
> model <- lm(Sepal.Length ~ Petal.Length * Species, data = iris)
> r <- report(model)
> r
We fitted a linear model (estimated using OLS) to predict Sepal.Length with
Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species). The
model explains a statistically significant and substantial proportion of
variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's
intercept, corresponding to Petal.Length = 0 and Species = setosa, is at 4.21
(95% CI [3.41, 5.02], t(144) = 10.34, p < .001). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation.
> summary(r)
We fitted a linear model to predict Sepal.Length with Petal.Length and Species.
The model's explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The
model's intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97)
> as.data.frame(r)
Parameter                           | Coefficient |         95% CI | t(144)
---------------------------------------------------------------------------
(Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34
Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96
Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02
Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97
Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97
Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56
                                    |             |                |       
AIC                                 |             |                |       
AICc                                |             |                |       
BIC                                 |             |                |       
R2                                  |             |                |       
R2 (adj.)                           |             |                |       
Sigma                               |             |                |       

Parameter                           |      p | Std. Coef. | Std. Coef. 95% CI |    Fit
--------------------------------------------------------------------------------------
(Intercept)                         | < .001 |       0.49 |    [-1.03,  2.01] |       
Petal Length                        | 0.052  |       1.16 |    [-0.01,  2.32] |       
Species [versicolor]                | 0.003  |      -0.88 |    [-2.41,  0.65] |       
Species [virginica]                 | < .001 |      -1.75 |    [-3.32, -0.18] |       
Petal Length × Species [versicolor] | 0.334  |       0.61 |    [-0.63,  1.85] |       
Petal Length × Species [virginica]  | 0.120  |       0.97 |    [-0.26,  2.19] |       
                                    |        |            |                   |       
AIC                                 |        |            |                   | 106.77
AICc                                |        |            |                   | 107.56
BIC                                 |        |            |                   | 127.84
R2                                  |        |            |                   |   0.84
R2 (adj.)                           |        |            |                   |   0.83
Sigma                               |        |            |                   |   0.34
> summary(as.data.frame(r))
Parameter                           | Coefficient |         95% CI | t(144)
---------------------------------------------------------------------------
(Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34
Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96
Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02
Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97
Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97
Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56
                                    |             |                |       
AICc                                |             |                |       
R2                                  |             |                |       
R2 (adj.)                           |             |                |       
Sigma                               |             |                |       

Parameter                           |      p | Std. Coef. |    Fit
------------------------------------------------------------------
(Intercept)                         | < .001 |       0.49 |       
Petal Length                        | 0.052  |       1.16 |       
Species [versicolor]                | 0.003  |      -0.88 |       
Species [virginica]                 | < .001 |      -1.75 |       
Petal Length × Species [versicolor] | 0.334  |       0.61 |       
Petal Length × Species [virginica]  | 0.120  |       0.97 |       
                                    |        |            |       
AICc                                |        |            | 107.56
R2                                  |        |            |   0.84
R2 (adj.)                           |        |            |   0.83
Sigma                               |        |            |   0.34
> 
> 
> 
> cleanEx()
> nameEx("report.estimate_contrasts")
> ### * report.estimate_contrasts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.estimate_contrasts
> ### Title: Reporting 'estimate_contrasts' objects
> ### Aliases: report.estimate_contrasts report_table.estimate_contrasts
> ###   report_text.estimate_contrasts
> 
> ### ** Examples
> 
> ## Don't show: 
> if (all(insight::check_if_installed(c("modelbased", "marginaleffects", "collapse", "Formula"), quietly = TRUE))) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ library(modelbased)
+ model <- lm(Sepal.Width ~ Species, data = iris)
+ contr <- estimate_contrasts(model)
+ report(contr)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report.htest")
> ### * report.htest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.htest
> ### Title: Reporting 'htest' objects (Correlation, t-test...)
> ### Aliases: report.htest report_effectsize.htest report_table.htest
> ###   report_statistics.htest report_parameters.htest report_model.htest
> ###   report_info.htest report_text.htest
> 
> ### ** Examples
> 
> # t-tests
> report(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66,
-3.76])
> report(t.test(iris$Sepal.Width, iris$Sepal.Length, var.equal = TRUE))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(298) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.61,
-3.80])
> report(t.test(mtcars$mpg ~ mtcars$vs))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$vs
(mean in group 0 = 16.62, mean in group 1 = 24.56) suggests that the effect is
negative, statistically significant, and large (difference = -7.94, 95% CI
[-11.46, -4.42], t(22.72) = -4.67, p < .001; Cohen's d = -1.70, 95% CI [-2.55,
-0.82])
> report(t.test(mtcars$mpg, mtcars$vs, paired = TRUE), verbose = FALSE)
Effect sizes were labelled following Cohen's (1988) recommendations.

The Paired t-test testing the difference between mtcars$mpg and mtcars$vs (mean
difference = 19.65) suggests that the effect is positive, statistically
significant, and large (difference = 19.65, 95% CI [17.60, 21.71], t(31) =
19.49, p < .001; Cohen's d = 3.45, 95% CI [2.52, 4.36])
> report(t.test(iris$Sepal.Width, mu = 1))
Effect sizes were labelled following Cohen's (1988) recommendations.

The One Sample t-test testing the difference between iris$Sepal.Width (mean =
3.06) and mu = 1 suggests that the effect is positive, statistically
significant, and large (difference = 2.06, 95% CI [2.99, 3.13], t(149) = 57.81,
p < .001; Cohen's d = 4.72, 95% CI [4.15, 5.27])
> 
> # Correlations
> report(cor.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Funder's (2019) recommendations.

The Pearson's product-moment correlation between iris$Sepal.Width and
iris$Sepal.Length is negative, statistically not significant, and small (r =
-0.12, 95% CI [-0.27, 0.04], t(148) = -1.44, p = 0.152)
> 
> 
> 
> cleanEx()
> nameEx("report.lavaan")
> ### * report.lavaan
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.lavaan
> ### Title: Reports of Structural Equation Models (SEM)
> ### Aliases: report.lavaan report_performance.lavaan
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("lavaan", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report.lm")
> ### * report.lm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.lm
> ### Title: Reporting (General) Linear Models
> ### Aliases: report.lm report_effectsize.lm report_table.lm
> ###   report_statistics.lm report_parameters.lm report_intercept.lm
> ###   report_model.lm report_performance.lm report_info.lm report_text.lm
> ###   report_random.merMod
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report.sessionInfo")
> ### * report.sessionInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.sessionInfo
> ### Title: Report R environment (packages, system, etc.)
> ### Aliases: report.sessionInfo report_packages cite_packages report_system
> 
> ### ** Examples
> 
> 
> library(report)
> 
> session <- sessionInfo()
> 
> r <- report(session)
> r
Analyses were conducted using the R Statistical language (version 4.3.3; R Core
Team, 2024) on Ubuntu 24.04.3 LTS, using the packages report (version 0.6.1.3;
Makowski D et al., 2023).

References
----------
  - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023).
“Automated Results Reporting as a Practical Tool to Improve Reproducibility and
Methodological Best Practices Adoption.” _CRAN_.
<https://easystats.github.io/report/>.
  - R Core Team (2024). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.
> summary(r)
The analysis was done using the R Statistical language (v4.3.3; R Core Team,
2024) on Ubuntu 24.04.3 LTS, using the packages report (v0.6.1.3).
> as.data.frame(r)
Package | Version |                                                                                                                                                                                                                                             Reference
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R       |   4.3.3 |                                                                                 R Core Team (2024). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.
report  | 0.6.1.3 | Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption.” _CRAN_. <https://easystats.github.io/report/>.
> summary(as.data.frame(r))
Package | Version
-----------------
R       |   4.3.3
report  | 0.6.1.3
> 
> # Convenience functions
> report_packages(include_R = FALSE)
  - report (version 0.6.1.3; Makowski D et al., 2023)> cite_packages(prefix = "> ")
> Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023). “Automated Results Reporting as a Practical Tool to Improve Reproducibility and Methodological Best Practices Adoption.” _CRAN_. <https://easystats.github.io/report/>.
> R Core Team (2024). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.> report_system()
Analyses were conducted using the R Statistical language (version 4.3.3; R Core
Team, 2024) on Ubuntu 24.04.3 LTS
> 
> 
> 
> 
> cleanEx()
> nameEx("report.stanreg")
> ### * report.stanreg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.stanreg
> ### Title: Reporting Bayesian Models
> ### Aliases: report.stanreg
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report.test_performance")
> ### * report.test_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.test_performance
> ### Title: Reporting models comparison
> ### Aliases: report.test_performance report_table.test_performance
> ###   report_statistics.test_performance report_parameters.test_performance
> ###   report_text.test_performance
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_date")
> ### * report_date
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_date
> ### Title: Miscellaneous reports
> ### Aliases: report_date report_story
> 
> ### ** Examples
> 
> library(report)
> 
> report_date()
It's Sunday, August 31 of the year 2025, at  4am 14 and 07 seconds
> summary(report_date())
31/08/25 - 04:14:07
> report_story()
Did you ever hear the tragedy of Darth Plagueis The Wise? I thought not. It's
not a story the Jedi would tell you. It's a Sith legend. Darth Plagueis was a
Dark Lord of the Sith, so powerful and so wise he could use the Force to
influence the midichlorians to create life... He had such a knowledge of the
dark side that he could even keep the ones he cared about from dying. The dark
side of the Force is a pathway to many abilities some consider to be unnatural.
He became so powerful... the only thing he was afraid of was losing his power,
which eventually, of course, he did. Unfortunately, he taught his apprentice
everything he knew, then his apprentice killed him in his sleep. Ironic. He
could save others from death, but not himself.
> 
> 
> 
> cleanEx()
> nameEx("report_effectsize")
> ### * report_effectsize
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_effectsize
> ### Title: Report the effect size(s) of a model or a test
> ### Aliases: report_effectsize
> 
> ### ** Examples
> 
> library(report)
> 
> # h-tests
> report_effectsize(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations. 

large (Cohen's d = -4.21, 95% CI [-4.66, -3.76])> 
> # ANOVAs
> report_effectsize(aov(Sepal.Length ~ Species, data = iris))
Effect sizes were labelled following Field's (2013) recommendations. 

large (Eta2 = 0.62, 95% CI [0.54, 1.00])> 
> # GLMs
> report_effectsize(lm(Sepal.Length ~ Petal.Length * Species, data = iris))
Effect sizes were labelled following Cohen's (1988) recommendations. 

small (Std. beta = 0.49, 95% CI [-1.03, 2.01])
large (Std. beta = 1.16, 95% CI [-0.01, 2.32])
large (Std. beta = -0.88, 95% CI [-2.41, 0.65])
large (Std. beta = -1.75, 95% CI [-3.32, -0.18])
medium (Std. beta = 0.61, 95% CI [-0.63, 1.85])
large (Std. beta = 0.97, 95% CI [-0.26, 2.19])> report_effectsize(glm(vs ~ disp, data = mtcars, family = "binomial"))
Effect sizes were labelled following Cohen's (1988) recommendations. 

small (Std. beta = -0.85, 95% CI [-2.42, 0.27])
large (Std. beta = -2.68, 95% CI [-4.90, -1.27])> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_info")
> ### * report_info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_info
> ### Title: Report additional information
> ### Aliases: report_info
> 
> ### ** Examples
> 
> library(report)
> 
> # h-tests
> report_info(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.> 
> # ANOVAs
> report_info(aov(Sepal.Length ~ Species, data = iris))
Effect sizes were labelled following Field's (2013) recommendations.> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_intercept")
> ### * report_intercept
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_intercept
> ### Title: Report intercept
> ### Aliases: report_intercept
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_model")
> ### * report_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_model
> ### Title: Report the model type
> ### Aliases: report_model
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_parameters")
> ### * report_parameters
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_parameters
> ### Title: Report the parameters of a model
> ### Aliases: report_parameters
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_participants")
> ### * report_participants
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_participants
> ### Title: Reporting the participant data
> ### Aliases: report_participants
> 
> ### ** Examples
> 
> library(report)
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42),
+   "Sex" = c("Intersex", "F", "M", "M", "NA", NA),
+   "Gender" = c("N", "W", "W", "M", "NA", NA)
+ )
> report_participants(data, age = "Age", sex = "Sex")
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing)"
> 
> # Years of education (relative to high school graduation)
> data$Education <- c(0, 8, -3, -5, 3, 5)
> report_participants(data,
+   age = "Age", sex = "Sex", gender = "Gender",
+   education = "Education"
+ )
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Mean education = 1.3, SD = 4.9, range: [-5, 8])"
> 
> # Education as factor
> data$Education2 <- c(
+   "Bachelor", "PhD", "Highschool",
+   "Highschool", "Bachelor", "Bachelor"
+ )
> report_participants(data, age = "Age", sex = "Sex", gender = "Gender", education = "Education2")
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Education: Bachelor, 50.00%; Highschool, 33.33%; PhD, 16.67%)"
> 
> # Country
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),
+   "Sex" = c("Intersex", "F", "F", "M", "M", "M", "F", "F", "F", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M", "W", "W", "W", "W", "W"),
+   "Country" = c(
+     "USA", NA, "Canada", "Canada", "India", "Germany",
+     "USA", "USA", "USA", "USA", "Canada"
+   )
+ )
> report_participants(data)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 27.27% other)"
> 
> # Country, control presentation treshold
> report_participants(data, threshold = 5)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 9.09% Germany, 9.09% India, 9.09% missing)"
> 
> # Race/ethnicity
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),
+   "Sex" = c("Intersex", "F", "F", "M", "M", "M", "F", "F", "F", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M", "W", "W", "W", "W", "W"),
+   "Race" = c(
+     "Black", NA, "White", "Asian", "Black", "Arab", "Black",
+     "White", "Asian", "Southeast Asian", "Mixed"
+   )
+ )
> report_participants(data)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 36.36% other)"
> 
> # Race/ethnicity, control presentation treshold
> report_participants(data, threshold = 5)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 9.09% Arab, 9.09% Mixed, 9.09% Southeast Asian, 9.09% missing)"
> 
> # Repeated measures data
> data <- data.frame(
+   "Age" = c(22, 22, 54, 54, 8, 8),
+   "Sex" = c("I", "F", "M", "M", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M"),
+   "Participant" = c("S1", "S1", "s2", "s2", "s3", "s3")
+ )
> report_participants(data, age = "Age", sex = "Sex", gender = "Gender", participants = "Participant")
[1] "3 participants (Mean age = 28.0, SD = 23.6, range: [8, 54]; Sex: 33.3% females, 33.3% males, 33.3% other; Gender: 33.3% women, 33.3% men, 33.33% non-binary)"
> 
> # Grouped data
> data <- data.frame(
+   "Age" = c(22, 22, 54, 54, 8, 8, 42, 42),
+   "Sex" = c("I", "I", "M", "M", "F", "F", "F", "F"),
+   "Gender" = c("N", "N", "W", "M", "M", "M", "Non-Binary", "Non-Binary"),
+   "Participant" = c("S1", "S1", "s2", "s2", "s3", "s3", "s4", "s4"),
+   "Condition" = c("A", "A", "A", "A", "B", "B", "B", "B")
+ )
> 
> report_participants(data,
+   age = "Age",
+   sex = "Sex",
+   gender = "Gender",
+   participants = "Participant",
+   by = "Condition"
+ )
[1] "For the 'Condition - A' group: 2 participants (Mean age = 38.0, SD = 22.6, range: [22, 54]; Sex: 0.0% females, 50.0% males, 50.0% other; Gender: 50.0% women, 0.0% men, 50.00% non-binary) and for the 'Condition - B' group: 2 participants (Mean age = 25.0, SD = 24.0, range: [8, 42]; Sex: 100.0% females, 0.0% males, 0.0% other; Gender: 0.0% women, 50.0% men, 50.00% non-binary)"
> 
> # Spell sample size
> paste(
+   report_participants(data, participants = "Participant", spell_n = TRUE),
+   "were recruited in the study by means of torture and coercion."
+ )
[1] "Four participants (Mean age = 31.5, SD = 20.5, range: [8, 54]; Sex: 50.0% females, 25.0% males, 25.0% other; Gender: 25.0% women, 25.0% men, 50.00% non-binary) were recruited in the study by means of torture and coercion."
> 
> 
> 
> cleanEx()
> nameEx("report_performance")
> ### * report_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_performance
> ### Title: Report the model's quality and fit indices
> ### Aliases: report_performance
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("lavaan", quietly = TRUE) && packageVersion("effectsize") >= "0.6.0.1") (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_priors")
> ### * report_priors
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_priors
> ### Title: Report priors of Bayesian models
> ### Aliases: report_priors
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_random")
> ### * report_random
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_random
> ### Title: Report random effects and factors
> ### Aliases: report_random
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("brms", quietly = TRUE) && packageVersion("rstan") >= "2.26.0") (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_s")
> ### * report_s
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_s
> ### Title: Report S- and p-values in easy language.
> ### Aliases: report_s
> 
> ### ** Examples
> 
> report_s(s = 1.5)
If the test hypothesis (parameter = 0) and all model assumptions were
  true, there is a 35% chance of observing this outcome. How weird is
  that? It's hardly more surprising than getting 2 heads in a row with
  fair coin tosses.
> report_s(p = 0.05)
If the test hypothesis (parameter = 0) and all model assumptions were
  true, there is a 5% chance of observing this outcome. How weird is that?
  It's hardly more surprising than getting 4 heads in a row with fair coin
  tosses.
> 
> 
> 
> cleanEx()
> nameEx("report_sample")
> ### * report_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_sample
> ### Title: Sample Description
> ### Aliases: report_sample
> 
> ### ** Examples
> 
> library(report)
> 
> report_sample(iris[, 1:4])
# Descriptive Statistics

Variable               |     Summary
------------------------------------
Mean Sepal.Length (SD) | 5.84 (0.83)
Mean Sepal.Width (SD)  | 3.06 (0.44)
Mean Petal.Length (SD) | 3.76 (1.77)
Mean Petal.Width (SD)  | 1.20 (0.76)
> report_sample(iris, select = c("Sepal.Length", "Petal.Length", "Species"))
# Descriptive Statistics

Variable                |     Summary
-------------------------------------
Mean Sepal.Length (SD)  | 5.84 (0.83)
Mean Petal.Length (SD)  | 3.76 (1.77)
Species [setosa], %     |        33.3
Species [versicolor], % |        33.3
Species [virginica], %  |        33.3
> report_sample(iris, by = "Species")
# Descriptive Statistics

Variable               | setosa (n=50) | versicolor (n=50) | virginica (n=50) | Total (n=150)
---------------------------------------------------------------------------------------------
Mean Sepal.Length (SD) |   5.01 (0.35) |       5.94 (0.52) |      6.59 (0.64) |   5.84 (0.83)
Mean Sepal.Width (SD)  |   3.43 (0.38) |       2.77 (0.31) |      2.97 (0.32) |   3.06 (0.44)
Mean Petal.Length (SD) |   1.46 (0.17) |       4.26 (0.47) |      5.55 (0.55) |   3.76 (1.77)
Mean Petal.Width (SD)  |   0.25 (0.11) |       1.33 (0.20) |      2.03 (0.27) |   1.20 (0.76)
> report_sample(airquality, by = "Month", n = TRUE, total = FALSE)
# Descriptive Statistics

Variable             |            5 (n=31) |           6 (n=30)
---------------------------------------------------------------
Mean Ozone (SD), n   |   23.62 (22.22), 26 |   29.44 (18.21), 9
Mean Solar.R (SD), n | 181.30 (115.08), 27 | 190.17 (92.88), 30
Mean Wind (SD), n    |    11.62 (3.53), 31 |   10.27 (3.77), 30
Mean Temp (SD), n    |    65.55 (6.85), 31 |   79.10 (6.60), 30
Mean Day (SD), n     |    16.00 (9.09), 31 |   15.50 (8.80), 30

Variable             |           7 (n=31) |           8 (n=31) |   9 (n=30) (n=153)
-----------------------------------------------------------------------------------
Mean Ozone (SD), n   |  59.12 (31.64), 26 |  59.96 (39.68), 26 |  31.45 (24.14), 29
Mean Solar.R (SD), n | 216.48 (80.57), 31 | 171.86 (76.83), 28 | 167.43 (79.12), 30
Mean Wind (SD), n    |    8.94 (3.04), 31 |    8.79 (3.23), 31 |   10.18 (3.46), 30
Mean Temp (SD), n    |   83.90 (4.32), 31 |   83.97 (6.59), 31 |   76.90 (8.36), 30
Mean Day (SD), n     |   16.00 (9.09), 31 |   16.00 (9.09), 31 |   15.50 (8.80), 30
> 
> # confidence intervals for proportions
> set.seed(123)
> d <- data.frame(x = factor(sample(letters[1:3], 100, TRUE, c(0.01, 0.39, 0.6))))
> report_sample(d, ci = 0.95, ci_method = "wald") # ups, negative CI
# Descriptive Statistics

Variable |           Summary
----------------------------
x [a], % |   1.0 [-1.0, 3.0]
x [b], % | 39.0 [29.4, 48.6]
x [c], % | 60.0 [50.4, 69.6]
> report_sample(d, ci = 0.95, ci_method = "wilson") # negative CI fixed
# Descriptive Statistics

Variable |           Summary
----------------------------
x [a], % |    1.0 [0.2, 5.4]
x [b], % | 39.0 [30.0, 48.8]
x [c], % | 60.0 [50.2, 69.1]
> report_sample(d, ci = 0.95, ci_correct = TRUE) # continuity correction
# Descriptive Statistics

Variable |           Summary
----------------------------
x [a], % |    1.0 [0.1, 6.2]
x [b], % | 39.0 [29.6, 49.3]
x [c], % | 60.0 [49.7, 69.5]
> 
> 
> 
> cleanEx()
> nameEx("report_statistics")
> ### * report_statistics
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_statistics
> ### Title: Report the statistics of a model
> ### Aliases: report_statistics
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_table")
> ### * report_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_table
> ### Title: Report a descriptive table
> ### Aliases: report_table
> 
> ### ** Examples
> 
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("lavaan", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("report_text")
> ### * report_text
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_text
> ### Title: Report a textual description of an object
> ### Aliases: report_text
> 
> ### ** Examples
> 
> library(report)
> 
> # Miscellaneous
> r <- report_text(sessionInfo())
> r
Analyses were conducted using the R Statistical language (version 4.3.3; R Core
Team, 2024) on Ubuntu 24.04.3 LTS, using the packages report (version 0.6.1.3;
Makowski D et al., 2023).

References
----------
  - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023).
“Automated Results Reporting as a Practical Tool to Improve Reproducibility and
Methodological Best Practices Adoption.” _CRAN_.
<https://easystats.github.io/report/>.
  - R Core Team (2024). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.
> summary(r)
The analysis was done using the R Statistical language (v4.3.3; R Core Team,
2024) on Ubuntu 24.04.3 LTS, using the packages report (v0.6.1.3).
> 
> # Data
> report_text(iris$Sepal.Length)
iris$Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
> report_text(as.character(round(iris$Sepal.Length, 1)))
as.character(round(iris$Sepal.Length, 1)): 35 entries, such as 5 (6.67%); 5.1
(6.00%); 6.3 (6.00%) and 32 others (0 missing)
> report_text(iris$Species)
iris$Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> report_text(iris)
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
  - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44,
range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing
  - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85,
range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing
  - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04,
range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing
  - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> 
> # h-tests
> report_text(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66,
-3.76])
> 
> # ANOVA
> r <- report_text(aov(Sepal.Length ~ Species, data = iris))
> r
The ANOVA (formula: Sepal.Length ~ Species) suggests that:

  - The main effect of Species is statistically significant and large (F(2, 147)
= 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00])

Effect sizes were labelled following Field's (2013) recommendations.
> summary(r)
The ANOVA suggests that:

  - The main effect of Species is statistically significant and large (F(2, 147)
= 119.26, p < .001, Eta2 = 0.62)
> 
> # GLMs
> r <- report_text(lm(Sepal.Length ~ Petal.Length * Species, data = iris))
> r
We fitted a linear model (estimated using OLS) to predict Sepal.Length with
Petal.Length and Species (formula: Sepal.Length ~ Petal.Length * Species). The
model explains a statistically significant and substantial proportion of
variance (R2 = 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's
intercept, corresponding to Petal.Length = 0 and Species = setosa, is at 4.21
(95% CI [3.41, 5.02], t(144) = 10.34, p < .001). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation.
> summary(r)
We fitted a linear model to predict Sepal.Length with Petal.Length and Species.
The model's explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The
model's intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97)
> 
> ## Don't show: 
> if (requireNamespace("lme4", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (requireNamespace("rstanarm", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  6.065 0.259 6.153 0.04 0.023 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
