# .github/workflows/auto-assign-copilot.yaml
name: Auto-assign Copilot on Copilot tasks
on:
  issues:
    types: [opened]

jobs:
  assign:
    name: Assign Copilot to task
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue
            
            console.log('ü§ñ Auto-assign Copilot workflow started')
            console.log(`üìã Issue #${issue.number}: "${issue.title}"`)
            console.log(`üè∑Ô∏è  Labels: ${issue.labels.map(l => l.name).join(', ')}`)
            console.log(`üë§ Issue author: ${issue.user.login}`)
            console.log(`üè† Repository: ${context.repo.owner}/${context.repo.repo}`)
            
            // Adjust condition to your template (label, title prefix, or issue type)
            const titleMatches = issue.title.startsWith("[Copilot]: ")
            const labelMatches = issue.labels.some(l => l.name.toLowerCase() === "robot :robot:")
            const isCopilotTask = titleMatches || labelMatches
            
            console.log(`üîç Title starts with "[Copilot]: ": ${titleMatches}`)
            console.log(`üîç Has "robot :robot:" label: ${labelMatches}`)
            console.log(`‚úÖ Is Copilot task: ${isCopilotTask}`)

            if (isCopilotTask) {
              console.log('üéØ Attempting to assign Copilot to the issue...')
              try {
                // Use the correct Copilot username (uppercase - matches actual bot login ID 198982749)
                console.log('üîç Assigning to: "Copilot" (Bot ID 198982749)')
                const assignmentResponse = await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  assignees: ["Copilot"]  // Correct username for the GitHub Copilot bot
                })
                
                // Wait a moment for the assignment to take effect
                await new Promise(resolve => setTimeout(resolve, 2000))
                
                // CRITICAL: Always verify assignment actually worked 
                console.log('üîç Verifying assignment took effect...')
                const updatedIssue = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number
                })
                
                const assignees = updatedIssue.data.assignees || []
                const assigneeList = assignees.map(a => `${a.login} (${a.type})`)
                console.log(`üìã Current assignees: ${assigneeList.length > 0 ? assigneeList.join(', ') : 'none'}`)
                
                // Check if Copilot is actually assigned (Bot ID 198982749)
                const copilotAssigned = assignees.some(a => 
                  a.id === 198982749 || (a.login === 'Copilot' && a.type === 'Bot')
                )
                
                if (copilotAssigned) {
                  console.log('‚úÖ SUCCESS: Copilot is actually assigned to the issue!')
                } else {
                  // Assignment API call succeeded but assignment didn't take effect
                  console.log('‚ùå FAILURE: Assignment API succeeded but Copilot is NOT actually assigned')
                  console.log('üîç This indicates the "Copilot" username may not be accessible or valid')
                  throw new Error('Assignment verification failed - Copilot not found in assignees list')
                }
                
              } catch (e) {
                console.log(`‚ùå Failed to assign Copilot: ${e.message}`)
                console.log(`üîç Error details: ${JSON.stringify(e, null, 2)}`)
                console.log('üîÑ Falling back to assign rempsyc...')
                try {
                  // Fallback: assign to rempsyc and keep the label so manual assignment can be done
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    assignees: ["rempsyc"]
                  })
                  console.log('‚úÖ Successfully assigned rempsyc as fallback!')
                  console.log('üí° User will need to manually assign Copilot from the GitHub UI')
                } catch (fallbackError) {
                  console.log(`‚ùå Failed to assign fallback rempsyc: ${fallbackError.message}`)
                  console.log(`üîç Fallback error details: ${JSON.stringify(fallbackError, null, 2)}`)
                  console.log('üí° Both assignment attempts failed - this indicates a deeper permissions issue')
                  throw fallbackError
                }
              }
            } else {
              console.log('‚è≠Ô∏è  Skipping assignment - not a Copilot task')
            }
            
            console.log('üèÅ Auto-assign Copilot workflow completed')
