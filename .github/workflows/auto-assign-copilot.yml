# .github/workflows/auto-assign-copilot.yaml
name: Auto-assign Copilot on Copilot tasks
on:
  issues:
    types: [opened]

jobs:
  assign:
    name: Assign Copilot to task
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue
            
            console.log('ü§ñ Auto-assign Copilot workflow started')
            console.log(`üìã Issue #${issue.number}: "${issue.title}"`)
            console.log(`üè∑Ô∏è  Labels: ${issue.labels.map(l => l.name).join(', ')}`)
            console.log(`üë§ Issue author: ${issue.user.login}`)
            console.log(`üè† Repository: ${context.repo.owner}/${context.repo.repo}`)
            
            // Adjust condition to your template (label, title prefix, or issue type)
            const titleMatches = issue.title.startsWith("[Copilot]: ")
            const labelMatches = issue.labels.some(l => l.name.toLowerCase() === "robot :robot:")
            const isCopilotTask = titleMatches || labelMatches
            
            console.log(`üîç Title starts with "[Copilot]: ": ${titleMatches}`)
            console.log(`üîç Has "robot :robot:" label: ${labelMatches}`)
            console.log(`‚úÖ Is Copilot task: ${isCopilotTask}`)

            if (isCopilotTask) {
              console.log('üéØ Attempting to assign Copilot to the issue...')
              try {
                // Try multiple Copilot username variants (testing as requested in #537)
                let assignmentSuccess = false
                let assignedUsername = ""
                
                // Try "Copilot" (uppercase - matches actual bot login)
                try {
                  console.log('üîç Trying username: "Copilot" (uppercase)')
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    assignees: ["Copilot"]
                  })
                  assignmentSuccess = true
                  assignedUsername = "Copilot"
                  console.log('‚úÖ Success with "Copilot" (uppercase)!')
                } catch (e1) {
                  console.log(`‚ùå Failed with "Copilot": ${e1.message}`)
                  
                  // Try "copilot" (lowercase - previous working approach)
                  try {
                    console.log('üîç Trying username: "copilot" (lowercase)')
                    await github.rest.issues.addAssignees({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      assignees: ["copilot"]
                    })
                    assignmentSuccess = true
                    assignedUsername = "copilot"
                    console.log('‚úÖ Success with "copilot" (lowercase)!')
                  } catch (e2) {
                    console.log(`‚ùå Failed with "copilot": ${e2.message}`)
                    
                    // Try "github-copilot" (as suggested by ChatGPT in #537)
                    try {
                      console.log('üîç Trying username: "github-copilot" (as suggested)')
                      await github.rest.issues.addAssignees({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: issue.number,
                        assignees: ["github-copilot"]
                      })
                      assignmentSuccess = true
                      assignedUsername = "github-copilot"
                      console.log('‚úÖ Success with "github-copilot"!')
                    } catch (e3) {
                      console.log(`‚ùå Failed with "github-copilot": ${e3.message}`)
                      throw new Error(`All Copilot username variants failed: Copilot, copilot, github-copilot`)
                    }
                  }
                }
                
                if (assignmentSuccess) {
                  console.log(`üéâ Successfully assigned Copilot using username: "${assignedUsername}"`)
                  
                  // Verify assignment by checking the issue
                  try {
                    const updatedIssue = await github.rest.issues.get({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number
                    })
                    const assignees = updatedIssue.data.assignees.map(a => `${a.login} (${a.type})`)
                    console.log(`üîç Verification - Current assignees: ${assignees.join(', ')}`)
                    
                    const copilotAssigned = updatedIssue.data.assignees.some(a => 
                      a.login.toLowerCase().includes('copilot') || a.type === 'Bot'
                    )
                    if (copilotAssigned) {
                      console.log('‚úÖ Verification successful: Copilot is now assigned to the issue!')
                    } else {
                      console.log('‚ö†Ô∏è  Verification warning: Assignment may not have taken effect yet')
                    }
                  } catch (verifyError) {
                    console.log(`‚ö†Ô∏è  Could not verify assignment: ${verifyError.message}`)
                  }
                }
              } catch (e) {
                console.log(`‚ùå Failed to assign copilot: ${e.message}`)
                console.log(`üîç Error details: ${JSON.stringify(e, null, 2)}`)
                console.log('üîÑ Falling back to assign rempsyc...')
                try {
                  // Fallback: assign to rempsyc, keep the label so Copilot still picks it up
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    assignees: ["rempsyc"]
                  })
                  console.log('‚úÖ Successfully assigned rempsyc as fallback!')
                } catch (fallbackError) {
                  console.log(`‚ùå Failed to assign fallback rempsyc: ${fallbackError.message}`)
                  console.log(`üîç Fallback error details: ${JSON.stringify(fallbackError, null, 2)}`)
                  console.log('üí° Both assignment attempts failed - this indicates a deeper issue')
                  throw fallbackError
                }
              }
            } else {
              console.log('‚è≠Ô∏è  Skipping assignment - not a Copilot task')
            }
            
            console.log('üèÅ Auto-assign Copilot workflow completed')
